{"version":3,"sources":["skylark-jstree-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","skylarkjs","skylark","dom","isArray","object","constructor","Array","isArrayLike","obj","isString","isHtmlNode","isFunction","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","name","value","type","Node","isNumber","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","window","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","class2type","toLowerCase","String","toString","call","types","createAssigner","keysFunc","defaults","arguments","index","source","keys","l","key","allKeys","each","callback","undef","this","extend","target","deep","slice","shift","arg","mixin","has","path","isEqual","a","b","eq","isMatch","attrs","_mixin","safe","undefined","_parseMixinArgs","params","sources","removeItem","items","item","idx","indexOf","splice","result","fallback","prop","safeMixin","values","_","clone","src","checkCloneMethod","copy","deepEq","SymbolProto","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","objects","compact","array","filter","flatten","j","inArray","makeArray","offset","startWith","concat","elements","uniq","first","n","arrays","f1","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","_constructor","fn","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","unshift","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","_construct","init","createClass","parent","innerParent","klassName","__mixins__","partial","inherit","klass","SimpleQueryEngine","query","arr","thisObject","out","cache","buildFn","execute","results","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","test","matches","QueryResults","addIterativeMethod","method","Deferred","when","isPromise","then","delegate","ArrayStore","queryEngine","idProperty","get","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","advise","dispatcher","advice","receiveArguments","signal","previous","around","advised","next","nextId","aspect","methodName","existing","executionId","before","after","newResults","defer","requestAnimationFrame","setTimeoutout","noop","proxy","context","proxyFn","TypeError","debounce","wait","timeout","later","clearTimeout","setTimeout","TMP","returnTrue","returnFalse","funcs","wrapPromise","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","Promise","__ctx__","handler","PGLISTENERS","pipe","always","done","fail","self","promise","resolve","reject","_resolve","_reject","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","dasherize","str","replace","deserializeValue","JSON","parse","trim","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","camelCase","toUpperCase","lowerFirst","charAt","serializeValue","stringify","upperFirst","getAbsoluteUrl","url","document","createElement","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","uniqueId","cidPrefix","collection","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","createEvent","funcArg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","_uid","prefix","idCounter","langx","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","isIE","exec","navigator","userAgent","support","end","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","disabled","elm","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","activeElement","doc","el","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","rxhtmlTag","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","active","blur","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","dataName","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","transitionEnd","delegateType","special","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","px","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","getOffsets","offsets","rpercent","parseCss","parseInt","getDimensions","pageY","pageX","getScrollInfo","within","overflowX","overflowY","hasOverflowX","hasOverflowY","getWithinInfo","withinElement","hasOffset","msize","posit","atOffset","targetWidth","targetHeight","targetOffset","basePosition","dimensions","of","scrollInfo","collision","at","horizontalOffset","verticalOffset","rhorizontal","rvertical","roffset","rposition","collisionPosition","using","elemWidth","elemHeight","collisionWidth","collisionHeight","myOffset","my","dir","positions","feedback","horizontal","vertical","abs","important","fit","newOverRight","withinOffset","outerWidth","collisionPosLeft","overLeft","overRight","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","flip","newOverLeft","newOverTop","flipfit","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","toArray","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","eventType","enableSelection","plugin","returnValue","plugins","instantiate","jstree","ajax","grep","parseJSON","instance_counter","ccp_node","ccp_mode","ccp_inst","themes_loaded","version","idregex","Tree","destroy","reference","needle","ignore","inst","_model","is_method","instance","core","check_callback","animation","themes","dots","icons","ellipsis","stripes","variant","responsive","expand_selected_onload","worker","force_text","dblclick_toggle","loaded_state","restore_focus","keyboard","ctrl-space","is_open","close_node","o","get_parent","get_node","get_prev_dom","is_closed","open_node","_firstChild","get_next_dom","open_all","get_container_ul","f2","edit","deco","opts","Child","_data","_id","_cnt","_wrk","last_error","working","worker_queue","focused","opt","k","force_full_redraw","redraw_timeout","default_state","loaded","opened","children_d","settings","rtl","bind","original_container_html","get_string","li_height","_create_prototype_node","load_node","keep_html","revokeObjectURL","teardown","_temp1","_temp2","_node","_kbevent_to_func","8","9","13","19","27","32","33","34","35","36","37","38","39","40","44","45","46","96","97","98","99","100","101","102","103","104","105","-13","112","113","114","115","116","117","118","119","120","121","122","123","144","145","16","17","18","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","107","109","110","186","187","188","189","190","191","192","219","220","221","222","111","106","173","which","kb","unbind","word","tout","was_click","selection","getSelection","removeAllRanges","collapse","Date","toggle_node","activate_node","f","r","vakata","array_unique","action","chr","fromCharCode","col","ind","set_theme","set_theme_variant","act","hover_node","dehover_node","ev","get_container","_nextSibling","_previousSibling","as_dom","ex","get_path","glue","ids","get_text","strict","get_children_dom","is_parent","is_loaded","is_loading","loading","is_leaf","c","_load_nodes","array_filter","failed","_load_node","has_children","is_callback","force_reload","load_all","to_load","notTextOrCommentNode","parseHTML","_append_json_data","_append_html_data","_node_changed","dat","par","chd","dpc","_parse_model_from_html","redraw","force_processing","w","df","t_id","t_cnt","rslt","parse_flat","ps","tid","icon","li_attr","a_attr","parse_nest","cnt","mod","postMessage","Worker","createObjectURL","onmessage","terminate","_parse_model_from_flat_json","_parse_model_from_json","_redraw","fe","redraw_node","full","draw_children","force_render","last_sibling","substr","backgroundImage","backgroundPosition","backgroundSize","t1","t2","ok","_open_to","original_obj","_this","close_all","is_disabled","enable_node","disable_node","is_hidden","hide_node","skip_redraw","show_node","hide_all","show_all","last_clicked","deselect_node","select_node","is_selected","deselect_all","supress_event","prevent_open","array_remove_item","select_all","old_selection","get_selected","get_top_selected","get_bottom_selected","get_state","set_state","initial_selection","refresh","skip_loading","forget_state","refresh_node","set_id","new","set_text","get_json","flat","get_icon","no_data","no_state","no_li_attr","no_a_attr","no_id","no_children","create_node","rename_node","delete_node","lft","array_remove","chk","more","chc","is_multi","functions","move_node","old_par","old_pos","new_par","old_ins","copy_node","is_foreign","old_parent","old_position","old_instance","new_instance","get_buffer","mode","can_paste","clear_buffer","default_text","h1","h2","padding","border","box-sizing","lineHeight","min","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","fontVariant","letterSpacing","wordSpacing","theme_name","theme_url","theme","get_theme","variant_name","get_theme_variant","show_stripes","hide_stripes","toggle_stripes","show_dots","hide_dots","toggle_dots","show_icons","hide_icons","toggle_icons","show_ellipsis","hide_ellipsis","toggle_ellipsis","set_icon","hide_icon","show_icon","search","fuzzy","caseSensitive","MATCH_LOCATION","MATCH_DISTANCE","distance","MATCH_THRESHOLD","threshold","patternLen","matchmask","pattern_alphabet","mask","match_bitapScore","accuracy","proximity","score","binMin","binMid","lastRd","rd","charMatch","textLen","scoreThreshold","bestLoc","binMax","locations","lastIndexOf","floor","with_values","deselected","_i","three_state","whole_node","keep_selected_style","cascade","tie_selection","cascade_to_disabled","cascade_to_hidden","uto","_undetermined","cur","selectedIds","_cascade_new_checked_state","temp","undetermined","allIds","get_undetermined","tt","tmp2","checkbox_disabled","show_checkboxes","checkboxes","hide_checkboxes","toggle_checkboxes","is_undetermined","disable_checkbox","enable_checkbox","is_checked","uncheck_node","check_node","checkedState","selectedChildIds","selectedNodeIds","selectedChildrenIds","get_checked_descendants","childId","check_all","uncheck_all","get_checked","get_top_checked","get_bottom_checked","res","conditionalselect","right_to_left","popup","Menu","$el","_options","hide_onmouseleave","_show_submenu","_execute","render","_parse","_trigger","event_name","position_x","position_y","_disabled","sep","separator_before","_class","title","label","shortcut_label","submenu","separator_after","xl","h","dw","dh","is_visible","menu","show_at_node","new_node","rename","ccp","ey","last_ts","cto","show_contextmenu","changedTouches","clientX","clientY","_show_contextmenu","dnd","open_timeout","is_draggable","check_while_dragging","always_copy","inside_pos","drag_selection","touch","large_drop_target","large_drag_target","use_html5","drg","mlt","helper","lastmv","laster","lastev","opento","marker","isDifferentNode","pr","ip","tm","is_copy","pn","ins","ref","rel","z","dataTransfer","dropEffect","_clean","strip","vakata_dnd","is_down","is_drag","helper_w","init_x","init_y","scroll_l","scroll_t","scroll_e","scroll_i","is_touch","scroll_speed","scroll_proximity","helper_left","helper_top","threshold_touch","_scroll","init_only","elementFromPoint","unselectable","onselectstart","touchAction","msTouchAction","MozUserSelect","wh","ww","dt","dl","ht","hl","massload","toLoad","case_sensitive","show_only_matches","show_only_matches_children","close_opened_onclear","search_leaves_only","search_callback","opn","som","smc","hdn","skip_async","inside","clear_search","lastRequest","ii","ttl","preserve_loaded","save_state","restore_state","st","sec","storage","clear_state","localStorage","setItem","getItem","BLANKRE","IDREGEX","escapeId","NODE_DATA_ATTR","COL_DATA_ATTR","SEARCHCLASS","SPECIAL_TITLE","styled","MINCOLWIDTH","generateCellId","tree","getIds","findDataCell","cellId","isClickedSep","toResize","oldMouseX","newMouseX","htmlstripre","copyData","fromtree","totree","recurse","findLastClosedNode","renderATitle","grid","getCellData","_guid","s4","substring","_initialize","_initialized","styles","gs","_gridSettings","treeClass","columnWidth","defaultConf","*display","*+display","isThemeroller","themeroller","treeWidthDiff","resizable","draggable","stateful","indent","sortOrder","sortAsc","caseInsensitive","fixedHeader","gridcontextmenu","treecol","gridcols","cols","columnSearch","_edit","ceil","rootid","msie","appVersion","gridWrapper","midWrapper","defaultSort","bigger","colrefs","caseInsensitiveSort","localeCompare","nodeA","nodeB","valueA","valueB","ui","sortable","axis","handle","searchColumn","searchObj","validatedSearchObj","columnIndex","column","columnValue","searchSettings","omniSearchCallback","searchValue","_detachColumns","_prepare_grid","_reattachColumns","removeNodes","_hideOrShowTree","_hide_grid","_prepare_headers","q","anchorHeight","_hover_node","nodesToShow","endTime","startTime","getTime","holdingCells","cells","_domManipulation","newtree","oldtree","gw","gridparent","_clean_grid","cl","ccl","puller","coluuid","defaultWidth","classAdd","hasHeaders","conf","borPadWidth","totalWidth","headerClass","columnClass","minWidth","maxWidth","bound","currentTree","colNum","isNaN","oldPrevHeaderInner","oldPrevColWidth","newPrevColWidth","clickedSep","newWidth","symbol","rootNode","mw","oldNodes","_hideOrShowNode","lenj","getHoldingCells","hc","grid_hide_column","grid_show_column","wcl","valClass","wideValClass","span","paddingleft","gridCellName","gridCellParentId","gridCellParent","gridCellPrev","gridCellPrevId","gridCellNext","gridCellNextId","gridCellChild","gridCellChildId","tmpWidth","highlightSearch","isClicked","closed","objData","cellClickHandler","sourceName","cellRightClickHandler","hoverInHandler","jsTreeInstance","hoverOutHandler","lid","peers","rendered","cellClass","wideCellClass","images","valueClass","valueClassPrefix","wideValueClass","wideValueClassPrefix","toRen","overflow-y","default","_delete_ids","get_rules","max_children","valid_children","max_depth","get_type","rules","set_type","old_type","old_icon","unique","trim_whitespace","duplicate","counter","wholerow","main"],"mappings":"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","file":"../skylark-jstree-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = {};\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\",\r\n    \"./objects\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: objects.each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./arrays\"\r\n],function(Deferred,arrays){\r\n    var each = arrays.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = arrays.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,funcs,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-jstree/tree',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\t\"use strict\";\r\n\r\n\tvar jstree = skylark.jstree =  skylark.jstree || {};\r\n\r\n\t$.ajax = $.ajax || function(options) {\r\n        return langx.Xhr.request(options.url,options);\r\n    };\r\n\r\n    $.camelCase = langx.camelCase;\r\n\r\n    $.each = langx.each;\r\n\r\n    $.extend = function(target) {\r\n        var deep, args = Array.prototype.slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n        \tlangx.mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    };\r\n\r\n    $.grep = function(elements, callback) {\r\n        return filter.call(elements, callback)\r\n    };\r\n\r\n    $.isArray = langx.isArray;\r\n    $.isEmptyObject = langx.isEmptyObject;\r\n    $.isFunction = langx.isFunction;\r\n    $.isWindow = langx.isWindow;\r\n    $.isPlainObject = langx.isPlainObject;\r\n\r\n    $.inArray = langx.inArray;\r\n\r\n    $.makeArray = langx.makeArray;\r\n    $.map = langx.map;\r\n\r\n    $.noop = function() {\r\n    };\r\n\r\n    $.parseJSON = window.JSON.parse;\r\n\r\n    $.proxy = langx.proxy;\r\n\r\n    $.trim = langx.trim;\r\n    $.type = langx.type;\r\n\r\n    $.fn.stop = function() {\r\n    \treturn this;\r\n    }\r\n\r\n\r\n\t/*!\r\n\t * jsTree {{VERSION}}\r\n\t * http://jstree.com/\r\n\t *\r\n\t * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\r\n\t *\r\n\t * Licensed same as jquery - under the terms of the MIT License\r\n\t *   http://www.opensource.org/licenses/mit-license.php\r\n\t */\r\n\r\n\t// prevent another load? maybe there is a better way?\r\n\tif($.jstree) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * ### jsTree core functionality\r\n\t */\r\n\r\n\t// internal variables\r\n\tvar instance_counter = 0,\r\n\t\tccp_node = false,\r\n\t\tccp_mode = false,\r\n\t\tccp_inst = false,\r\n\t\tthemes_loaded = [],\r\n\t\tsrc = $('script:last').attr('src'),\r\n\t\tdocument = window.document; // local variable is always faster to access then a global\r\n\r\n\t/**\r\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\r\n\t * @name $.jstree\r\n\t */\r\n\t$.jstree = {\r\n\t\t/**\r\n\t\t * specifies the jstree version in use\r\n\t\t * @name $.jstree.version\r\n\t\t */\r\n\t\tversion : '{{VERSION}}',\r\n\t\t/**\r\n\t\t * holds all the default options used when creating new instances\r\n\t\t * @name $.jstree.defaults\r\n\t\t */\r\n\t\tdefaults : {\r\n\t\t\t/**\r\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\r\n\t\t\t * @name $.jstree.defaults.plugins\r\n\t\t\t */\r\n\t\t\tplugins : []\r\n\t\t},\r\n\t\t/**\r\n\t\t * stores all loaded jstree plugins (used internally)\r\n\t\t * @name $.jstree.plugins\r\n\t\t */\r\n\t\tplugins : {},\r\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\r\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%?`]/g,\r\n\t\troot : '#'\r\n\t};\r\n\t\r\n\t/**\r\n\t * creates a jstree instance\r\n\t * @name $.jstree.create(el [, options])\r\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\r\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\r\n\t * @return {jsTree} the new instance\r\n\t */\r\n\t$.jstree.create = function (el, options) {\r\n\t\treturn new Tree(el,options);\r\n\t};\r\n\r\n\t/**\r\n\t * remove all traces of jstree from the DOM and destroy all instances\r\n\t * @name $.jstree.destroy()\r\n\t */\r\n\t$.jstree.destroy = function () {\r\n\t\t$('.jstree:jstree').jstree('destroy');\r\n\t\t$(document).off('.jstree');\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * get a reference to an existing instance\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\r\n\t *\t// all of there will return the same instance\r\n\t *\t$.jstree.reference('tree');\r\n\t *\t$.jstree.reference('#tree');\r\n\t *\t$.jstree.reference($('#tree'));\r\n\t *\t$.jstree.reference(document.getElementByID('tree'));\r\n\t *\t$.jstree.reference('branch');\r\n\t *\t$.jstree.reference('#branch');\r\n\t *\t$.jstree.reference($('#branch'));\r\n\t *\t$.jstree.reference(document.getElementByID('branch'));\r\n\t *\r\n\t * @name $.jstree.reference(needle)\r\n\t * @param {DOMElement|jQuery|String} needle\r\n\t * @return {jsTree|null} the instance or `null` if not found\r\n\t */\r\n\t$.jstree.reference = function (needle) {\r\n\t\tvar tmp = null,\r\n\t\t\tobj = null;\r\n\t\tif(needle && needle.id && (!needle.tagName || !needle.nodeType)) { needle = needle.id; }\r\n\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\r\n\t\t\ttmp = obj;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$('.jstree').each(function () {\r\n\t\t\t\tvar inst = $(this).data('jstree');\r\n\t\t\t\tif(inst && inst._model.data[needle]) {\r\n\t\t\t\t\ttmp = inst;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn tmp;\r\n\t};\r\n\r\n\t/**\r\n\t * Create an instance, get an instance or invoke a command on a instance.\r\n\t *\r\n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\r\n\t *\r\n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\r\n\t *\r\n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\r\n\t *\r\n\t * In any other case - nothing is returned and chaining is not broken.\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t$('#tree1').jstree(); // creates an instance\r\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\r\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\r\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\r\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\r\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\r\n\t *\r\n\t * @name $().jstree([arg])\r\n\t * @param {String|Object} arg\r\n\t * @return {Mixed}\r\n\t */\r\n\t$.fn.jstree = function (arg) {\r\n\t\t// check for string argument\r\n\t\tvar is_method\t= (typeof arg === 'string'),\r\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\r\n\t\t\tresult\t\t= null;\r\n\t\tif(arg === true && !this.length) { return false; }\r\n\t\tthis.each(function () {\r\n\t\t\t// get the instance (if there is one) and method (if it exists)\r\n\t\t\tvar instance = $.jstree.reference(this),\r\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\r\n\t\t\t// if calling a method, and method is available - execute on the instance\r\n\t\t\tresult = is_method && method ?\r\n\t\t\t\tmethod.apply(instance, args) :\r\n\t\t\t\tnull;\r\n\t\t\t// if there is no instance and no method is being called - create one\r\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\r\n\t\t\t\t$.jstree.create(this, arg);\r\n\t\t\t}\r\n\t\t\t// if there is an instance and no method is called - return the instance\r\n\t\t\tif( (instance && !is_method) || arg === true ) {\r\n\t\t\t\tresult = instance || false;\r\n\t\t\t}\r\n\t\t\t// if there was a method call which returned a result - break and return the value\r\n\t\t\tif(result !== null && result !== undefined) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\r\n\t\treturn result !== null && result !== undefined ?\r\n\t\t\tresult : this;\r\n\t};\r\n\r\n\t/**\r\n\t * stores all defaults for the core\r\n\t * @name $.jstree.defaults.core\r\n\t */\r\n\t$.jstree.defaults.core = {\r\n\t\t/**\r\n\t\t * data configuration\r\n\t\t *\r\n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\r\n\t\t *\r\n\t\t * You can also pass in a HTML string or a JSON array here.\r\n\t\t *\r\n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree.\r\n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\r\n\t\t *\r\n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t// AJAX\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : {\r\n\t\t *\t\t\t\t'url' : '/get/children/',\r\n\t\t *\t\t\t\t'data' : function (node) {\r\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t *\t// direct data\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : [\r\n\t\t *\t\t\t\t'Simple root node',\r\n\t\t *\t\t\t\t{\r\n\t\t *\t\t\t\t\t'id' : 'node_2',\r\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\r\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\r\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t]\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t *\t// function\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : function (obj, callback) {\r\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.data\r\n\t\t */\r\n\t\tdata\t\t\t: false,\r\n\t\t/**\r\n\t\t * configure the various strings used throughout the tree\r\n\t\t *\r\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\r\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\r\n\t\t * If left as `false` no replacement is made.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'strings' : {\r\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.strings\r\n\t\t */\r\n\t\tstrings\t\t\t: false,\r\n\t\t/**\r\n\t\t * determines what happens when a user tries to modify the structure of the tree\r\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\r\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\r\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node', 'copy_node' or 'edit'\r\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\r\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.check_callback\r\n\t\t */\r\n\t\tcheck_callback\t: false,\r\n\t\t/**\r\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\r\n\t\t * @name $.jstree.defaults.core.error\r\n\t\t */\r\n\t\terror\t\t\t: $.noop,\r\n\t\t/**\r\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\r\n\t\t * @name $.jstree.defaults.core.animation\r\n\t\t */\r\n\t\tanimation\t\t: 200,\r\n\t\t/**\r\n\t\t * a boolean indicating if multiple nodes can be selected\r\n\t\t * @name $.jstree.defaults.core.multiple\r\n\t\t */\r\n\t\tmultiple\t\t: true,\r\n\t\t/**\r\n\t\t * theme configuration object\r\n\t\t * @name $.jstree.defaults.core.themes\r\n\t\t */\r\n\t\tthemes\t\t\t: {\r\n\t\t\t/**\r\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\r\n\t\t\t * @name $.jstree.defaults.core.themes.name\r\n\t\t\t */\r\n\t\t\tname\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\r\n\t\t\t * @name $.jstree.defaults.core.themes.url\r\n\t\t\t */\r\n\t\t\turl\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\r\n\t\t\t * @name $.jstree.defaults.core.themes.dir\r\n\t\t\t */\r\n\t\t\tdir\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if connecting dots are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.dots\r\n\t\t\t */\r\n\t\t\tdots\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node icons are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.icons\r\n\t\t\t */\r\n\t\t\ticons\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node ellipsis should be shown - this only works with a fixed with on the container\r\n\t\t\t * @name $.jstree.defaults.core.themes.ellipsis\r\n\t\t\t */\r\n\t\t\tellipsis\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if the tree background is striped\r\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\r\n\t\t\t */\r\n\t\t\tstripes\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\r\n\t\t\t * @name $.jstree.defaults.core.themes.variant\r\n\t\t\t */\r\n\t\t\tvariant\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\r\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\r\n\t\t\t */\r\n\t\t\tresponsive\t\t: false\r\n\t\t},\r\n\t\t/**\r\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\r\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\r\n\t\t */\r\n\t\texpand_selected_onload : true,\r\n\t\t/**\r\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.worker\r\n\t\t */\r\n\t\tworker : true,\r\n\t\t/**\r\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.force_text\r\n\t\t */\r\n\t\tforce_text : false,\r\n\t\t/**\r\n\t\t * Should the node should be toggled if the text is double clicked . Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.dblclick_toggle\r\n\t\t */\r\n\t\tdblclick_toggle : true,\r\n\t\t/**\r\n\t\t * Should the loaded nodes be part of the state. Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.loaded_state\r\n\t\t */\r\n\t\tloaded_state : false,\r\n\t\t/**\r\n\t\t * Should the last active node be focused when the tree container is blurred and the focused again. This helps working with screen readers. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.restore_focus\r\n\t\t */\r\n\t\trestore_focus : true,\r\n\t\t/**\r\n\t\t * Default keyboard shortcuts (an object where each key is the button name or combo - like 'enter', 'ctrl-space', 'p', etc and the value is the function to execute in the instance's scope)\r\n\t\t * @name $.jstree.defaults.core.keyboard\r\n\t\t */\r\n\t\tkeyboard : {\r\n\t\t\t'ctrl-space': function (e) {\r\n\t\t\t\t// aria defines space only with Ctrl\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'enter': function (e) {\r\n\t\t\t\t// enter\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'left': function (e) {\r\n\t\t\t\t// left\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tthis.close_node(e.currentTarget);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar o = this.get_parent(e.currentTarget);\r\n\t\t\t\t\tif(o && o.id !== $.jstree.root) { this.get_node(o, true).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'up': function (e) {\r\n\t\t\t\t// up\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_prev_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'right': function (e) {\r\n\t\t\t\t// right\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_closed(e.currentTarget)) {\r\n\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tvar o = this.get_node(e.currentTarget, true).children('.jstree-children')[0];\r\n\t\t\t\t\tif(o) { $(this._firstChild(o)).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'down': function (e) {\r\n\t\t\t\t// down\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_next_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'*': function (e) {\r\n\t\t\t\t// aria defines * on numpad as open_all - not very common\r\n\t\t\t\tthis.open_all();\r\n\t\t\t},\r\n\t\t\t'home': function (e) {\r\n\t\t\t\t// home\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\tif(o) { $(o).children('.jstree-anchor').filter(':visible').focus(); }\r\n\t\t\t},\r\n\t\t\t'end': function (e) {\r\n\t\t\t\t// end\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.element.find('.jstree-anchor').filter(':visible').last().focus();\r\n\t\t\t},\r\n\t\t\t'f2': function (e) {\r\n\t\t\t\t// f2 - safe to include - if check_callback is false it will fail\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.edit(e.currentTarget);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n    var Tree = jstree.Tree = langx.Evented.inherit({\r\n        klassName: \"Tree\",\r\n\r\n\t\t/**\r\n\t\t * used to decorate an instance with a plugin. Used internally.\r\n\t\t * @private\r\n\t\t * @name plugin(deco [, opts])\r\n\t\t * @param  {String} deco the plugin to decorate with\r\n\t\t * @param  {Object} opts options for the plugin\r\n\t\t * @return {jsTree}\r\n\t\t */\r\n\t\tplugin : function (deco, opts) {\r\n\t\t\tvar Child = $.jstree.plugins[deco];\r\n\t\t\tif(Child) {\r\n\t\t\t\tthis._data[deco] = {};\r\n\t\t\t\tChild.prototype = this;\r\n\t\t\t\treturn new Child(opts, this);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t/**\r\n\t\t * initialize the instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name init(el, optons)\r\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\r\n\t\t * @param {Object} options options for this instance\r\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\r\n\t\t */\r\n\t\tinit : function (el, options) {\r\n\t\t\tthis._id = ++instance_counter;\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._wrk = null;\r\n\t\t\tthis._data = {\r\n\t\t\t\tcore : {\r\n\t\t\t\t\tthemes : {\r\n\t\t\t\t\t\tname : false,\r\n\t\t\t\t\t\tdots : false,\r\n\t\t\t\t\t\ticons : false,\r\n\t\t\t\t\t\tellipsis : false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tselected : [],\r\n\t\t\t\t\tlast_error : {},\r\n\t\t\t\t\tworking : false,\r\n\t\t\t\t\tworker_queue : [],\r\n\t\t\t\t\tfocused : null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar  opt = options,\r\n\t\t\t\ttmp = this;\r\n\t\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\r\n\t\t\tif(opt && opt.plugins) {\r\n\t\t\t\toptions.plugins = opt.plugins;\r\n\t\t\t}\r\n\t\t\t$.each(options.plugins, function (i, k) {\r\n\t\t\t\tif(i !== 'core') {\r\n\t\t\t\t\ttmp = tmp.plugin(k, options[k]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(el).data('jstree', tmp);\r\n\r\n\t\t\ttmp._model = {\r\n\t\t\t\tdata : {},\r\n\t\t\t\tchanged : [],\r\n\t\t\t\tforce_full_redraw : false,\r\n\t\t\t\tredraw_timeout : false,\r\n\t\t\t\tdefault_state : {\r\n\t\t\t\t\tloaded : true,\r\n\t\t\t\t\topened : false,\r\n\t\t\t\t\tselected : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\ttmp._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\r\n\t\t\ttmp.element = $(el).addClass('jstree jstree-' + tmp._id);\r\n\t\t\ttmp.settings = options;\r\n\r\n\t\t\ttmp._data.core.ready = false;\r\n\t\t\ttmp._data.core.loaded = false;\r\n\t\t\ttmp._data.core.rtl = (tmp.element.css(\"direction\") === \"rtl\");\r\n\t\t\ttmp.element[tmp._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\r\n\t\t\ttmp.element.attr('role','tree');\r\n\t\t\tif(tmp.settings.core.multiple) {\r\n\t\t\t\ttmp.element.attr('aria-multiselectable', true);\r\n\t\t\t}\r\n\t\t\tif(!tmp.element.attr('tabindex')) {\r\n\t\t\t\ttmp.element.attr('tabindex','0');\r\n\t\t\t}\r\n\r\n\t\t\ttmp.bind();\r\n\t\t\t/**\r\n\t\t\t * triggered after all events are bound\r\n\t\t\t * @event\r\n\t\t\t * @name init.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"init\");\r\n\r\n\t\t\ttmp._data.core.original_container_html = tmp.element.find(\" > ul > li\").clone(true);\r\n\t\t\ttmp._data.core.original_container_html\r\n\t\t\t\t.find(\"li\").addBack()\r\n\t\t\t\t.contents().filter(function() {\r\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\r\n\t\t\t\t})\r\n\t\t\t\t.remove();\r\n\t\t\ttmp.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children' role='group'><\"+\"li id='j\"+tmp._id+\"_loading' class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='tree-item'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + tmp.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\ttmp.element.attr('aria-activedescendant','j' + tmp._id + '_loading');\r\n\t\t\ttmp._data.core.li_height = tmp.get_container_ul().children(\"li\").first().outerHeight() || 24;\r\n\t\t\ttmp._data.core.node = tmp._create_prototype_node();\r\n\t\t\t/**\r\n\t\t\t * triggered after the loading text is shown and before loading starts\r\n\t\t\t * @event\r\n\t\t\t * @name loading.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"loading\");\r\n\t\t\ttmp.load_node($.jstree.root);\r\n\t\t\treturn tmp;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * destroy an instance\r\n\t\t * @name destroy()\r\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\r\n\t\t */\r\n\t\tdestroy : function (keep_html) {\r\n\t\t\t/**\r\n\t\t\t * triggered before the tree is destroyed\r\n\t\t\t * @event\r\n\t\t\t * @name destroy.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"destroy\");\r\n\t\t\tif(this._wrk) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\twindow.URL.revokeObjectURL(this._wrk);\r\n\t\t\t\t\tthis._wrk = null;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ignore) { }\r\n\t\t\t}\r\n\t\t\tif(!keep_html) { this.element.empty(); }\r\n\t\t\tthis.teardown();\r\n\t\t},\r\n\t\t/**\r\n\t\t * Create a prototype node\r\n\t\t * @name _create_prototype_node()\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_create_prototype_node : function () {\r\n\t\t\tvar _node = document.createElement('LI'), _temp1, _temp2;\r\n\t\t\t_node.setAttribute('role', 'treeitem');\r\n\t\t\t_temp1 = document.createElement('I');\r\n\t\t\t_temp1.className = 'jstree-icon jstree-ocl';\r\n\t\t\t_temp1.setAttribute('role', 'presentation');\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = document.createElement('A');\r\n\t\t\t_temp1.className = 'jstree-anchor';\r\n\t\t\t_temp1.setAttribute('href','#');\r\n\t\t\t_temp1.setAttribute('tabindex','-1');\r\n\t\t\t_temp2 = document.createElement('I');\r\n\t\t\t_temp2.className = 'jstree-icon jstree-themeicon';\r\n\t\t\t_temp2.setAttribute('role', 'presentation');\r\n\t\t\t_temp1.appendChild(_temp2);\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = _temp2 = null;\r\n\r\n\t\t\treturn _node;\r\n\t\t},\r\n\t\t_kbevent_to_func : function (e) {\r\n\t\t\tvar keys = {\r\n\t\t\t\t8: \"Backspace\", 9: \"Tab\", 13: \"Return\", 19: \"Pause\", 27: \"Esc\",\r\n\t\t\t\t32: \"Space\", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\", 36: \"Home\",\r\n\t\t\t\t37: \"Left\", 38: \"Up\", 39: \"Right\", 40: \"Down\", 44: \"Print\", 45: \"Insert\",\r\n\t\t\t\t46: \"Delete\", 96: \"Numpad0\", 97: \"Numpad1\", 98: \"Numpad2\", 99 : \"Numpad3\",\r\n\t\t\t\t100: \"Numpad4\", 101: \"Numpad5\", 102: \"Numpad6\", 103: \"Numpad7\",\r\n\t\t\t\t104: \"Numpad8\", 105: \"Numpad9\", '-13': \"NumpadEnter\", 112: \"F1\",\r\n\t\t\t\t113: \"F2\", 114: \"F3\", 115: \"F4\", 116: \"F5\", 117: \"F6\", 118: \"F7\",\r\n\t\t\t\t119: \"F8\", 120: \"F9\", 121: \"F10\", 122: \"F11\", 123: \"F12\", 144: \"Numlock\",\r\n\t\t\t\t145: \"Scrolllock\", 16: 'Shift', 17: 'Ctrl', 18: 'Alt',\r\n\t\t\t\t48: '0',  49: '1',  50: '2',  51: '3',  52: '4', 53:  '5',\r\n\t\t\t\t54: '6',  55: '7',  56: '8',  57: '9',  59: ';',  61: '=', 65:  'a',\r\n\t\t\t\t66: 'b',  67: 'c',  68: 'd',  69: 'e',  70: 'f',  71: 'g', 72:  'h',\r\n\t\t\t\t73: 'i',  74: 'j',  75: 'k',  76: 'l',  77: 'm',  78: 'n', 79:  'o',\r\n\t\t\t\t80: 'p',  81: 'q',  82: 'r',  83: 's',  84: 't',  85: 'u', 86:  'v',\r\n\t\t\t\t87: 'w',  88: 'x',  89: 'y',  90: 'z', 107: '+', 109: '-', 110: '.',\r\n\t\t\t\t186: ';', 187: '=', 188: ',', 189: '-', 190: '.', 191: '/', 192: '`',\r\n\t\t\t\t219: '[', 220: '\\\\',221: ']', 222: \"'\", 111: '/', 106: '*', 173: '-'\r\n\t\t\t};\r\n\t\t\tvar parts = [];\r\n\t\t\tif (e.ctrlKey) { parts.push('ctrl'); }\r\n\t\t\tif (e.altKey) { parts.push('alt'); }\r\n\t\t\tif (e.shiftKey) { parts.push('shift'); }\r\n\t\t\tparts.push(keys[e.which] || e.which);\r\n\t\t\tparts = parts.sort().join('-').toLowerCase();\r\n\r\n\t\t\tvar kb = this.settings.core.keyboard, i, tmp;\r\n\t\t\tfor (i in kb) {\r\n\t\t\t\tif (kb.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp = i;\r\n\t\t\t\t\tif (tmp !== '-' && tmp !== '+') {\r\n\t\t\t\t\t\ttmp = tmp.replace('--', '-MINUS').replace('+-', '-MINUS').replace('++', '-PLUS').replace('-+', '-PLUS');\r\n\t\t\t\t\t\ttmp = tmp.split(/-|\\+/).sort().join('-').replace('MINUS', '-').replace('PLUS', '+').toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tmp === parts) {\r\n\t\t\t\t\t\treturn kb[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name teardown()\r\n\t\t */\r\n\t\tteardown : function () {\r\n\t\t\tthis.unbind();\r\n\t\t\tthis.element\r\n\t\t\t\t.removeClass('jstree')\r\n\t\t\t\t.removeData('jstree')\r\n\t\t\t\t.find(\"[class^='jstree']\")\r\n\t\t\t\t\t.addBack()\r\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\r\n\t\t\tthis.element = null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * bind all events. Used internally.\r\n\t\t * @private\r\n\t\t * @name bind()\r\n\t\t */\r\n\t\tbind : function () {\r\n\t\t\tvar word = '',\r\n\t\t\t\ttout = null,\r\n\t\t\t\twas_click = 0;\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"dblclick.jstree\", function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\r\n\t\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif(window.getSelection) {\r\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\t\t\t\t\t\tsel.collapse();\r\n\t\t\t\t\t\t\t\t} catch (ignore) { }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"mousedown.jstree\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target === this.element[0]) {\r\n\t\t\t\t\t\t\te.preventDefault(); // prevent losing focus when clicking scroll arrows (FF, Chrome)\r\n\t\t\t\t\t\t\twas_click = +(new Date()); // ie does not allow to prevent losing focus\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mousedown.jstree\", \".jstree-ocl\", function (e) {\r\n\t\t\t\t\t\te.preventDefault(); // prevent any node inside from losing focus when clicking the open/close icon\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this.settings.core.dblclick_toggle) {\r\n\t\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tif(e.currentTarget !== document.activeElement) { $(e.currentTarget).focus(); }\r\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this._data.core.rtl) {\r\n\t\t\t\t\t\t\tif(e.which === 37) { e.which = 39; }\r\n\t\t\t\t\t\t\telse if(e.which === 39) { e.which = 37; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar f = this._kbevent_to_func(e);\r\n\t\t\t\t\t\tif (f) {\r\n\t\t\t\t\t\t\tvar r = f.call(this, e);\r\n\t\t\t\t\t\t\tif (r === false || r === true) {\r\n\t\t\t\t\t\t\t\treturn r;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(data.status) {\r\n\t\t\t\t\t\t\tif(data.node.id === $.jstree.root && !this._data.core.loaded) {\r\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\r\n\t\t\t\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\r\n\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t * @name loaded.jstree\r\n\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!this._data.core.ready) {\r\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function() {\r\n\t\t\t\t\t\t\t\t\tif(this.element && !this.get_container_ul().find('.jstree-loading').length) {\r\n\t\t\t\t\t\t\t\t\t\tthis._data.core.ready = true;\r\n\t\t\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\r\n\t\t\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t\t\t * @name ready.jstree\r\n\t\t\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\t\t\tthis.trigger(\"ready\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// quick searching when the tree is focused\r\n\t\t\t\t.on('keypress.jstree', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(tout) { clearTimeout(tout); }\r\n\t\t\t\t\t\ttout = setTimeout(function () {\r\n\t\t\t\t\t\t\tword = '';\r\n\t\t\t\t\t\t}, 500);\r\n\r\n\t\t\t\t\t\tvar chr = String.fromCharCode(e.which).toLowerCase(),\r\n\t\t\t\t\t\t\tcol = this.element.find('.jstree-anchor').filter(':visible'),\r\n\t\t\t\t\t\t\tind = col.index(document.activeElement) || 0,\r\n\t\t\t\t\t\t\tend = false;\r\n\t\t\t\t\t\tword += chr;\r\n\r\n\t\t\t\t\t\t// match for whole word from current node down (including the current node)\r\n\t\t\t\t\t\tif(word.length > 1) {\r\n\t\t\t\t\t\t\tcol.slice(ind).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// match for whole word from the beginning of the tree\r\n\t\t\t\t\t\t\tcol.slice(0, ind).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// list nodes that start with that letter (only if word consists of a single char)\r\n\t\t\t\t\t\tif(new RegExp('^' + chr.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '+$').test(word)) {\r\n\t\t\t\t\t\t\t// search for the next node starting with that letter\r\n\t\t\t\t\t\t\tcol.slice(ind + 1).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// search from the beginning\r\n\t\t\t\t\t\t\tcol.slice(0, ind + 1).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// THEME RELATED\r\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tvar s = this.settings.core.themes;\r\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\r\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\r\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\r\n\t\t\t\t\t\tthis._data.core.themes.ellipsis\t\t= s.ellipsis;\r\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\r\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.ellipsis ? \"show_ellipsis\" : \"hide_ellipsis\" ]();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '0');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tvar tmp = this.get_node(e.currentTarget);\r\n\t\t\t\t\t\tif(tmp && tmp.id) {\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\r\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '-1');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', $.proxy(function () {\r\n\t\t\t\t\t\tif(+(new Date()) - was_click > 500 && !this._data.core.focused && this.settings.core.restore_focus) {\r\n\t\t\t\t\t\t\twas_click = 0;\r\n\t\t\t\t\t\t\tvar act = this.get_node(this.element.attr('aria-activedescendant'), true);\r\n\t\t\t\t\t\t\tif(act) {\r\n\t\t\t\t\t\t\t\tact.find('> .jstree-anchor').focus();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\r\n\t\t\t\t\t}, this));\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name unbind()\r\n\t\t */\r\n\t\tunbind : function () {\r\n\t\t\tthis.element.off('.jstree');\r\n\t\t\t$(document).off('.jstree-' + this._id);\r\n\t\t},\r\n\t\t/**\r\n\t\t * trigger an event. Used internally.\r\n\t\t * @private\r\n\t\t * @name trigger(ev [, data])\r\n\t\t * @param  {String} ev the name of the event to trigger\r\n\t\t * @param  {Object} data additional data to pass with the event\r\n\t\t */\r\n\t\ttrigger : function (ev, data) {\r\n\t\t\tif(!data) {\r\n\t\t\t\tdata = {};\r\n\t\t\t}\r\n\t\t\tdata.instance = this;\r\n\t\t\tthis.element.trigger(ev.replace('.jstree','') + '.jstree', data);\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended instance container\r\n\t\t * @name get_container()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container : function () {\r\n\t\t\treturn this.element;\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\r\n\t\t * @private\r\n\t\t * @name get_container_ul()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container_ul : function () {\r\n\t\t\treturn this.element.children(\".jstree-children\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets string replacements (localization). Used internally.\r\n\t\t * @private\r\n\t\t * @name get_string(key)\r\n\t\t * @param  {String} key\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_string : function (key) {\r\n\t\t\tvar a = this.settings.core.strings;\r\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\r\n\t\t\tif(a && a[key]) { return a[key]; }\r\n\t\t\treturn key;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the first child of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _firstChild(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_firstChild : function (dom) {\r\n\t\t\tdom = dom ? dom.firstChild : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the next sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _nextSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_nextSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.nextSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the previous sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _previousSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_previousSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.previousSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.previousSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\r\n\t\t * @name get_node(obj [, as_dom])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} as_dom\r\n\t\t * @return {Object|jQuery}\r\n\t\t */\r\n\t\tget_node : function (obj, as_dom) {\r\n\t\t\tif(obj && obj.id) {\r\n\t\t\t\tobj = obj.id;\r\n\t\t\t}\r\n\t\t\tvar dom;\r\n\t\t\ttry {\r\n\t\t\t\tif(this._model.data[obj]) {\r\n\t\t\t\t\tobj = this._model.data[obj];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && this._model.data[obj.replace(/^#/, '')]) {\r\n\t\t\t\t\tobj = this._model.data[obj.replace(/^#/, '')];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\r\n\t\t\t\t\tobj = this._model.data[$.jstree.root];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(as_dom) {\r\n\t\t\t\t\tobj = obj.id === $.jstree.root ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t} catch (ex) { return false; }\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\r\n\t\t * @name get_path(obj [, glue, ids])\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\r\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\r\n\t\t * @return {mixed}\r\n\t\t */\r\n\t\tget_path : function (obj, glue, ids) {\r\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root || !obj.parents) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = [];\r\n\t\t\tp.push(ids ? obj.id : obj.text);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\r\n\t\t\t}\r\n\t\t\tp = p.reverse().slice(1);\r\n\t\t\treturn glue ? p.join(glue) : p;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_next_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_next_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp !== null) {\r\n\t\t\t\t\treturn $(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\treturn $(tmp);\r\n\t\t\t}\r\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").nextAll(\".jstree-node:visible\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_prev_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_prev_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\tobj = $(tmp);\r\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\t\tobj = obj.children(\".jstree-children\").first().children(\".jstree-node:visible:last\");\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0].parentNode.parentNode;\r\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the parent ID of a node\r\n\t\t * @name get_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.parent;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get a jQuery collection of all the children of a node (node must be rendered), returns false on error\r\n\t\t * @name get_children_dom(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_children_dom : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node has children\r\n\t\t * @name is_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is loaded (its children are available)\r\n\t\t * @name is_loaded(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loaded : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.loaded;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is currently loading (fetching children)\r\n\t\t * @name is_loading(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loading : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.loading;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is opened\r\n\t\t * @name is_open(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_open : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is in a closed state\r\n\t\t * @name is_closed(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_closed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node has no children\r\n\t\t * @name is_leaf(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_leaf : function (obj) {\r\n\t\t\treturn !this.is_parent(obj);\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\r\n\t\t * @name load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger load_node.jstree\r\n\t\t */\r\n\t\tload_node : function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) {\r\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\r\n\t\t\tif(obj.state.loaded) {\r\n\t\t\t\tobj.state.loaded = false;\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\r\n\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\r\n\t\t\t\t}\r\n\t\t\t\tif (c) {\r\n\t\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tobj.children = [];\r\n\t\t\t\tobj.children_d = [];\r\n\t\t\t\tif(c) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj.state.failed = false;\r\n\t\t\tobj.state.loading = true;\r\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\").attr('aria-busy',true);\r\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\r\n\t\t\t\tobj = this._model.data[obj.id];\r\n\t\t\t\tobj.state.loading = false;\r\n\t\t\t\tobj.state.loaded = status;\r\n\t\t\t\tobj.state.failed = !obj.state.loaded;\r\n\t\t\t\tvar dom = this.get_node(obj, true), i = 0, j = 0, m = this._model.data, has_children = false;\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(m[obj.children[i]] && !m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\t\thas_children = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.state.loaded && dom && dom.length) {\r\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open jstree-leaf');\r\n\t\t\t\t\tif (!has_children) {\r\n\t\t\t\t\t\tdom.addClass('jstree-leaf');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (obj.id !== '#') {\r\n\t\t\t\t\t\t\tdom.addClass(obj.state.opened ? 'jstree-open' : 'jstree-closed');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a node is loaded\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_node.jstree\r\n\t\t\t\t * @param {Object} node the node that was loading\r\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, status);\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\r\n\t\t * @private\r\n\t\t * @name _load_nodes(nodes [, callback])\r\n\t\t * @param  {array} nodes\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\r\n\t\t */\r\n\t\t_load_nodes : function (nodes, callback, is_callback, force_reload) {\r\n\t\t\tvar r = true,\r\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\r\n\t\t\t\tm = this._model.data, i, j, tmp = [];\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\tif(m[nodes[i]] && ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || (!is_callback && force_reload) )) {\r\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\r\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tr = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(r) {\r\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\tif(m[nodes[i]] && m[nodes[i]].state.loaded) {\r\n\t\t\t\t\t\ttmp.push(nodes[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(callback && !callback.done) {\r\n\t\t\t\t\tcallback.call(this, tmp);\r\n\t\t\t\t\tcallback.done = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads all unloaded nodes\r\n\t\t * @name load_all([obj, callback])\r\n\t\t * @param {mixed} obj the node to load recursively, omit to load all nodes in the tree\r\n\t\t * @param {function} callback a function to be executed once loading all the nodes is complete,\r\n\t\t * @trigger load_all.jstree\r\n\t\t */\r\n\t\tload_all : function (obj, callback) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar to_load = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tc = m[obj.id].children_d,\r\n\t\t\t\ti, j;\r\n\t\t\tif(obj.state && !obj.state.loaded) {\r\n\t\t\t\tto_load.push(obj.id);\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = c.length; i < j; i++) {\r\n\t\t\t\tif(m[c[i]] && m[c[i]].state && !m[c[i]].state.loaded) {\r\n\t\t\t\t\tto_load.push(c[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(to_load.length) {\r\n\t\t\t\tthis._load_nodes(to_load, function () {\r\n\t\t\t\t\tthis.load_all(obj, callback);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a load_all call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_all.jstree\r\n\t\t\t\t * @param {Object} node the recursively loaded node\r\n\t\t\t\t */\r\n\t\t\t\tif(callback) { callback.call(this, obj); }\r\n\t\t\t\tthis.trigger('load_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * handles the actual loading of a node. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\t_load_node : function (obj, callback) {\r\n\t\t\tvar s = this.settings.core.data, t;\r\n\t\t\tvar notTextOrCommentNode = function notTextOrCommentNode () {\r\n\t\t\t\treturn this.nodeType !== 3 && this.nodeType !== 8;\r\n\t\t\t};\r\n\t\t\t// use original HTML\r\n\t\t\tif(!s) {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t// return callback.call(this, obj.id === $.jstree.root ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\r\n\t\t\t}\r\n\t\t\tif($.isFunction(s)) {\r\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\r\n\t\t\t\t\tif(d === false) {\r\n\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $($.parseHTML(d)).filter(notTextOrCommentNode) : d, function (status) {\r\n\t\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\r\n\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'object') {\r\n\t\t\t\tif(s.url) {\r\n\t\t\t\t\ts = $.extend(true, {}, s);\r\n\t\t\t\t\tif($.isFunction(s.url)) {\r\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($.isFunction(s.data)) {\r\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $.ajax(s)\r\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\r\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('json') !== -1) || typeof d === \"object\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('html') !== -1) || typeof d === \"string\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(d)).filter(notTextOrCommentNode), function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.fail($.proxy(function (f) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\r\n\t\t\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t}\r\n\t\t\t\tif ($.isArray(s)) {\r\n\t\t\t\t\tt = $.extend(true, [], s);\r\n\t\t\t\t} else if ($.isPlainObject(s)) {\r\n\t\t\t\t\tt = $.extend(true, {}, s);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt = s;\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_json_data(obj, t) : false) );\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'string') {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(s)).filter(notTextOrCommentNode), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_html_data(obj, $(s)) : false) );\r\n\t\t\t}\r\n\t\t\treturn callback.call(this, false);\r\n\t\t},\r\n\t\t/**\r\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _node_changed(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t */\r\n\t\t_node_changed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n      if (obj && $.inArray(obj.id, this._model.changed) === -1) {\r\n\t\t\t\tthis._model.changed.push(obj.id);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends HTML content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_html_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the HTML string to parse and append\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_html_data : function (dom, data, cb) {\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\r\n\t\t\t\tpar = dom.id,\r\n\t\t\t\tchd = [],\r\n\t\t\t\tdpc = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tp = m[par],\r\n\t\t\t\ts = this._data.core.selected.length,\r\n\t\t\t\ttmp, i, j;\r\n\t\t\tdat.each($.proxy(function (i, v) {\r\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\tp.children = chd;\r\n\t\t\tp.children_d = dpc;\r\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when new data is inserted to the tree model\r\n\t\t\t * @event\r\n\t\t\t * @name model.jstree\r\n\t\t\t * @param {Array} nodes an array of node IDs\r\n\t\t\t * @param {String} parent the parent ID of the nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\r\n\t\t\tif(par !== $.jstree.root) {\r\n\t\t\t\tthis._node_changed(par);\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\tthis.redraw(true);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.selected.length !== s) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t}\r\n\t\t\tcb.call(this, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends JSON content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_json_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the JSON object to parse and append\r\n\t\t * @param  {Boolean} force_processing internal param - do not set\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_json_data : function (dom, data, cb, force_processing) {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\t// *%$@!!!\r\n\t\t\tif(data.d) {\r\n\t\t\t\tdata = data.d;\r\n\t\t\t\tif(typeof data === \"string\") {\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!$.isArray(data)) { data = [data]; }\r\n\t\t\tvar w = null,\r\n\t\t\t\targs = {\r\n\t\t\t\t\t'df'\t: this._model.default_state,\r\n\t\t\t\t\t'dat'\t: data,\r\n\t\t\t\t\t'par'\t: dom.id,\r\n\t\t\t\t\t'm'\t\t: this._model.data,\r\n\t\t\t\t\t't_id'\t: this._id,\r\n\t\t\t\t\t't_cnt'\t: this._cnt,\r\n\t\t\t\t\t'sel'\t: this._data.core.selected\r\n\t\t\t\t},\r\n\t\t\t\tfunc = function (data, undefined) {\r\n\t\t\t\t\tif(data.data) { data = data.data; }\r\n\t\t\t\t\tvar dat = data.dat,\r\n\t\t\t\t\t\tpar = data.par,\r\n\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\tdpc = [],\r\n\t\t\t\t\t\tadd = [],\r\n\t\t\t\t\t\tdf = data.df,\r\n\t\t\t\t\t\tt_id = data.t_id,\r\n\t\t\t\t\t\tt_cnt = data.t_cnt,\r\n\t\t\t\t\t\tm = data.m,\r\n\t\t\t\t\t\tp = m[par],\r\n\t\t\t\t\t\tsel = data.sel,\r\n\t\t\t\t\t\ttmp, i, j, rslt,\r\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\t\t\t\t\ti, j, c, e,\r\n\t\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\tm[tmp.id].original = d;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\r\n\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\r\n\t\t\t\t\t\t\t} while(m[tid]);\r\n\r\n\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\r\n\t\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\ttmp.original = d;\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\r\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\r\n\t\t\t\t\t\t// 1) convert to object (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif(!dat[i].children) {\r\n\t\t\t\t\t\t\t\tdat[i].children = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!dat[i].state) {\r\n\t\t\t\t\t\t\t\tdat[i].state = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 2) populate children (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif (!m[dat[i].parent.toString()]) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'parse', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Node with invalid parent', 'data' : JSON.stringify({ 'id' : dat[i].id.toString(), 'parent' : dat[i].parent.toString() }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\r\n\t\t\t\t\t\t\t// populate parent.children_d\r\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\r\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\r\n\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\r\n\t\t\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tp.children = chd;\r\n\t\t\t\t\t\tp.children_d = dpc;\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof window === 'undefined' || typeof window.document === 'undefined') {\r\n\t\t\t\t\t\tpostMessage(rslt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn rslt;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\trslt = function (rslt, worker) {\r\n\t\t\t\t\tif(this.element === null) { return; }\r\n\t\t\t\t\tthis._cnt = rslt.cnt;\r\n\t\t\t\t\tvar i, m = this._model.data;\r\n\t\t\t\t\tfor (i in m) {\r\n\t\t\t\t\t\tif (m.hasOwnProperty(i) && m[i].state && m[i].state.loading && rslt.mod[i]) {\r\n\t\t\t\t\t\t\trslt.mod[i].state.loading = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\r\n\r\n\t\t\t\t\tif(worker) {\r\n\t\t\t\t\t\tvar j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice();\r\n\t\t\t\t\t\tm = this._model.data;\r\n\t\t\t\t\t\t// if selection was changed while calculating in worker\r\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\r\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\r\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\r\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\r\n\r\n\t\t\t\t\tif(rslt.par !== $.jstree.root) {\r\n\t\t\t\t\t\tthis._node_changed(rslt.par);\r\n\t\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcb.call(this, true);\r\n\t\t\t\t};\r\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(this._wrk === null) {\r\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\r\n\t\t\t\t\t\t\tnew window.Blob(\r\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString()],\r\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!this._data.core.working || force_processing) {\r\n\t\t\t\t\t\tthis._data.core.working = true;\r\n\t\t\t\t\t\tw = new window.Worker(this._wrk);\r\n\t\t\t\t\t\tw.onmessage = $.proxy(function (e) {\r\n\t\t\t\t\t\t\trslt.call(this, e.data, true);\r\n\t\t\t\t\t\t\ttry { w.terminate(); w = null; } catch(ignore) { }\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tif(!args.par) {\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tw.postMessage(args);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb, true]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e) {\r\n\t\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_html(d [, p, ps])\r\n\t\t * @param  {jQuery} d the jQuery object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_html : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = [].concat(ps); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar c, e, m = this._model.data,\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\ttext\t\t: false,\r\n\t\t\t\t\ticon\t\t: true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t}, i, tmp, tid;\r\n\t\t\tfor(i in this._model.default_state) {\r\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\r\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = $.vakata.attributes(d, true);\r\n\t\t\t$.each(tmp, function (i, v) {\r\n\t\t\t\tv = $.trim(v);\r\n\t\t\t\tif(!v.length) { return true; }\r\n\t\t\t\tdata.li_attr[i] = v;\r\n\t\t\t\tif(i === 'id') {\r\n\t\t\t\t\tdata.id = v.toString();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttmp = d.children('a').first();\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\r\n\t\t\t\t$.each(tmp, function (i, v) {\r\n\t\t\t\t\tv = $.trim(v);\r\n\t\t\t\t\tif(v.length) {\r\n\t\t\t\t\t\tdata.a_attr[i] = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").first().length ? d.children(\"a\").first().clone() : d.clone();\r\n\t\t\ttmp.children(\"ins, i, ul\").remove();\r\n\t\t\ttmp = tmp.html();\r\n\t\t\ttmp = $('<div />').html(tmp);\r\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\r\n\t\t\ttmp = d.data();\r\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\r\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\r\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\r\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\r\n\t\t\tif(data.data && data.data.jstree) {\r\n\t\t\t\tfor(i in data.data.jstree) {\r\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\r\n\t\t\t}\r\n\t\t\tif(data.state.icon !== undefined) {\r\n\t\t\t\tdata.icon = data.state.icon;\r\n\t\t\t}\r\n\t\t\tif(data.icon === undefined || data.icon === null || data.icon === \"\") {\r\n\t\t\t\tdata.icon = true;\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp.each($.proxy(function (i, v) {\r\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\r\n\t\t\t\t\te = this._model.data[c];\r\n\t\t\t\t\tdata.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this));\r\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(d.hasClass('jstree-closed')) {\r\n\t\t\t\t\tdata.state.loaded = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(data.li_attr['class']) {\r\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\r\n\t\t\t}\r\n\t\t\tif(data.a_attr['class']) {\r\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\r\n\t\t\t}\r\n\t\t\tm[data.id] = data;\r\n\t\t\tif(data.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(data.id);\r\n\t\t\t}\r\n\t\t\treturn data.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tdf = this._model.default_state,\r\n\t\t\t\ti, j, c, e,\r\n\t\t\t\ttmp = {\r\n\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\te = m[c];\r\n\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\tm[tmp.id].original = d;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\r\n\t\t\ttmp = {\r\n\t\t\t\tid\t\t\t: false,\r\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\tparent\t\t: p,\r\n\t\t\t\tparents\t\t: ps,\r\n\t\t\t\tchildren\t: [],\r\n\t\t\t\tchildren_d\t: [],\r\n\t\t\t\tdata\t\t: null,\r\n\t\t\t\tstate\t\t: { },\r\n\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\toriginal\t: false\r\n\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t}\r\n\t\t\tif(!tmp.id) {\r\n\t\t\t\ttmp.id = tid;\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\r\n\t\t\t\t\te = m[c];\r\n\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\ttmp.original = d;\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn. Used internally.\r\n\t\t * @private\r\n\t\t * @name _redraw()\r\n\t\t * @trigger redraw.jstree\r\n\t\t */\r\n\t\t_redraw : function () {\r\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data[$.jstree.root].children.concat([]) : this._model.changed.concat([]),\r\n\t\t\t\tf = document.createElement('UL'), tmp, i, j, fe = this._data.core.focused;\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\r\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\r\n\t\t\t\t\tf.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._model.force_full_redraw) {\r\n\t\t\t\tf.className = this.get_container_ul()[0].className;\r\n\t\t\t\tf.setAttribute('role','group');\r\n\t\t\t\tthis.element.empty().append(f);\r\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\r\n\t\t\t}\r\n\t\t\tif(fe !== null) {\r\n\t\t\t\ttmp = this.get_node(fe, true);\r\n\t\t\t\tif(tmp && tmp.length && tmp.children('.jstree-anchor')[0] !== document.activeElement) {\r\n\t\t\t\t\ttmp.children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = false;\r\n\t\t\tthis._model.changed = [];\r\n\t\t\t/**\r\n\t\t\t * triggered after nodes are redrawn\r\n\t\t\t * @event\r\n\t\t\t * @name redraw.jstree\r\n\t\t\t * @param {array} nodes the redrawn nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\r\n\t\t * @name redraw([full])\r\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\r\n\t\t */\r\n\t\tredraw : function (full) {\r\n\t\t\tif(full) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\t//if(this._model.redraw_timeout) {\r\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\r\n\t\t\t//}\r\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\r\n\t\t\tthis._redraw();\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node's children. Used internally.\r\n\t\t * @private\r\n\t\t * @name draw_children(node)\r\n\t\t * @param {mixed} node the node whose children will be redrawn\r\n\t\t */\r\n\t\tdraw_children : function (node) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\td = document;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) { return this.redraw(true); }\r\n\t\t\tnode = this.get_node(node, true);\r\n\t\t\tif(!node || !node.length) { return false; } // TODO: quick toggle\r\n\r\n\t\t\tnode.children('.jstree-children').remove();\r\n\t\t\tnode = node[0];\r\n\t\t\tif(obj.children.length && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], true, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node. Used internally.\r\n\t\t * @private\r\n\t\t * @name redraw_node(node, deep, is_callback, force_render)\r\n\t\t * @param {mixed} node the node to redraw\r\n\t\t * @param {Boolean} deep should child nodes be redrawn too\r\n\t\t * @param {Boolean} is_callback is this a recursion call\r\n\t\t * @param {Boolean} force_render should children of closed parents be drawn anyway\r\n\t\t */\r\n\t\tredraw_node : function (node, deep, is_callback, force_render) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\tpar = false,\r\n\t\t\t\tind = false,\r\n\t\t\t\told = false,\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\tc = '',\r\n\t\t\t\td = document,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = false,\r\n\t\t\t\ts = false,\r\n\t\t\t\ttmp = null,\r\n\t\t\t\tt = 0,\r\n\t\t\t\tl = 0,\r\n\t\t\t\thas_children = false,\r\n\t\t\t\tlast_sibling = false;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) {  return this.redraw(true); }\r\n\t\t\tdeep = deep || obj.children.length === 0;\r\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\r\n\t\t\tif(!node) {\r\n\t\t\t\tdeep = true;\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = obj.parent !== $.jstree.root ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\r\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m[$.jstree.root].children : m[obj.parent].children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode = $(node);\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = node.parent().parent()[0];\r\n\t\t\t\t\tif(par === this.element[0]) {\r\n\t\t\t\t\t\tpar = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = node.index();\r\n\t\t\t\t}\r\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\r\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\r\n\t\t\t\t\tdeep = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!deep) {\r\n\t\t\t\t\told = node.children('.jstree-children')[0];\r\n\t\t\t\t}\r\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\r\n\t\t\t\tnode.remove();\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\t//node = node[0];\r\n\t\t\t}\r\n\t\t\tnode = this._data.core.node.cloneNode(true);\r\n\t\t\t// node is DOM, deep is boolean\r\n\r\n\t\t\tc = 'jstree-node ';\r\n\t\t\tfor(i in obj.li_attr) {\r\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i === 'id') { continue; }\r\n\t\t\t\t\tif(i !== 'class') {\r\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += obj.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!obj.a_attr.id) {\r\n\t\t\t\tobj.a_attr.id = obj.id + '_anchor';\r\n\t\t\t}\r\n\t\t\tnode.setAttribute('aria-selected', !!obj.state.selected);\r\n\t\t\tnode.setAttribute('aria-level', obj.parents.length);\r\n\t\t\tnode.setAttribute('aria-labelledby', obj.a_attr.id);\r\n\t\t\tif(obj.state.disabled) {\r\n\t\t\t\tnode.setAttribute('aria-disabled', true);\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tif(!m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\thas_children = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.parent !== null && m[obj.parent] && !obj.state.hidden) {\r\n\t\t\t\ti = $.inArray(obj.id, m[obj.parent].children);\r\n\t\t\t\tlast_sibling = obj.id;\r\n\t\t\t\tif(i !== -1) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tfor(j = m[obj.parent].children.length; i < j; i++) {\r\n\t\t\t\t\t\tif(!m[m[obj.parent].children[i]].state.hidden) {\r\n\t\t\t\t\t\t\tlast_sibling = m[obj.parent].children[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(last_sibling !== obj.id) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tc += ' jstree-hidden';\r\n\t\t\t}\r\n\t\t\tif (obj.state.loading) {\r\n\t\t\t\tc += ' jstree-loading';\r\n\t\t\t}\r\n\t\t\tif(obj.state.loaded && !has_children) {\r\n\t\t\t\tc += ' jstree-leaf';\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\r\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\r\n\t\t\t}\r\n\t\t\tif(last_sibling === obj.id) {\r\n\t\t\t\tc += ' jstree-last';\r\n\t\t\t}\r\n\t\t\tnode.id = obj.id;\r\n\t\t\tnode.className = c;\r\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\r\n\t\t\tfor(j in obj.a_attr) {\r\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\r\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\r\n\t\t\t\t\tif(j !== 'class') {\r\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(c.length) {\r\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\r\n\t\t\t}\r\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\r\n\t\t\t\tif(obj.icon === false) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\r\n\t\t\t\t}\r\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url(\"'+obj.icon+'\")';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.settings.core.force_text) {\r\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(deep && obj.children.length && (obj.state.opened || force_render) && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t\tif(old) {\r\n\t\t\t\tnode.appendChild(old);\r\n\t\t\t}\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\t// append back using par / ind\r\n\t\t\t\tif(!par) {\r\n\t\t\t\t\tpar = this.element[0];\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\r\n\t\t\t\t\t\ttmp = par.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!tmp) {\r\n\t\t\t\t\ttmp = d.createElement('UL');\r\n\t\t\t\t\ttmp.setAttribute('role', 'group');\r\n\t\t\t\t\ttmp.className = 'jstree-children';\r\n\t\t\t\t\tpar.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tpar = tmp;\r\n\r\n\t\t\t\tif(ind < par.childNodes.length) {\r\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpar.appendChild(node);\r\n\t\t\t\t}\r\n\t\t\t\tif(f) {\r\n\t\t\t\t\tt = this.element[0].scrollTop;\r\n\t\t\t\t\tl = this.element[0].scrollLeft;\r\n\t\t\t\t\tnode.childNodes[1].focus();\r\n\t\t\t\t\tthis.element[0].scrollTop = t;\r\n\t\t\t\t\tthis.element[0].scrollLeft = l;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\r\n\t\t\t\tobj.state.opened = false;\r\n\t\t\t\tsetTimeout($.proxy(function () {\r\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\r\n\t\t\t\t}, this), 0);\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_node(obj [, callback, animation])\r\n\t\t * @param {mixed} obj the node to open\r\n\t\t * @param {Function} callback a function to execute once the node is opened\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\r\n\t\t */\r\n\t\topen_node : function (obj, callback, animation) {\r\n\t\t\tvar t1, t2, d, t;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tif(!this.is_closed(obj)) {\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, false);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!this.is_loaded(obj)) {\r\n\t\t\t\tif(this.is_loading(obj)) {\r\n\t\t\t\t\treturn setTimeout($.proxy(function () {\r\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\r\n\t\t\t\t\t}, this), 500);\r\n\t\t\t\t}\r\n\t\t\t\tthis.load_node(obj, function (o, ok) {\r\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = this.get_node(obj, true);\r\n\t\t\t\tt = this;\r\n\t\t\t\tif(d.length) {\r\n\t\t\t\t\tif(animation && d.children(\".jstree-children\").length) {\r\n\t\t\t\t\t\td.children(\".jstree-children\").stop(true, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\r\n\t\t\t\t\t\tthis.draw_children(obj);\r\n\t\t\t\t\t\t//d = this.get_node(obj, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!animation) {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\r\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\r\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\r\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\r\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tobj.state.opened = true;\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, true);\r\n\t\t\t\t}\r\n\t\t\t\tif(!d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name before_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_node.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\r\n\t\t\t\tif(!animation || !d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name after_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens every parent of a node (node should be loaded)\r\n\t\t * @name _open_to(obj)\r\n\t\t * @param {mixed} obj the node to reveal\r\n\t\t * @private\r\n\t\t */\r\n\t\t_open_to : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = obj.parents;\r\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\r\n\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\tthis.open_node(p[i], false, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes a node, hiding its children\r\n\t\t * @name close_node(obj [, animation])\r\n\t\t * @param {mixed} obj the node to close\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger close_node.jstree, after_close.jstree\r\n\t\t */\r\n\t\tclose_node : function (obj, animation) {\r\n\t\t\tvar t1, t2, t, d;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.close_node(obj[t1], animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tt = this;\r\n\t\t\td = this.get_node(obj, true);\r\n\r\n\t\t\tobj.state.opened = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\r\n\t\t\t * @event\r\n\t\t\t * @name close_node.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\r\n\t\t\tif(!d.length) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is closed and the animation is complete\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name after_close.jstree\r\n\t\t\t\t * @param {Object} node the closed node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(!animation) {\r\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\r\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\r\n\t\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td\r\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\r\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\r\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\r\n\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\r\n\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\r\n\t\t * @name toggle_node(obj)\r\n\t\t * @param {mixed} obj the node to toggle\r\n\t\t */\r\n\t\ttoggle_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.toggle_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn this.open_node(obj);\r\n\t\t\t}\r\n\t\t\tif(this.is_open(obj)) {\r\n\t\t\t\treturn this.close_node(obj);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_all([obj, animation, original_obj])\r\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\r\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\r\n\t\t * @trigger open_all.jstree\r\n\t\t */\r\n\t\topen_all : function (obj, animation, original_obj) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\r\n\t\t\tif(!dom.length) {\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\r\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\toriginal_obj = original_obj || dom;\r\n\t\t\t_this = this;\r\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\r\n\t\t\tdom.each(function () {\r\n\t\t\t\t_this.open_node(\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\r\n\t\t\t\t\tanimation || 0\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an `open_all` call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_all.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes all nodes within a node (or the tree), revaling their children\r\n\t\t * @name close_all([obj, animation])\r\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\r\n\t\t * @trigger close_all.jstree\r\n\t\t */\r\n\t\tclose_all : function (obj, animation) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true),\r\n\t\t\t\t_this = this, i, j;\r\n\t\t\tif(dom.length) {\r\n\t\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\r\n\t\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an `close_all` call completes\r\n\t\t\t * @event\r\n\t\t\t * @name close_all.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is disabled (not selectable)\r\n\t\t * @name is_disabled(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_disabled : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.disabled;\r\n\t\t},\r\n\t\t/**\r\n\t\t * enables a node - so that it can be selected\r\n\t\t * @name enable_node(obj)\r\n\t\t * @param {mixed} obj the node to enable\r\n\t\t * @trigger enable_node.jstree\r\n\t\t */\r\n\t\tenable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = false;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled').attr('aria-disabled', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is enabled\r\n\t\t\t * @event\r\n\t\t\t * @name enable_node.jstree\r\n\t\t\t * @param {Object} node the enabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * disables a node - so that it can not be selected\r\n\t\t * @name disable_node(obj)\r\n\t\t * @param {mixed} obj the node to disable\r\n\t\t * @trigger disable_node.jstree\r\n\t\t */\r\n\t\tdisable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = true;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled').attr('aria-disabled', true);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is disabled\r\n\t\t\t * @event\r\n\t\t\t * @name disable_node.jstree\r\n\t\t\t * @param {Object} node the disabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * determines if a node is hidden\r\n\t\t * @name is_hidden(obj)\r\n\t\t * @param {mixed} obj the node\r\n\t\t */\r\n\t\tis_hidden : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj.state.hidden === true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides a node - it is still in the structure but will not be visible\r\n\t\t * @name hide_node(obj)\r\n\t\t * @param {mixed} obj the node to hide\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger hide_node.jstree\r\n\t\t */\r\n\t\thide_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = true;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name hide_node.jstree\r\n\t\t\t\t * @param {Object} node the hidden node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('hide_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows a node\r\n\t\t * @name show_node(obj)\r\n\t\t * @param {mixed} obj the node to show\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger show_node.jstree\r\n\t\t */\r\n\t\tshow_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = false;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name show_node.jstree\r\n\t\t\t\t * @param {Object} node the shown node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('show_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides all nodes\r\n\t\t * @name hide_all()\r\n\t\t * @trigger hide_all.jstree\r\n\t\t */\r\n\t\thide_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && !m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = true;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all hidden nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows all nodes\r\n\t\t * @name show_all()\r\n\t\t * @trigger show_all.jstree\r\n\t\t */\r\n\t\tshow_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = false;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all shown nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * called when a node is selected by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name activate_node(obj, e)\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Object} e the related event\r\n\t\t * @trigger activate_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tactivate_node : function (obj, e) {\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!e || typeof e !== 'object') {\r\n\t\t\t\te = {};\r\n\t\t\t}\r\n\r\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\r\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\r\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\r\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\r\n\r\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\r\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\r\n\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.deselect_all(true);\r\n\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(e.shiftKey) {\r\n\t\t\t\t\tvar o = this.get_node(obj).id,\r\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\r\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\r\n\t\t\t\t\t\tc = false,\r\n\t\t\t\t\t\ti, j;\r\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\r\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\r\n\t\t\t\t\t\tif(p[i] === o) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(p[i] === l) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!this.is_disabled(p[i]) && (c || p[i] === o || p[i] === l)) {\r\n\t\t\t\t\t\t\tif (!this.is_hidden(p[i])) {\r\n\t\t\t\t\t\t\t\tthis.select_node(p[i], true, false, e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.deselect_node(p[i], true, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : this.get_node(obj), 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(!this.is_selected(obj)) {\r\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is clicked or intercated with by the user\r\n\t\t\t * @event\r\n\t\t\t * @name activate_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {Object} event the ooriginal event (if any) which triggered the call (may be an empty object)\r\n\t\t\t */\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj), 'event' : e });\r\n\t\t},\r\n\t\t/**\r\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name hover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger hover_node.jstree\r\n\t\t */\r\n\t\thover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\r\n\t\t\tif(o && o.length) { this.dehover_node(o); }\r\n\r\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is hovered\r\n\t\t\t * @event\r\n\t\t\t * @name hover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\r\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); }, 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name dehover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger dehover_node.jstree\r\n\t\t */\r\n\t\tdehover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.children('.jstree-anchor').removeClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is no longer hovered\r\n\t\t\t * @event\r\n\t\t\t * @name dehover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\r\n\t\t},\r\n\t\t/**\r\n\t\t * select a node\r\n\t\t * @name select_node(obj [, supress_event, prevent_open])\r\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\r\n\t\t * @trigger select_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.selected) {\r\n\t\t\t\tobj.state.selected = true;\r\n\t\t\t\tthis._data.core.selected.push(obj.id);\r\n\t\t\t\tif(!prevent_open) {\r\n\t\t\t\t\tdom = this._open_to(obj);\r\n\t\t\t\t}\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is selected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name select_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when selection changes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name changed.jstree\r\n\t\t\t\t\t * @param {Object} node\r\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\r\n\t\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect a node\r\n\t\t * @name deselect_node(obj [, supress_event])\r\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_node : function (obj, supress_event, e) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.selected) {\r\n\t\t\t\tobj.state.selected = false;\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is deselected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name deselect_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * select all nodes in the tree\r\n\t\t * @name select_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger select_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tthis._data.core.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are selected\r\n\t\t\t * @event\r\n\t\t\t * @name select_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect all selected nodes\r\n\t\t * @name deselect_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked').parent().attr('aria-selected', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are deselected\r\n\t\t\t * @event\r\n\t\t\t * @name deselect_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is selected\r\n\t\t * @name is_selected(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_selected : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.state.selected;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all selected nodes\r\n\t\t * @name get_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_selected : function (full) {\r\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\r\n\t\t * @name get_top_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_top_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\r\n\t\t * @name get_bottom_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_bottom_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\r\n\t\t * @name get_state()\r\n\t\t * @private\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_state : function () {\r\n\t\t\tvar state\t= {\r\n\t\t\t\t'core' : {\r\n\t\t\t\t\t'open' : [],\r\n\t\t\t\t\t'loaded' : [],\r\n\t\t\t\t\t'scroll' : {\r\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\r\n\t\t\t\t\t\t'top' : this.element.scrollTop()\r\n\t\t\t\t\t},\r\n\t\t\t\t\t/*!\r\n\t\t\t\t\t'themes' : {\r\n\t\t\t\t\t\t'name' : this.get_theme(),\r\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\r\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\r\n\t\t\t\t\t},\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t'selected' : []\r\n\t\t\t\t}\r\n\t\t\t}, i;\r\n\t\t\tfor(i in this._model.data) {\r\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\t\tif(this._model.data[i].state.loaded && this.settings.core.loaded_state) {\r\n\t\t\t\t\t\t\tstate.core.loaded.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\r\n\t\t\t\t\t\t\tstate.core.open.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\r\n\t\t\t\t\t\t\tstate.core.selected.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t},\r\n\t\t/**\r\n\t\t * sets the state of the tree. Used internally.\r\n\t\t * @name set_state(state [, callback])\r\n\t\t * @private\r\n\t\t * @param {Object} state the state to restore. Keep in mind this object is passed by reference and jstree will modify it.\r\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\r\n\t\t * @trigger set_state.jstree\r\n\t\t */\r\n\t\tset_state : function (state, callback) {\r\n\t\t\tif(state) {\r\n\t\t\t\tif(state.core && state.core.selected && state.core.initial_selection === undefined) {\r\n\t\t\t\t\tstate.core.initial_selection = this._data.core.selected.concat([]).sort().join(',');\r\n\t\t\t\t}\r\n\t\t\t\tif(state.core) {\r\n\t\t\t\t\tvar res, n, t, _this, i;\r\n\t\t\t\t\tif(state.core.loaded) {\r\n\t\t\t\t\t\tif(!this.settings.core.loaded_state || !$.isArray(state.core.loaded) || !state.core.loaded.length) {\r\n\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.loaded, function (nodes) {\r\n\t\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.open) {\r\n\t\t\t\t\t\tif(!$.isArray(state.core.open) || !state.core.open.length) {\r\n\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.open, function (nodes) {\r\n\t\t\t\t\t\t\t\tthis.open_node(nodes, false, 0);\r\n\t\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.scroll) {\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.scroll;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.selected) {\r\n\t\t\t\t\t\t_this = this;\r\n\t\t\t\t\t\tif (state.core.initial_selection === undefined ||\r\n\t\t\t\t\t\t\tstate.core.initial_selection === this._data.core.selected.concat([]).sort().join(',')\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tthis.deselect_all();\r\n\t\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\r\n\t\t\t\t\t\t\t\t_this.select_node(v, false, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.initial_selection;\r\n\t\t\t\t\t\tdelete state.core.selected;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(i in state) {\r\n\t\t\t\t\t\tif(state.hasOwnProperty(i) && i !== \"core\" && $.inArray(i, this.settings.plugins) === -1) {\r\n\t\t\t\t\t\t\tdelete state[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\r\n\t\t\t\t\t\tdelete state.core;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif($.isEmptyObject(state)) {\r\n\t\t\t\t\tstate = null;\r\n\t\t\t\t\tif(callback) { callback.call(this); }\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a `set_state` call completes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name set_state.jstree\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('set_state');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\r\n\t\t * @name refresh()\r\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\r\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\r\n\t\t * @trigger refresh.jstree\r\n\t\t */\r\n\t\trefresh : function (skip_loading, forget_state) {\r\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\r\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._model.data = {};\r\n\t\t\tthis._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis._data.core.last_clicked = null;\r\n\t\t\tthis._data.core.focused = null;\r\n\r\n\t\t\tvar c = this.get_container_ul()[0].className;\r\n\t\t\tif(!skip_loading) {\r\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"' role='group'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='treeitem' id='j\"+this._id+\"_loading'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\t\tthis.element.attr('aria-activedescendant','j'+this._id+'_loading');\r\n\t\t\t}\r\n\t\t\tthis.load_node($.jstree.root, function (o, s) {\r\n\t\t\t\tif(s) {\r\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\r\n\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * triggered when a `refresh` call completes\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * @name refresh.jstree\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tthis.trigger('refresh');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.core.state = null;\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\r\n\t\t * @name refresh_node(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @trigger refresh_node.jstree\r\n\t\t */\r\n\t\trefresh_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\r\n\t\t\tto_load.push(obj.id);\r\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\r\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { to_load.push(this.id); opened.push(this.id); });\r\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\r\n\t\t\t\tthis.open_node(opened, false, 0);\r\n\t\t\t\tthis.select_node(s);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is refreshed\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name refresh_node.jstree\r\n\t\t\t\t * @param {Object} node - the refreshed node\r\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\r\n\t\t\t}, this), false, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * set (change) the ID of a node\r\n\t\t * @name set_id(obj, id)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} id the new ID\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_id.jstree\r\n\t\t */\r\n\t\tset_id : function (obj, id) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar i, j, m = this._model.data, old = obj.id;\r\n\t\t\tid = id.toString();\r\n\t\t\t// update parents (replace current ID with new one in children and children_d)\r\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\r\n\t\t\t}\r\n\t\t\t// update children (replace current ID with new one in parent and parents)\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tm[obj.children[i]].parent = id;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\r\n\t\t\t}\r\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\r\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\r\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\r\n\t\t\ti = this.get_node(obj.id, true);\r\n\t\t\tif(i) {\r\n\t\t\t\ti.attr('id', id); //.children('.jstree-anchor').attr('id', id + '_anchor').end().attr('aria-labelledby', id + '_anchor');\r\n\t\t\t\tif(this.element.attr('aria-activedescendant') === obj.id) {\r\n\t\t\t\t\tthis.element.attr('aria-activedescendant', id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete m[obj.id];\r\n\t\t\tobj.id = id;\r\n\t\t\tobj.li_attr.id = id;\r\n\t\t\tm[id] = obj;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node id value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_id.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} old the old id\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_id',{ \"node\" : obj, \"new\" : obj.id, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the text value of a node\r\n\t\t * @name get_text(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_text : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.text;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\r\n\t\t * @private\r\n\t\t * @name set_text(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_text.jstree\r\n\t\t */\r\n\t\tset_text : function (obj, val) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_text(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tobj.text = val;\r\n\t\t\tif(this.get_node(obj, true).length) {\r\n\t\t\t\tthis.redraw_node(obj.id);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node text value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_text.jstree\r\n\t\t\t * @param {Object} obj\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets a JSON representation of a node (or the whole tree)\r\n\t\t * @name get_json([obj, options])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Object} options\r\n\t\t * @param  {Boolean} options.no_state do not return state information\r\n\t\t * @param  {Boolean} options.no_id do not return ID\r\n\t\t * @param  {Boolean} options.no_children do not include children\r\n\t\t * @param  {Boolean} options.no_data do not include node data\r\n\t\t * @param  {Boolean} options.no_li_attr do not include LI attributes\r\n\t\t * @param  {Boolean} options.no_a_attr do not include A attributes\r\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_json : function (obj, options, flat) {\r\n\t\t\tobj = this.get_node(obj || $.jstree.root);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(options && options.flat && !flat) { flat = []; }\r\n\t\t\tvar tmp = {\r\n\t\t\t\t'id' : obj.id,\r\n\t\t\t\t'text' : obj.text,\r\n\t\t\t\t'icon' : this.get_icon(obj),\r\n\t\t\t\t'li_attr' : $.extend(true, {}, obj.li_attr),\r\n\t\t\t\t'a_attr' : $.extend(true, {}, obj.a_attr),\r\n\t\t\t\t'state' : {},\r\n\t\t\t\t'data' : options && options.no_data ? false : $.extend(true, $.isArray(obj.data)?[]:{}, obj.data)\r\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\r\n\t\t\t}, i, j;\r\n\t\t\tif(options && options.flat) {\r\n\t\t\t\ttmp.parent = obj.parent;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_state) {\r\n\t\t\t\tfor(i in obj.state) {\r\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdelete tmp.state;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_li_attr) {\r\n\t\t\t\tdelete tmp.li_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_a_attr) {\r\n\t\t\t\tdelete tmp.a_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_id) {\r\n\t\t\t\tdelete tmp.id;\r\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\r\n\t\t\t\t\tdelete tmp.li_attr.id;\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\r\n\t\t\t\t\tdelete tmp.a_attr.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(options && options.flat && obj.id !== $.jstree.root) {\r\n\t\t\t\tflat.push(tmp);\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_children) {\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(options && options.flat) {\r\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn options && options.flat ? flat : (obj.id === $.jstree.root ? tmp.children : tmp);\r\n\t\t},\r\n\t\t/**\r\n\t\t * create a new node (do not confuse with load_node)\r\n\t\t * @name create_node([par, node, pos, callback, is_loaded])\r\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\r\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\r\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\r\n\t\t * @param  {Function} callback a function to be called once the node is created\r\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\r\n\t\t * @return {String}            the ID of the newly create node\r\n\t\t * @trigger model.jstree, create_node.jstree\r\n\t\t */\r\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\r\n\t\t\tif(par === null) { par = $.jstree.root; }\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tpos = pos === undefined ? \"last\" : pos;\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\r\n\t\t\t}\r\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\r\n\t\t\tif(typeof node === \"string\") {\r\n\t\t\t\tnode = { \"text\" : node };\r\n\t\t\t} else {\r\n\t\t\t\tnode = $.extend(true, {}, node);\r\n\t\t\t}\r\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\r\n\t\t\tvar tmp, dpc, i, j;\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\r\n\t\t\tif(!node.id) { node.id = true; }\r\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\r\n\r\n\t\t\tpar.children_d = par.children_d.concat(dpc);\r\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tnode = tmp;\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\r\n\t\t\t}\r\n\t\t\ttmp[pos] = node.id;\r\n\t\t\tpar.children = tmp;\r\n\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is created\r\n\t\t\t * @event\r\n\t\t\t * @name create_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the new node among the parent's children\r\n\t\t\t */\r\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\r\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\r\n\t\t\treturn node.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node\r\n\t\t * @name rename_node(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger rename_node.jstree\r\n\t\t */\r\n\t\trename_node : function (obj, val) {\r\n\t\t\tvar t1, t2, old;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.rename_node(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.text;\r\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is renamed\r\n\t\t\t * @event\r\n\t\t\t * @name rename_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t * @param {String} old the old value\r\n\t\t\t */\r\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * remove a node\r\n\t\t * @name delete_node(obj)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger delete_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdelete_node : function (obj) {\r\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c, top, lft;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.delete_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tpar = this.get_node(obj.parent);\r\n\t\t\tpos = $.inArray(obj.id, par.children);\r\n\t\t\tc = false;\r\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(pos !== -1) {\r\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\r\n\t\t\t}\r\n\t\t\ttmp = obj.children_d.concat([]);\r\n\t\t\ttmp.push(obj.id);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\r\n\t\t\t\t\tc = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (c) {\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is deleted\r\n\t\t\t * @event\r\n\t\t\t * @name delete_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t */\r\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\r\n\t\t\tif(c) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tdelete this._model.data[tmp[k]];\r\n\t\t\t}\r\n\t\t\tif($.inArray(this._data.core.focused, tmp) !== -1) {\r\n\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\ttop = this.element[0].scrollTop;\r\n\t\t\t\tlft = this.element[0].scrollLeft;\r\n\t\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\t\tif (this._model.data[$.jstree.root].children[0]) {\r\n\t\t\t\t\t\tthis.get_node(this._model.data[$.jstree.root].children[0], true).children('.jstree-anchor').focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.get_node(par, true).children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\tthis.element[0].scrollTop  = top;\r\n\t\t\t\tthis.element[0].scrollLeft = lft;\r\n\t\t\t}\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if an operation is premitted on the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name check(chk, obj, par, pos)\r\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {mixed} par the parent\r\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\r\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcheck : function (chk, obj, par, pos, more) {\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\r\n\t\t\t\tchc = this.settings.core.check_callback;\r\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\r\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || (chk === \"move_node\" && $.inArray(obj.id, par.children) === pos) || $.inArray(par.id, obj.children_d) !== -1)) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\r\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\r\n\t\t\t\tif(tmp.functions[chk] === false) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp.functions[chk];\r\n\t\t\t}\r\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\r\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the last error\r\n\t\t * @name last_error()\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tlast_error : function () {\r\n\t\t\treturn this._data.core.last_error;\r\n\t\t},\r\n\t\t/**\r\n\t\t * move a node to a new parent\r\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger move_node.jstree\r\n\t\t */\r\n\t\tmove_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.move_node(obj[t1], par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(is_multi) {\r\n\t\t\t\tif((tmp = this.copy_node(obj, par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\r\n\t\t\t\t\treturn tmp;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t//var m = this._model.data;\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.parent === new_par.id) {\r\n\t\t\t\tdpc = new_par.children.concat();\r\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\r\n\t\t\t\tif(tmp !== -1) {\r\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\r\n\t\t\t\t\tif(pos > tmp) { pos--; }\r\n\t\t\t\t}\r\n\t\t\t\ttmp = [];\r\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\r\n\t\t\t\t}\r\n\t\t\t\ttmp[pos] = obj.id;\r\n\t\t\t\tnew_par.children = tmp;\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// clean old parent and up\r\n\t\t\t\ttmp = obj.children_d.concat();\r\n\t\t\t\ttmp.push(obj.id);\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tdpc = [];\r\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\r\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\r\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\r\n\t\t\t\t\t\t\tdpc.push(p[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\r\n\t\t\t\t}\r\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\r\n\r\n\t\t\t\t// insert into new parent and up\r\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tdpc = [];\r\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t\t}\r\n\t\t\t\tdpc[pos] = obj.id;\r\n\t\t\t\tnew_par.children = dpc;\r\n\t\t\t\tnew_par.children_d.push(obj.id);\r\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\r\n\r\n\t\t\t\t// update object\r\n\t\t\t\tobj.parent = new_par.id;\r\n\t\t\t\ttmp = new_par.parents.concat();\r\n\t\t\t\ttmp.unshift(new_par.id);\r\n\t\t\t\tp = obj.parents.length;\r\n\t\t\t\tobj.parents = tmp;\r\n\r\n\t\t\t\t// update object children\r\n\t\t\t\ttmp = tmp.concat();\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\r\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(old_par === $.jstree.root || new_par.id === $.jstree.root) {\r\n\t\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\t\tthis._node_changed(old_par);\r\n\t\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\t}\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is moved\r\n\t\t\t * @event\r\n\t\t\t * @name move_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the old position of the node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn obj.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node to a new parent\r\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger model.jstree copy_node.jstree\r\n\t\t */\r\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.copy_node(obj[t1], par, pos, callback, is_loaded, true, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\r\n\t\t\tif(!node) { return false; }\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\r\n\r\n\t\t\t// insert into new parent and up\r\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tdpc = [];\r\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t}\r\n\t\t\tdpc[pos] = tmp.id;\r\n\t\t\tnew_par.children = dpc;\r\n\t\t\tnew_par.children_d.push(tmp.id);\r\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\r\n\r\n\t\t\tif(new_par.id === $.jstree.root) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t}\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is copied\r\n\t\t\t * @event\r\n\t\t\t * @name copy_node.jstree\r\n\t\t\t * @param {Object} node the copied node\r\n\t\t\t * @param {Object} original the original node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the position of the original node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\r\n\t\t * @name cut(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger cut.jstree\r\n\t\t */\r\n\t\tcut : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'move_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for moving\r\n\t\t\t * @event\r\n\t\t\t * @name cut.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('cut', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\r\n\t\t * @name copy(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger copy.jstree\r\n\t\t */\r\n\t\tcopy : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'copy_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for copying\r\n\t\t\t * @event\r\n\t\t\t * @name copy.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\r\n\t\t * @name get_buffer()\r\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\r\n\t\t */\r\n\t\tget_buffer : function () {\r\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if there is something in the buffer to paste\r\n\t\t * @name can_paste()\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcan_paste : function () {\r\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy or move the previously cut or copied nodes to a new parent\r\n\t\t * @name paste(obj [, pos])\r\n\t\t * @param  {mixed} obj the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\r\n\t\t * @trigger paste.jstree\r\n\t\t */\r\n\t\tpaste : function (obj, pos) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\r\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos, false, false, false, ccp_inst)) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when paste is invoked\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name paste.jstree\r\n\t\t\t\t * @param {String} parent the ID of the receiving node\r\n\t\t\t\t * @param {Array} node the nodes in the buffer\r\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\r\n\t\t\t}\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * clear the buffer of previously copied or cut nodes\r\n\t\t * @name clear_buffer()\r\n\t\t * @trigger clear_buffer.jstree\r\n\t\t */\r\n\t\tclear_buffer : function () {\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when the copy / cut buffer is cleared\r\n\t\t\t * @event\r\n\t\t\t * @name clear_buffer.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_buffer');\r\n\t\t},\r\n\t\t/**\r\n\t\t * put a node in edit mode (input field to rename the node)\r\n\t\t * @name edit(obj [, default_text, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {String} default_text the text to populate the input with (if omitted or set to a non-string value the node's text value is used)\r\n\t\t * @param  {Function} callback a function to be called once the text box is blurred, it is called in the instance's scope and receives the node, a status parameter (true if the rename is successful, false otherwise) and a boolean indicating if the user cancelled the edit. You can access the node's title using .text\r\n\t\t */\r\n\t\tedit : function (obj, default_text, callback) {\r\n\t\t\tvar rtl, w, a, s, t, h1, h2, fn, tmp, cancel = false;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(!this.check(\"edit\", obj, this.get_parent(obj))) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ttmp = obj;\r\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\r\n\t\t\tthis.set_text(obj, \"\");\r\n\t\t\tobj = this._open_to(obj);\r\n\t\t\ttmp.text = default_text;\r\n\r\n\t\t\trtl = this._data.core.rtl;\r\n\t\t\tw  = this.element.width();\r\n\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\ta  = obj.children('.jstree-anchor').focus();\r\n\t\t\ts  = $('<span>');\r\n\t\t\t/*!\r\n\t\t\toi = obj.children(\"i:visible\"),\r\n\t\t\tai = a.children(\"i:visible\"),\r\n\t\t\tw1 = oi.width() * oi.length,\r\n\t\t\tw2 = ai.width() * ai.length,\r\n\t\t\t*/\r\n\t\t\tt  = default_text;\r\n\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(document.body);\r\n\t\t\th2 = $(\"<\"+\"input />\", {\r\n\t\t\t\t\t\t\"value\" : t,\r\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\r\n\t\t\t\t\t\t// \"size\" : t.length,\r\n\t\t\t\t\t\t\"css\" : {\r\n\t\t\t\t\t\t\t\"padding\" : \"0\",\r\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\r\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\r\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\r\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"blur\" : $.proxy(function (e) {\r\n\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\r\n\t\t\t\t\t\t\t\tv = i.val(),\r\n\t\t\t\t\t\t\t\tf = this.settings.core.force_text,\r\n\t\t\t\t\t\t\t\tnv;\r\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\r\n\t\t\t\t\t\t\th1.remove();\r\n\t\t\t\t\t\t\ts.replaceWith(a);\r\n\t\t\t\t\t\t\ts.remove();\r\n\t\t\t\t\t\t\tt = f ? t : $('<div></div>').append($.parseHTML(t)).html();\r\n\t\t\t\t\t\t\tthis.set_text(obj, t);\r\n\t\t\t\t\t\t\tnv = !!this.rename_node(obj, f ? $('<div></div>').text(v).text() : $('<div></div>').append($.parseHTML(v)).html());\r\n\t\t\t\t\t\t\tif(!nv) {\r\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\tsetTimeout($.proxy(function () {\r\n\t\t\t\t\t\t\t\tvar node = this.get_node(tmp.id, true);\r\n\t\t\t\t\t\t\t\tif(node.length) {\r\n\t\t\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\t\t\tnode.children('.jstree-anchor').focus();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\tif(callback) {\r\n\t\t\t\t\t\t\t\tcallback.call(this, tmp, nv, cancel);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\th2 = null;\r\n\t\t\t\t\t\t}, this),\r\n\t\t\t\t\t\t\"keydown\" : function (e) {\r\n\t\t\t\t\t\t\tvar key = e.which;\r\n\t\t\t\t\t\t\tif(key === 27) {\r\n\t\t\t\t\t\t\t\tcancel = true;\r\n\t\t\t\t\t\t\t\tthis.value = t;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tthis.blur();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"keyup\" : function (e) {\r\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"keypress\" : function(e) {\r\n\t\t\t\t\t\t\tif(e.which === 13) { return false; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\tfn = {\r\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\r\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\r\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\r\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\r\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\r\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\r\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\r\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\r\n\t\t\t\t};\r\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\r\n\t\t\ta.replaceWith(s);\r\n\t\t\th1.css(fn);\r\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\r\n\t\t\t$(document).one('mousedown.jstree touchstart.jstree dnd_start.vakata', function (e) {\r\n\t\t\t\tif (h2 && e.target !== h2) {\r\n\t\t\t\t\t$(h2).blur();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * changes the theme\r\n\t\t * @name set_theme(theme_name [, theme_url])\r\n\t\t * @param {String} theme_name the name of the new theme to apply\r\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\r\n\t\t * @trigger set_theme.jstree\r\n\t\t */\r\n\t\tset_theme : function (theme_name, theme_url) {\r\n\t\t\tif(!theme_name) { return false; }\r\n\t\t\tif(theme_url === true) {\r\n\t\t\t\tvar dir = this.settings.core.themes.dir;\r\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\r\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\r\n\t\t\t}\r\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\r\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\r\n\t\t\t\tthemes_loaded.push(theme_url);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.themes.name) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.name = theme_name;\r\n\t\t\tthis.element.addClass('jstree-' + theme_name);\r\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\r\n\t\t\t/**\r\n\t\t\t * triggered when a theme is set\r\n\t\t\t * @event\r\n\t\t\t * @name set_theme.jstree\r\n\t\t\t * @param {String} theme the new theme\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme name\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme : function () { return this._data.core.themes.name; },\r\n\t\t/**\r\n\t\t * changes the theme variant (if the theme has variants)\r\n\t\t * @name set_theme_variant(variant_name)\r\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\r\n\t\t */\r\n\t\tset_theme_variant : function (variant_name) {\r\n\t\t\tif(this._data.core.themes.variant) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.variant = variant_name;\r\n\t\t\tif(variant_name) {\r\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme variant\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\r\n\t\t/**\r\n\t\t * shows a striped background on the container (if the theme supports it)\r\n\t\t * @name show_stripes()\r\n\t\t */\r\n\t\tshow_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the striped background on the container\r\n\t\t * @name hide_stripes()\r\n\t\t */\r\n\t\thide_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the striped background on the container\r\n\t\t * @name toggle_stripes()\r\n\t\t */\r\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\r\n\t\t/**\r\n\t\t * shows the connecting dots (if the theme supports it)\r\n\t\t * @name show_dots()\r\n\t\t */\r\n\t\tshow_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the connecting dots\r\n\t\t * @name hide_dots()\r\n\t\t */\r\n\t\thide_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the connecting dots\r\n\t\t * @name toggle_dots()\r\n\t\t */\r\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\r\n\t\t/**\r\n\t\t * show the node icons\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node icons\r\n\t\t * @name hide_icons()\r\n\t\t */\r\n\t\thide_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\r\n\t\t/**\r\n\t\t * show the node ellipsis\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node ellipsis\r\n\t\t * @name hide_ellipsis()\r\n\t\t */\r\n\t\thide_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node ellipsis\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_ellipsis : function () { if(this._data.core.themes.ellipsis) { this.hide_ellipsis(); } else { this.show_ellipsis(); } },\r\n\t\t/**\r\n\t\t * set the node icon for a node\r\n\t\t * @name set_icon(obj, icon)\r\n\t\t * @param {mixed} obj\r\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\r\n\t\t */\r\n\t\tset_icon : function (obj, icon) {\r\n\t\t\tvar t1, t2, dom, old;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.icon;\r\n\t\t\tobj.icon = icon === true || icon === null || icon === undefined || icon === '' ? true : icon;\r\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\r\n\t\t\tif(icon === false) {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tthis.hide_icon(obj);\r\n\t\t\t}\r\n\t\t\telse if(icon === true || icon === null || icon === undefined || icon === '') {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the node icon for a node\r\n\t\t * @name get_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_icon : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.icon;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the icon on an individual node\r\n\t\t * @name hide_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\thide_icon : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tobj.icon = false;\r\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * show the icon on an individual node\r\n\t\t * @name show_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\tshow_icon : function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\r\n\t\t\tif(!obj.icon) { obj.icon = true; }\r\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t// helpers\r\n\t$.vakata = {};\r\n\r\n\t$.vakata.search = function(pattern, txt, options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.fuzzy !== false) {\r\n\t\t\toptions.fuzzy = true;\r\n\t\t}\r\n\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\tvar MATCH_LOCATION\t= options.location || 0,\r\n\t\t\tMATCH_DISTANCE\t= options.distance || 100,\r\n\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\r\n\t\t\tpatternLen = pattern.length;\r\n\t\tif(patternLen > 32) {\r\n\t\t\toptions.fuzzy = false;\r\n\t\t}\r\n\t\tif(options.fuzzy) {\r\n\t\t\tvar matchmask = 1 << (patternLen - 1);\r\n\t\t\tvar pattern_alphabet = (function () {\r\n\t\t\t\tvar mask = {},\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn mask;\r\n\t\t\t})();\r\n\t\t\tvar match_bitapScore = function (e, x) {\r\n\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t}\r\n\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t};\r\n\t\t}\r\n\t\tvar search = function (text) {\r\n\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\tscore: 0\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!options.fuzzy) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\tscore: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar i, j,\r\n\t\t\t\ttextLen = text.length,\r\n\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\tbinMin, binMid,\r\n\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\tscore = 1,\r\n\t\t\t\tlocations = [];\r\n\t\t\tif (bestLoc != -1) {\r\n\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\tif (bestLoc != -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbestLoc = -1;\r\n\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\tbinMin = 0;\r\n\t\t\t\tbinMid = binMax;\r\n\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t}\r\n\t\t\t\tbinMax = binMid;\r\n\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\trd = Array(finish + 2);\r\n\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tlastRd = rd;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\tscore: score\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t};\r\n\r\n\t// collect attributes\r\n\t$.vakata.attributes = function(node, with_values) {\r\n\t\tnode = $(node)[0];\r\n\t\tvar attr = with_values ? {} : [];\r\n\t\tif(node && node.attributes) {\r\n\t\t\t$.each(node.attributes, function (i, v) {\r\n\t\t\t\tif($.inArray(v.name.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\r\n\t\t\t\tif(v.value !== null && $.trim(v.value) !== '') {\r\n\t\t\t\t\tif(with_values) { attr[v.name] = v.value; }\r\n\t\t\t\t\telse { attr.push(v.name); }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn attr;\r\n\t};\r\n\t$.vakata.array_unique = function(array) {\r\n\t\tvar a = [], i, j, l, o = {};\r\n\t\tfor(i = 0, l = array.length; i < l; i++) {\r\n\t\t\tif(o[array[i]] === undefined) {\r\n\t\t\t\ta.push(array[i]);\r\n\t\t\t\to[array[i]] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove = function(array, from) {\r\n\t\tarray.splice(from, 1);\r\n\t\treturn array;\r\n\t\t//var rest = array.slice((to || from) + 1 || array.length);\r\n\t\t//array.length = from < 0 ? array.length + from : from;\r\n\t\t//array.push.apply(array, rest);\r\n\t\t//return array;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove_item = function(array, item) {\r\n\t\tvar tmp = $.inArray(item, array);\r\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\r\n\t};\r\n\t$.vakata.array_filter = function(c,a,b,d,e) {\r\n\t\tif (c.filter) {\r\n\t\t\treturn c.filter(a, b);\r\n\t\t}\r\n\t\td=[];\r\n\t\tfor (e in c) {\r\n\t\t\tif (~~e+''===e+'' && e>=0 && a.call(b,c[e],+e,c)) {\r\n\t\t\t\td.push(c[e]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn d;\r\n\t};\r\n\r\n\r\n\treturn Tree;\r\n\r\n});\r\n\ndefine('skylark-jstree/plugin/changed',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.changed) { return; }\r\n\r\n\t$.jstree.plugins.changed = function (options, parent) {\r\n\t\tvar last = [];\r\n\t\tthis.trigger = function (ev, data) {\r\n\t\t\tvar i, j;\r\n\t\t\tif(!data) {\r\n\t\t\t\tdata = {};\r\n\t\t\t}\r\n\t\t\tif(ev.replace('.jstree','') === 'changed') {\r\n\t\t\t\tdata.changed = { selected : [], deselected : [] };\r\n\t\t\t\tvar tmp = {};\r\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\r\n\t\t\t\t\ttmp[last[i]] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\r\n\t\t\t\t\tif(!tmp[data.selected[i]]) {\r\n\t\t\t\t\t\tdata.changed.selected.push(data.selected[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttmp[data.selected[i]] = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\r\n\t\t\t\t\tif(tmp[last[i]] === 1) {\r\n\t\t\t\t\t\tdata.changed.deselected.push(last[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlast = data.selected.slice();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when selection changes (the \"changed\" plugin enhances the original event with more data)\r\n\t\t\t * @event\r\n\t\t\t * @name changed.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {Object} action the action that caused the selection to change\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @param {Object} changed an object containing two properties `selected` and `deselected` - both arrays of node IDs, which were selected or deselected since the last changed event\r\n\t\t\t * @param {Object} event the event (if any) that triggered this changed event\r\n\t\t\t * @plugin changed\r\n\t\t\t */\r\n\t\t\tparent.trigger.call(this, ev, data);\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tlast = [];\r\n\t\t\treturn parent.refresh.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\treturn $;\r\n});\ndefine('skylark-jstree/plugin/checkbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.checkbox) { return; }\r\n\r\n\tvar _i = document.createElement('I');\r\n\t_i.className = 'jstree-icon jstree-checkbox';\r\n\t_i.setAttribute('role', 'presentation');\r\n\t/**\r\n\t * stores all defaults for the checkbox plugin\r\n\t * @name $.jstree.defaults.checkbox\r\n\t * @plugin checkbox\r\n\t */\r\n\t$.jstree.defaults.checkbox = {\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.visible\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tvisible\t\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.three_state\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthree_state\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.whole_node\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\twhole_node\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tkeep_selected_style\t: true,\r\n\t\t/**\r\n\t\t * This setting controls how cascading and undetermined nodes are applied.\r\n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used.\r\n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\r\n\t\t * @name $.jstree.defaults.checkbox.cascade\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade\t\t\t\t: '',\r\n\t\t/**\r\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing.\r\n\t\t * @name $.jstree.defaults.checkbox.tie_selection\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\ttie_selection\t\t: true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects disabled checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_disabled\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_disabled : true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects hidden checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_hidden\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_hidden : true\r\n\t};\r\n\t$.jstree.plugins.checkbox = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tthis._data.checkbox.uto = false;\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tif(this.settings.checkbox.three_state) {\r\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\r\n\t\t\t}\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\r\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\r\n\t\t\t\t\t}, this));\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {\r\n\t\t\t\t\t\t\t// only if undetermined is in setting\r\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\ti, j;\r\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = m[dpc[i]].state.checked || (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\r\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\r\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\r\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\r\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tsel = {}, cur = this._data[ t ? 'core' : 'checkbox' ].selected;\r\n\r\n\t\t\t\t\t\t\tfor (i = 0, j = cur.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tsel[cur[i]] = true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, true);\r\n\t\t\t\t\t\t\t\tvar temp = obj.children_d.concat(obj.id);\r\n\t\t\t\t\t\t\t\tfor (i = 0, j = temp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif (selectedIds.indexOf(temp[i]) > -1) {\r\n\t\t\t\t\t\t\t\t\t\tsel[temp[i]] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tdelete sel[temp[i]];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\twhile(par && par.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tsel[par.id] = true;\r\n\t\t\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcur = [];\r\n\t\t\t\t\t\t\tfor (i in sel) {\r\n\t\t\t\t\t\t\t\tif (sel.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\tcur.push(i);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar obj = this.get_node($.jstree.root),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\r\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\r\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tcur = this._data[ t ? 'core' : 'checkbox' ].selected, sel = {},\r\n\t\t\t\t\t\t\t\tstillSelectedIds = [],\r\n\t\t\t\t\t\t\t\tallIds = obj.children_d.concat(obj.id);\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, false);\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn allIds.indexOf(id) === -1 || selectedIds.indexOf(id) > -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// only apply up if cascade up is enabled and if this node is not selected\r\n\t\t\t\t\t\t\t// (if all child nodes are disabled and cascade_to_disabled === false then this node will till be selected).\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1 && cur.indexOf(obj.id) === -1) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\r\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn obj.parents.indexOf(id) === -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('delete_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on('move_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\r\n\t\t\t\t\t\t\t\told_par = data.old_parent,\r\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\tif(!is_multi) {\r\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\r\n\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = new_par;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all nodes whose state is \"undetermined\"\r\n\t\t * @name get_undetermined([full])\r\n\t\t * @param  {boolean} full: if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_undetermined = function (full) {\r\n\t\t\tif (this.settings.checkbox.cascade.indexOf('undetermined') === -1) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\tvar i, j, k, l, o = {}, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this, r = [];\r\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\r\n\t\t\t\t\tfor(k = 0, l = m[s[i]].parents.length; k < l; k++) {\r\n\t\t\t\t\t\tif(o[m[s[i]].parents[k]] !== undefined) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(m[s[i]].parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\to[m[s[i]].parents[k]] = true;\r\n\t\t\t\t\t\t\tp.push(m[s[i]].parents[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// attempt for server side undetermined state\r\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\r\n\t\t\t\t.each(function () {\r\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp) { return; }\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp.state.loaded) {\r\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\tif(o[tmp.id] === undefined && tmp.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\to[tmp.id] = true;\r\n\t\t\t\t\t\t\t\tp.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(k = 0, l = tmp.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\tif(o[tmp.parents[k]] === undefined && tmp.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp.parents[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\r\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\t\tif(o[tmp2.id] === undefined && tmp2.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp2.id] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp2.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = tmp2.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tif(o[tmp2.parents[k]] === undefined && tmp2.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\to[tmp2.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\t\tp.push(tmp2.parents[k]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tr.push(full ? m[p[i]] : p[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t};\r\n\t\t/**\r\n\t\t * set the undetermined state where and if necessary. Used internally.\r\n\t\t * @private\r\n\t\t * @name _undetermined()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis._undetermined = function () {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tvar p = this.get_undetermined(false), i, j, s;\r\n\r\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\ts = this.get_node(p[i], true);\r\n\t\t\t\tif(s && s.length) {\r\n\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, is_callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tvar i, j, tmp = null, icon = null;\r\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\r\n\t\t\t\t\ticon = _i.cloneNode(false);\r\n\t\t\t\t\tif(this._model.data[obj.id].state.checkbox_disabled) { icon.className += ' jstree-checkbox-disabled'; }\r\n\t\t\t\t\ttmp.insertBefore(icon, tmp.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t\t/**\r\n\t\t * show the node checkbox icons\r\n\t\t * @name show_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * hide the node checkbox icons\r\n\t\t * @name hide_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\r\n\t\t/**\r\n\t\t * checks if a node is in an undetermined state\r\n\t\t * @name is_undetermined(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tthis.is_undetermined = function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\r\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t/**\r\n\t\t * disable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger disable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.disable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = true;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is disabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name disable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('disable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * enable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger enable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.enable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = false;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').removeClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is enabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name enable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('enable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.activate_node = function (obj, e) {\r\n\t\t\tif($(e.target).hasClass('jstree-checkbox-disabled')) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\te.ctrlKey = true;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\r\n\t\t\t}\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_checked(obj)) {\r\n\t\t\t\tthis.uncheck_node(obj, e);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.check_node(obj, e);\r\n\t\t\t}\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Cascades checked state to a node and all its descendants. This function does NOT affect hidden and disabled nodes (or their descendants).\r\n\t\t * However if these unaffected nodes are already selected their ids will be included in the returned array.\r\n\t\t * @private\r\n\t\t * @param {string} id the node ID\r\n\t\t * @param {bool} checkedState should the nodes be checked or not\r\n\t\t * @returns {Array} Array of all node id's (in this tree branch) that are checked.\r\n\t\t */\r\n\t\tthis._cascade_new_checked_state = function (id, checkedState) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = this.settings.checkbox.tie_selection;\r\n\t\t\tvar node = this._model.data[id];\r\n\t\t\tvar selectedNodeIds = [];\r\n\t\t\tvar selectedChildrenIds = [], i, j, selectedChildIds;\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this.settings.checkbox.cascade_to_disabled || !node.state.disabled) &&\r\n\t\t\t\t(this.settings.checkbox.cascade_to_hidden || !node.state.hidden)\r\n\t\t\t) {\r\n\t\t\t\t//First try and check/uncheck the children\r\n\t\t\t\tif (node.children) {\r\n\t\t\t\t\tfor (i = 0, j = node.children.length; i < j; i++) {\r\n\t\t\t\t\t\tvar childId = node.children[i];\r\n\t\t\t\t\t\tselectedChildIds = self._cascade_new_checked_state(childId, checkedState);\r\n\t\t\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t\t\t\tif (selectedChildIds.indexOf(childId) > -1) {\r\n\t\t\t\t\t\t\tselectedChildrenIds.push(childId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar dom = self.get_node(node, true);\r\n\r\n\t\t\t\t//A node's state is undetermined if some but not all of it's children are checked/selected .\r\n\t\t\t\tvar undetermined = selectedChildrenIds.length > 0 && selectedChildrenIds.length < node.children.length;\r\n\r\n\t\t\t\tif(node.original && node.original.state && node.original.state.undetermined) {\r\n\t\t\t\t\tnode.original.state.undetermined = undetermined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//If a node is undetermined then remove selected class\r\n\t\t\t\tif (undetermined) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t//Otherwise, if the checkedState === true (i.e. the node is being checked now) and all of the node's children are checked (if it has any children),\r\n\t\t\t\t//check the node and style it correctly.\r\n\t\t\t\telse if (checkedState && selectedChildrenIds.length === node.children.length) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = checkedState;\r\n\t\t\t\t\tselectedNodeIds.push(node.id);\r\n\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectedChildIds = this.get_checked_descendants(id);\r\n\r\n\t\t\t\tif (node.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tselectedChildIds.push(node.id);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t}\r\n\r\n\t\t\treturn selectedNodeIds;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets ids of nodes selected in branch (of tree) specified by id (does not include the node specified by id)\r\n\t\t * @name get_checked_descendants(obj)\r\n\t\t * @param {string} id the node ID\r\n\t\t * @return {Array} array of IDs\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked_descendants = function (id) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = self.settings.checkbox.tie_selection;\r\n\t\t\tvar node = self._model.data[id];\r\n\r\n\t\t\treturn node.children_d.filter(function(_id) {\r\n\t\t\t\treturn self._model.data[_id].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\r\n\t\t * @name check_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\r\n\t\t * @trigger check_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.check_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checked) {\r\n\t\t\t\tobj.state.checked = true;\r\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name check_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\r\n\t\t * @name uncheck_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to uncheck multiple nodes\r\n\t\t * @trigger uncheck_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checked) {\r\n\t\t\t\tobj.state.checked = false;\r\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name uncheck_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\r\n\t\t * @name check_all()\r\n\t\t * @trigger check_all.jstree, changed.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tthis._data.checkbox.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name check_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\r\n\t\t * @name uncheck_all()\r\n\t\t * @trigger uncheck_all.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name uncheck_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\r\n\t\t};\r\n\t\t/**\r\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\r\n\t\t * @name is_checked(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.is_checked = function (obj) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\treturn obj.state.checked;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\r\n\t\t * @name get_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\r\n\t\t\treturn full ? $.map(this._data.checkbox.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\r\n\t\t * @name get_top_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_top_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\r\n\t\t * @name get_bottom_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_bottom_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t};\r\n\t\tthis.load_node = function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c, tmp;\r\n\t\t\tif(!$.isArray(obj) && !this.settings.checkbox.tie_selection) {\r\n\t\t\t\ttmp = this.get_node(obj);\r\n\t\t\t\tif(tmp && tmp.state.loaded) {\r\n\t\t\t\t\tfor(k = 0, l = tmp.children_d.length; k < l; k++) {\r\n\t\t\t\t\t\tif(this._model.data[tmp.children_d[k]].state.checked) {\r\n\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, tmp.children_d[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn parent.load_node.apply(this, arguments);\r\n\t\t};\r\n\t\tthis.get_state = function () {\r\n\t\t\tvar state = parent.get_state.apply(this, arguments);\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return state; }\r\n\t\t\tstate.checkbox = this._data.checkbox.selected.slice();\r\n\t\t\treturn state;\r\n\t\t};\r\n\t\tthis.set_state = function (state, callback) {\r\n\t\t\tvar res = parent.set_state.apply(this, arguments);\r\n\t\t\tif(res && state.checkbox) {\r\n\t\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\tthis.uncheck_all();\r\n\t\t\t\t\tvar _this = this;\r\n\t\t\t\t\t$.each(state.checkbox, function (i, v) {\r\n\t\t\t\t\t\t_this.check_node(v);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tdelete state.checkbox;\r\n\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\t}\r\n\t\t\treturn parent.refresh.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// include the checkbox plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\r\n\r\n\treturn $;\r\n});\r\n\ndefine('skylark-jstree/plugin/conditionalselect',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.conditionalselect) { return; }\r\n\r\n\t/**\r\n\t * a callback (function) which is invoked in the instance's scope and receives two arguments - the node and the event that triggered the `activate_node` call. Returning false prevents working with the node, returning true allows invoking activate_node. Defaults to returning `true`.\r\n\t * @name $.jstree.defaults.checkbox.visible\r\n\t * @plugin checkbox\r\n\t */\r\n\t$.jstree.defaults.conditionalselect = function () { return true; };\r\n\t$.jstree.plugins.conditionalselect = function (options, parent) {\r\n\t\t// own function\r\n\t\tthis.activate_node = function (obj, e) {\r\n\t\t\tif(this.settings.conditionalselect.call(this, this.get_node(obj), e)) {\r\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\treturn $;\r\n});\ndefine('skylark-jstree/plugin/menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\"\r\n],function(langx,browser,eventer,noder,geom,$){\r\n\r\n\tvar popup = null;\r\n\tvar right_to_left ;\r\n\r\n\tvar Menu = langx.Evented.inherit({\r\n        klassName: \"Menu\",\r\n\r\n        init : function(elm,options) {\r\n        \tif (!options) {\r\n        \t\toptions = elm;\r\n        \t\telm = null;\r\n        \t}\r\n\t\t\tvar self = this,$el;\r\n\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\thide_onmouseleave\t: 0,\r\n\t\t\t\t\ticons\t\t\t\t: true\r\n\r\n\t\t\t},options);\r\n\r\n\t\t\tif (!elm) {\r\n\t\t\t\t$el = this.$el = $(\"<ul class='vakata-context'></ul>\");\r\n\t\t\t} else {\r\n\t\t\t\t$el = this.$el = $(elm);\r\n\t\t\t}\r\n\r\n\t\t\tvar to = false;\r\n\t\t\t$el.on(\"mouseenter\", \"li\", function (e) {\r\n\t\t\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) {\r\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\r\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\t$el.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\r\n\r\n\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\r\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\r\n\t\t\t\t\tself._show_submenu(this);\r\n\t\t\t\t})\r\n\t\t\t\t// тестово - дали не натоварва?\r\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) { return; }\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseleave\", function (e) {\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\tif(self._options.hide_onmouseleave) {\r\n\t\t\t\t\t\tto = setTimeout(\r\n\t\t\t\t\t\t\t(function (t) {\r\n\t\t\t\t\t\t\t\treturn function () { self.hide(); };\r\n\t\t\t\t\t\t\t}(this)), self._options.hide_onmouseleave);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"click\", \"a\", function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t//})\r\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\r\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && self._execute($(this).attr(\"rel\")) !== false) {\r\n\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keydown', 'a', function (e) {\r\n\t\t\t\t\t\tvar o = null;\r\n\t\t\t\t\t\tswitch(e.which) {\r\n\t\t\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t\te.type = \"click\";\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().closest(\"li\").first().find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t//console.log(e.which);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('keydown', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar a = self.$el.find('.vakata-contextmenu-shortcut-' + e.which).parent();\r\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\r\n\t\t\t\t\t\ta.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n        render : function() {\r\n        \tvar items = this._options.items;\r\n\t\t\tif(this._parse(items)) {\r\n\t\t\t\tthis.$el.html(this.html);\r\n\t\t\t}\r\n\t\t\tthis.$el.width('');\r\n        },\r\n\r\n\t\t_trigger : function (event_name) {\r\n\t\t\t$(document).trigger(\"context_\" + event_name + \".sbswt\", {\r\n\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},        \r\n\r\n\t\t_execute : function (i) {\r\n\t\t\ti = this.items[i];\r\n\t\t\treturn i && (!i._disabled || (langx.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : this.reference, \"element\" : this.$el }))) && i.action ? i.action.call(null, {\r\n\t\t\t\t\t\t\"item\"\t\t: i,\r\n\t\t\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) : false;\r\n\t\t},\r\n\t\t_parse : function (o, is_callback) {\r\n\t\t\tvar self = this,\r\n\t\t\t\treference = self._options.reference;\r\n\r\n\t\t\tif(!o) { return false; }\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\tself.html\t\t= \"\";\r\n\t\t\t\tself.items\t= [];\r\n\t\t\t}\r\n\t\t\tvar str = \"\",\r\n\t\t\t\tsep = false,\r\n\t\t\t\ttmp;\r\n\r\n\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\r\n\t\t\tlangx.each(o, function (i, val) {\r\n\t\t\t\tif(!val) { return true; }\r\n\t\t\t\tself.items.push(val);\r\n\t\t\t\tif(!sep && val.separator_before) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t}\r\n\t\t\t\tsep = false;\r\n\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || (langx.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : reference, \"element\" : self.$el })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\r\n\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (self.items.length - 1) + \"' \" + (val.title ? \"title='\" + val.title + \"'\" : \"\") + \">\";\r\n\t\t\t\tif(self._options.icons) {\r\n\t\t\t\t\tstr += \"<\"+\"i \";\r\n\t\t\t\t\tif(val.icon) {\r\n\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\r\n\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\r\n\t\t\t\t}\r\n\t\t\t\tstr += (langx.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : reference, \"element\" : self.$el }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\r\n\t\t\t\tif(val.submenu) {\r\n\t\t\t\t\ttmp = self._parse(val.submenu, true);\r\n\t\t\t\t\tif(tmp) { str += tmp; }\r\n\t\t\t\t}\r\n\t\t\t\tstr += \"<\"+\"/li>\";\r\n\t\t\t\tif(val.separator_after) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t\tsep = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\r\n\t\t\tif(is_callback) { str += \"</ul>\"; }\r\n\t\t\t/**\r\n\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\r\n\t\t\t * @event\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t * @name context_parse.vakata\r\n\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t */\r\n\t\t\tif(!is_callback) { self.html = str; self._trigger(\"parse\"); }\r\n\t\t\treturn str.length > 10 ? str : false;\r\n\t\t},\r\n\t\t_show_submenu : function (o) {\r\n\t\t\to = $(o);\r\n\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\r\n\t\t\tvar e = o.children(\"ul\"),\r\n\t\t\t\txl = o.offset().left,\r\n\t\t\t\tx = xl + o.outerWidth(),\r\n\t\t\t\ty = o.offset().top,\r\n\t\t\t\tw = e.width(),\r\n\t\t\t\th = e.height(),\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\r\n\t\t\tif(right_to_left) {\r\n\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\to[x + w > dw  && xl > dw - x ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\r\n\t\t\t}\r\n\t\t\tif(y + h + 10 > dh) {\r\n\t\t\t\te.css(\"bottom\",\"-1px\");\r\n\t\t\t}\r\n\r\n\t\t\t//if does not fit - stick it to the side\r\n\t\t\tif (o.hasClass('vakata-context-right')) {\r\n\t\t\t\tif (xl < w) {\r\n\t\t\t\t\te.css(\"margin-right\", xl - w);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (dw - x < w) {\r\n\t\t\t\t\te.css(\"margin-left\", dw - x - w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\te.show();\r\n\t\t},\r\n\t\tshow : function (reference, position, data) {\r\n\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\r\n\t\t\tswitch(cond) {\r\n\t\t\t\tcase (!position && !reference):\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase (!!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\to = reference.offset();\r\n\t\t\t\t\tthis.position_x\t= o.left + reference.outerHeight();\r\n\t\t\t\t\tthis.position_y\t= o.top;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!!position && !reference):\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\r\n\t\t\t\tdata = $(reference).data('vakata_contextmenu');\r\n\t\t\t}\r\n\r\n\t\t\tif(this.items.length) {\r\n\t\t\t\tthis.$el.appendTo(document.body);\r\n\t\t\t\te = this.$el;\r\n\t\t\t\tx = this.position_x;\r\n\t\t\t\ty = this.position_y;\r\n\t\t\t\tw = e.width();\r\n\t\t\t\th = e.height();\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tx -= (e.outerWidth() - $(reference).outerWidth());\r\n\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\r\n\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(x + w + 20 > dw) {\r\n\t\t\t\t\tx = dw - (w + 20);\r\n\t\t\t\t}\r\n\t\t\t\tif(y + h + 20 > dh) {\r\n\t\t\t\t\ty = dh - (h + 20);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$el\r\n\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\r\n\t\t\t\t\t.show()\r\n\t\t\t\t\t.find('a').first().focus().parent().addClass(\"vakata-context-hover\");\r\n\t\t\t\tthis.is_visible = true;\r\n\r\n\t\t\t\tpopup = this;\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_show.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"show\");\r\n\t\t\t}\r\n\t\t},\r\n\t\thide : function () {\r\n\t\t\tif(this.is_visible) {\r\n\t\t\t\tthis.$el.hide().find(\"ul\").hide().end().find(':focus').blur().end().detach();\r\n\t\t\t\tthis.is_visible = false;\r\n\t\t\t\tpopup = null;\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_hide.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"hide\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n    });\t\r\n\r\n\t$(function () {\r\n\t\tright_to_left = $(document.body).css(\"direction\") === \"rtl\";\r\n\r\n\t\t$(document)\r\n\t\t\t.on(\"mousedown.sbswt.popup\", function (e) {\r\n\t\t\t\tif(popup && popup.$el[0] !== e.target  && !noder.contains(popup.$el[0], e.target)) {\r\n\t\t\t\t\tpopup.hide();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on(\"context_show.sbswt.popup\", function (e, data) {\r\n\t\t\t\tpopup.$el.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tpopup.$el.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\r\n\t\t\t\t}\r\n\t\t\t\t// also apply a RTL class?\r\n\t\t\t\tpopup.$el.find(\"ul\").hide().end();\r\n\t\t\t});\r\n\t});\r\n\r\n\tMenu.popup = function (reference, position, data) {\r\n\t\tvar m = new Menu({\r\n\t\t\treference : reference,\r\n\t\t\titems : data\r\n\t\t});\r\n\t\tm.show(reference,position);\r\n\t};\r\n\r\n\tMenu.hide = function() {\r\n\t\tif (popup) {\r\n\t\t\tpopup.hide();\r\n\t\t}\r\n\t}\r\n\r\n\treturn Menu;\r\n\r\n});\ndefine('skylark-jstree/plugin/contextmenu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./menu\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$, menu,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.contextmenu) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the contextmenu plugin\r\n\t * @name $.jstree.defaults.contextmenu\r\n\t * @plugin contextmenu\r\n\t */\r\n\t$.jstree.defaults.contextmenu = {\r\n\t\t/**\r\n\t\t * a boolean indicating if the node should be selected when the context menu is invoked on it. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.contextmenu.select_node\r\n\t\t * @plugin contextmenu\r\n\t\t */\r\n\t\tselect_node : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if the menu should be shown aligned with the node. Defaults to `true`, otherwise the mouse coordinates are used.\r\n\t\t * @name $.jstree.defaults.contextmenu.show_at_node\r\n\t\t * @plugin contextmenu\r\n\t\t */\r\n\t\tshow_at_node : true,\r\n\t\t/**\r\n\t\t * an object of actions, or a function that accepts a node and a callback function and calls the callback function with an object of actions available for that node (you can also return the items too).\r\n\t\t *\r\n\t\t * Each action consists of a key (a unique name) and a value which is an object with the following properties (only label and action are required). Once a menu item is activated the `action` function will be invoked with an object containing the following keys: item - the contextmenu item definition as seen below, reference - the DOM node that was used (the tree node), element - the contextmenu DOM element, position - an object with x/y properties indicating the position of the menu.\r\n\t\t *\r\n\t\t * * `separator_before` - a boolean indicating if there should be a separator before this item\r\n\t\t * * `separator_after` - a boolean indicating if there should be a separator after this item\r\n\t\t * * `_disabled` - a boolean indicating if this action should be disabled\r\n\t\t * * `label` - a string - the name of the action (could be a function returning a string)\r\n\t\t * * `title` - a string - an optional tooltip for the item\r\n\t\t * * `action` - a function to be executed if this item is chosen, the function will receive \r\n\t\t * * `icon` - a string, can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\r\n\t\t * * `shortcut` - keyCode which will trigger the action if the menu is open (for example `113` for rename, which equals F2)\r\n\t\t * * `shortcut_label` - shortcut label (like for example `F2` for rename)\r\n\t\t * * `submenu` - an object with the same structure as $.jstree.defaults.contextmenu.items which can be used to create a submenu - each key will be rendered as a separate option in a submenu that will appear once the current item is hovered\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.contextmenu.items\r\n\t\t * @plugin contextmenu\r\n\t\t */\r\n\t\titems : function (o, cb) { // Could be an object directly\r\n\t\t\treturn {\r\n\t\t\t\t\"create\" : {\r\n\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: true,\r\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"create_node\", data.reference, {}, \"last\")),\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Create\",\r\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\tinst.create_node(obj, {}, \"last\", function (new_node) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tinst.edit(new_node);\r\n\t\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"rename\" : {\r\n\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"rename_node\", data.reference, this.get_parent(data.reference), \"\")),\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Rename\",\r\n\t\t\t\t\t/*!\r\n\t\t\t\t\t\"shortcut\"\t\t\t: 113,\r\n\t\t\t\t\t\"shortcut_label\"\t: 'F2',\r\n\t\t\t\t\t\"icon\"\t\t\t\t: \"glyphicon glyphicon-leaf\",\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\tinst.edit(obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"remove\" : {\r\n\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"delete_node\", data.reference, this.get_parent(data.reference), \"\")),\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Delete\",\r\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\r\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tinst.delete_node(obj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"ccp\" : {\r\n\t\t\t\t\t\"separator_before\"\t: true,\r\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Edit\",\r\n\t\t\t\t\t\"action\"\t\t\t: false,\r\n\t\t\t\t\t\"submenu\" : {\r\n\t\t\t\t\t\t\"cut\" : {\r\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Cut\",\r\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\r\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_top_selected());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"copy\" : {\r\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Copy\",\r\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\r\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_top_selected());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"paste\" : {\r\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\t\t\"_disabled\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Paste\",\r\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\t\t\tinst.paste(obj);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t$.jstree.plugins.contextmenu = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tvar last_ts = 0, cto = null, ex, ey;\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-contextmenu');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-anchor\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif (e.target.tagName.toLowerCase() === 'input') {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tlast_ts = e.ctrlKey ? +new Date() : 0;\r\n\t\t\t\t\t\tif(data || cto) {\r\n\t\t\t\t\t\t\tlast_ts = (+new Date()) + 10000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(cto) {\r\n\t\t\t\t\t\t\tclearTimeout(cto);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!this.is_loading(e.currentTarget)) {\r\n\t\t\t\t\t\t\tthis.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(this._data.contextmenu.visible && (!last_ts || (+new Date()) - last_ts > 250)) { // work around safari & macOS ctrl+click\r\n\t\t\t\t\t\t\tmenu.hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlast_ts = 0;\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"touchstart.jstree\", \".jstree-anchor\", function (e) {\r\n\t\t\t\t\t\tif(!e.originalEvent || !e.originalEvent.changedTouches || !e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tex = e.originalEvent.changedTouches[0].clientX;\r\n\t\t\t\t\t\tey = e.originalEvent.changedTouches[0].clientY;\r\n\t\t\t\t\t\tcto = setTimeout(function () {\r\n\t\t\t\t\t\t\t$(e.currentTarget).trigger('contextmenu', true);\r\n\t\t\t\t\t\t}, 750);\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('touchmove.vakata.jstree', function (e) {\r\n\t\t\t\t\t\tif(cto && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0] && (Math.abs(ex - e.originalEvent.changedTouches[0].clientX) > 10 || Math.abs(ey - e.originalEvent.changedTouches[0].clientY) > 10)) {\r\n\t\t\t\t\t\t\tclearTimeout(cto);\r\n\t\t\t\t\t\t\tmenu.hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('touchend.vakata.jstree', function (e) {\r\n\t\t\t\t\t\tif(cto) {\r\n\t\t\t\t\t\t\tclearTimeout(cto);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t/*!\r\n\t\t\tif(!('oncontextmenu' in document.body) && ('ontouchstart' in document.body)) {\r\n\t\t\t\tvar el = null, tm = null;\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on(\"touchstart\", \".jstree-anchor\", function (e) {\r\n\t\t\t\t\t\tel = e.currentTarget;\r\n\t\t\t\t\t\ttm = +new Date();\r\n\t\t\t\t\t\t$(document).one(\"touchend\", function (e) {\r\n\t\t\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.targetTouches[0].pageX - window.pageXOffset, e.originalEvent.targetTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t\t\t\te.currentTarget = e.target;\r\n\t\t\t\t\t\t\ttm = ((+(new Date())) - tm);\r\n\t\t\t\t\t\t\tif(e.target === el && tm > 600 && tm < 1000) {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(el).trigger('contextmenu', e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tel = null;\r\n\t\t\t\t\t\t\ttm = null;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t$(document).on(\"context_hide.sbswt.popup\", $.proxy(function (e, data) {\r\n\t\t\t\tthis._data.contextmenu.visible = false;\r\n\t\t\t\t$(data.reference).removeClass('jstree-context');\r\n\t\t\t}, this));\r\n\t\t};\r\n\t\tthis.teardown = function () {\r\n\t\t\tif(this._data.contextmenu.visible) {\r\n\t\t\t\tmenu.hide();\r\n\t\t\t}\r\n\t\t\tparent.teardown.call(this);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * prepare and show the context menu for a node\r\n\t\t * @name show_contextmenu(obj [, x, y])\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\r\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\r\n\t\t * @param {Object} e the event if available that triggered the contextmenu\r\n\t\t * @plugin contextmenu\r\n\t\t * @trigger show_contextmenu.jstree\r\n\t\t */\r\n\t\tthis.show_contextmenu = function (obj, x, y, e) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar s = this.settings.contextmenu,\r\n\t\t\t\td = this.get_node(obj, true),\r\n\t\t\t\ta = d.children(\".jstree-anchor\"),\r\n\t\t\t\to = false,\r\n\t\t\t\ti = false;\r\n\t\t\tif(s.show_at_node || x === undefined || y === undefined) {\r\n\t\t\t\to = a.offset();\r\n\t\t\t\tx = o.left;\r\n\t\t\t\ty = o.top + this._data.core.li_height;\r\n\t\t\t}\r\n\t\t\tif(this.settings.contextmenu.select_node && !this.is_selected(obj)) {\r\n\t\t\t\tthis.activate_node(obj, e);\r\n\t\t\t}\r\n\r\n\t\t\ti = s.items;\r\n\t\t\tif($.isFunction(i)) {\r\n\t\t\t\ti = i.call(this, obj, $.proxy(function (i) {\r\n\t\t\t\t\tthis._show_contextmenu(obj, x, y, i);\r\n\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif($.isPlainObject(i)) {\r\n\t\t\t\tthis._show_contextmenu(obj, x, y, i);\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * show the prepared context menu for a node\r\n\t\t * @name _show_contextmenu(obj, x, y, i)\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\r\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\r\n\t\t * @param {Number} i the object of items to show\r\n\t\t * @plugin contextmenu\r\n\t\t * @trigger show_contextmenu.jstree\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._show_contextmenu = function (obj, x, y, i) {\r\n\t\t\tvar d = this.get_node(obj, true),\r\n\t\t\t\ta = d.children(\".jstree-anchor\");\r\n\t\t\t$(document).one(\"context_show.sbswt.popup\", $.proxy(function (e, data) {\r\n\t\t\t\tvar cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';\r\n\t\t\t\t$(data.element).addClass(cls);\r\n\t\t\t\ta.addClass('jstree-context');\r\n\t\t\t}, this));\r\n\t\t\tthis._data.contextmenu.visible = true;\r\n\t\t\tmenu.popup(a, { 'x' : x, 'y' : y }, i);\r\n\t\t\t/**\r\n\t\t\t * triggered when the contextmenu is shown for a node\r\n\t\t\t * @event\r\n\t\t\t * @name show_contextmenu.jstree\r\n\t\t\t * @param {Object} node the node\r\n\t\t\t * @param {Number} x the x-coordinate of the menu relative to the document\r\n\t\t\t * @param {Number} y the y-coordinate of the menu relative to the document\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_contextmenu', { \"node\" : obj, \"x\" : x, \"y\" : y });\r\n\t\t};\r\n\t};\r\n\r\n\t// $.jstree.defaults.plugins.push(\"contextmenu\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-jstree/plugin/dnd',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.dnd) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the drag'n'drop plugin\r\n\t * @name $.jstree.defaults.dnd\r\n\t * @plugin dnd\r\n\t */\r\n\t$.jstree.defaults.dnd = {\r\n\t\t/**\r\n\t\t * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.dnd.copy\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tcopy : true,\r\n\t\t/**\r\n\t\t * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.\r\n\t\t * @name $.jstree.defaults.dnd.open_timeout\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\topen_timeout : 500,\r\n\t\t/**\r\n\t\t * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) and the event that started the drag - return `false` to prevent dragging\r\n\t\t * @name $.jstree.defaults.dnd.is_draggable\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tis_draggable : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`\r\n\t\t * @name $.jstree.defaults.dnd.check_while_dragging\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tcheck_while_dragging : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`\r\n\t\t * @name $.jstree.defaults.dnd.always_copy\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\talways_copy : false,\r\n\t\t/**\r\n\t\t * when dropping a node \"inside\", this setting indicates the position the node should go to - it can be an integer or a string: \"first\" (same as 0) or \"last\", default is `0`\r\n\t\t * @name $.jstree.defaults.dnd.inside_pos\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tinside_pos : 0,\r\n\t\t/**\r\n\t\t * when starting the drag on a node that is selected this setting controls if all selected nodes are dragged or only the single node, default is `true`, which means all selected nodes are dragged when the drag is started on a selected node\r\n\t\t * @name $.jstree.defaults.dnd.drag_selection\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tdrag_selection : true,\r\n\t\t/**\r\n\t\t * controls whether dnd works on touch devices. If left as boolean true dnd will work the same as in desktop browsers, which in some cases may impair scrolling. If set to boolean false dnd will not work on touch devices. There is a special third option - string \"selected\" which means only selected nodes can be dragged on touch devices.\r\n\t\t * @name $.jstree.defaults.dnd.touch\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\ttouch : true,\r\n\t\t/**\r\n\t\t * controls whether items can be dropped anywhere on the node, not just on the anchor, by default only the node anchor is a valid drop target. Works best with the wholerow plugin. If enabled on mobile depending on the interface it might be hard for the user to cancel the drop, since the whole tree container will be a valid drop target.\r\n\t\t * @name $.jstree.defaults.dnd.large_drop_target\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tlarge_drop_target : false,\r\n\t\t/**\r\n\t\t * controls whether a drag can be initiated from any part of the node and not just the text/icon part, works best with the wholerow plugin. Keep in mind it can cause problems with tree scrolling on mobile depending on the interface - in that case set the touch option to \"selected\".\r\n\t\t * @name $.jstree.defaults.dnd.large_drag_target\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tlarge_drag_target : false,\r\n\t\t/**\r\n\t\t * controls whether use HTML5 dnd api instead of classical. That will allow better integration of dnd events with other HTML5 controls.\r\n\t\t * @reference http://caniuse.com/#feat=dragndrop\r\n\t\t * @name $.jstree.defaults.dnd.use_html5\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tuse_html5: false\r\n\t};\r\n\tvar drg, elm;\r\n\t// TODO: now check works by checking for each node individually, how about max_children, unique, etc?\r\n\t$.jstree.plugins.dnd = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t\tthis.settings.dnd.use_html5 = this.settings.dnd.use_html5 && ('draggable' in document.createElement('span'));\r\n\t\t};\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on(this.settings.dnd.use_html5 ? 'dragstart.jstree' : 'mousedown.jstree touchstart.jstree', this.settings.dnd.large_drag_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(this.settings.dnd.large_drag_target && $(e.target).closest('.jstree-node')[0] !== e.currentTarget) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(e.type === \"touchstart\" && (!this.settings.dnd.touch || (this.settings.dnd.touch === 'selected' && !$(e.currentTarget).closest('.jstree-node').children('.jstree-anchor').hasClass('jstree-clicked')))) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar obj = this.get_node(e.target),\r\n\t\t\t\t\t\t\tmlt = this.is_selected(obj) && this.settings.dnd.drag_selection ? this.get_top_selected().length : 1,\r\n\t\t\t\t\t\t\ttxt = (mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget));\r\n\t\t\t\t\t\tif(this.settings.core.force_text) {\r\n\t\t\t\t\t\t\ttxt = $.vakata.html.escape(txt);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(obj && obj.id && obj.id !== $.jstree.root && (e.which === 1 || e.type === \"touchstart\" || e.type === \"dragstart\") &&\r\n\t\t\t\t\t\t\t(this.settings.dnd.is_draggable === true || ($.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (mlt > 1 ? this.get_top_selected(true) : [obj]), e)))\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tdrg = { 'jstree' : true, 'origin' : this, 'obj' : this.get_node(obj,true), 'nodes' : mlt > 1 ? this.get_top_selected() : [obj.id] };\r\n\t\t\t\t\t\t\telm = e.currentTarget;\r\n\t\t\t\t\t\t\tif (this.settings.dnd.use_html5) {\r\n\t\t\t\t\t\t\t\t$.vakata.dnd._trigger('start', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.element.trigger('mousedown.jstree');\r\n\t\t\t\t\t\t\t\treturn $.vakata.dnd.start(e, drg, '<div id=\"jstree-dnd\" class=\"jstree-' + this.get_theme() + ' jstree-' + this.get_theme() + '-' + this.get_theme_variant() + ' ' + ( this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ) + '\"><i class=\"jstree-icon jstree-er\"></i>' + txt + '<ins class=\"jstree-copy\" style=\"display:none;\">+</ins></div>');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t\tif (this.settings.dnd.use_html5) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('dragover.jstree', function (e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t//.on('dragenter.jstree', this.settings.dnd.large_drop_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t//\t\te.preventDefault();\r\n\t\t\t\t\t//\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t//\t\treturn false;\r\n\t\t\t\t\t//\t}, this))\r\n\t\t\t\t\t.on('drop.jstree', $.proxy(function (e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('stop', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif (obj && this.settings.dnd.use_html5) {\r\n\t\t\t\tif (this.settings.dnd.large_drag_target) {\r\n\t\t\t\t\tobj.setAttribute('draggable', true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar i, j, tmp = null;\r\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\ttmp.setAttribute('draggable', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\r\n\t$(function() {\r\n\t\t// bind only once for all instances\r\n\t\tvar lastmv = false,\r\n\t\t\tlaster = false,\r\n\t\t\tlastev = false,\r\n\t\t\topento = false,\r\n\t\t\tmarker = $('<div id=\"jstree-marker\">&#160;</div>').hide(); //.appendTo('body');\r\n\r\n\t\t$(document)\r\n\t\t\t.on('dnd_start.vakata.jstree', function (e, data) {\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.appendTo(document.body); //.show();\r\n\t\t\t})\r\n\t\t\t.on('dnd_move.vakata.jstree', function (e, data) {\r\n\t\t\t\tvar isDifferentNode = data.event.target !== lastev.target;\r\n\t\t\t\tif(opento) {\r\n\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\r\n\t\t\t\t\t\tclearTimeout(opento);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\r\n\t\t\t\t// if we are hovering the marker image do nothing (can happen on \"inside\" drags)\r\n\t\t\t\tif(data.event.target.id && data.event.target.id === 'jstree-marker') {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlastev = data.event;\r\n\r\n\t\t\t\tvar ins = $.jstree.reference(data.event.target),\r\n\t\t\t\t\tref = false,\r\n\t\t\t\t\toff = false,\r\n\t\t\t\t\trel = false,\r\n\t\t\t\t\ttmp, l, t, h, p, i, o, ok, t1, t2, op, ps, pr, ip, tm, is_copy, pn;\r\n\t\t\t\t// if we are over an instance\r\n\t\t\t\tif(ins && ins._data && ins._data.dnd) {\r\n\t\t\t\t\tmarker.attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ));\r\n\t\t\t\t\tis_copy = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)));\r\n\t\t\t\t\tdata.helper\r\n\t\t\t\t\t\t.children().attr('class', 'jstree-' + ins.get_theme() + ' jstree-' + ins.get_theme() + '-' + ins.get_theme_variant() + ' ' + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ))\r\n\t\t\t\t\t\t.find('.jstree-copy').first()[ is_copy ? 'show' : 'hide' ]();\r\n\r\n\t\t\t\t\t// if are hovering the container itself add a new root node\r\n\t\t\t\t\t//console.log(data.event);\r\n\t\t\t\t\tif( (data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {\r\n\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\t\tok = ok && ins.check( (data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ) ? \"copy_node\" : \"move_node\"), (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), $.jstree.root, 'last', { 'dnd' : true, 'ref' : ins.get_node($.jstree.root), 'pos' : 'i', 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) });\r\n\t\t\t\t\t\t\tif(!ok) { break; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(ok) {\r\n\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : $.jstree.root, 'pos' : 'last' };\r\n\t\t\t\t\t\t\tmarker.hide();\r\n\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\r\n\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if we are hovering a tree node\r\n\t\t\t\t\t\tref = ins.settings.dnd.large_drop_target ? $(data.event.target).closest('.jstree-node').children('.jstree-anchor') : $(data.event.target).closest('.jstree-anchor');\r\n\t\t\t\t\t\tif(ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {\r\n\t\t\t\t\t\t\toff = ref.offset();\r\n\t\t\t\t\t\t\trel = (data.event.pageY !== undefined ? data.event.pageY : data.event.originalEvent.pageY) - off.top;\r\n\t\t\t\t\t\t\th = ref.outerHeight();\r\n\t\t\t\t\t\t\tif(rel < h / 3) {\r\n\t\t\t\t\t\t\t\to = ['b', 'i', 'a'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(rel > h - h / 3) {\r\n\t\t\t\t\t\t\t\to = ['a', 'i', 'b'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\to = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$.each(o, function (j, v) {\r\n\t\t\t\t\t\t\t\tswitch(v) {\r\n\t\t\t\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top;\r\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\r\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'i':\r\n\t\t\t\t\t\t\t\t\t\tip = ins.settings.dnd.inside_pos;\r\n\t\t\t\t\t\t\t\t\t\ttm = ins.get_node(ref.parent());\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 2;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top + h / 2 + 1;\r\n\t\t\t\t\t\t\t\t\t\tp = tm.id;\r\n\t\t\t\t\t\t\t\t\t\ti = ip === 'first' ? 0 : (ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length));\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top + h;\r\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\r\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index() + 1;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\t\t\t\top = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? \"copy_node\" : \"move_node\";\r\n\t\t\t\t\t\t\t\t\tps = i;\r\n\t\t\t\t\t\t\t\t\tif(op === \"move_node\" && v === 'a' && (data.data.origin && data.data.origin === ins) && p === ins.get_parent(data.data.nodes[t1])) {\r\n\t\t\t\t\t\t\t\t\t\tpr = ins.get_node(p);\r\n\t\t\t\t\t\t\t\t\t\tif(ps > $.inArray(data.data.nodes[t1], pr.children)) {\r\n\t\t\t\t\t\t\t\t\t\t\tps -= 1;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tok = ok && ( (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false) || ins.check(op, (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), p, ps, { 'dnd' : true, 'ref' : ins.get_node(ref.parent()), 'pos' : v, 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) }) );\r\n\t\t\t\t\t\t\t\t\tif(!ok) {\r\n\t\t\t\t\t\t\t\t\t\tif(ins && ins.last_error) { laster = ins.last_error(); }\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {\r\n\t\t\t\t\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\r\n\t\t\t\t\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\r\n\t\t\t\t\t\t\t\t\t\topento = setTimeout((function (x, z) { return function () { x.open_node(z); }; }(ins, ref)), ins.settings.dnd.open_timeout);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(ok) {\r\n\t\t\t\t\t\t\t\t\tpn = ins.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\tif (!pn.hasClass('.jstree-dnd-parent')) {\r\n\t\t\t\t\t\t\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\t\t\t\t\t\t\tpn.addClass('jstree-dnd-parent');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : p, 'pos' : v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i };\r\n\t\t\t\t\t\t\t\t\tmarker.css({ 'left' : l + 'px', 'top' : t + 'px' }).show();\r\n\t\t\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\r\n\t\t\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlaster = {};\r\n\t\t\t\t\t\t\t\t\to = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(o === true) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tdata.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');\r\n\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = 'none';\r\n\t\t\t\t}\r\n\t\t\t\tmarker.hide();\r\n\t\t\t})\r\n\t\t\t.on('dnd_scroll.vakata.jstree', function (e, data) {\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.hide();\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-ok').addClass('jstree-er');\r\n\t\t\t})\r\n\t\t\t.on('dnd_stop.vakata.jstree', function (e, data) {\r\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\tif(opento) { clearTimeout(opento); }\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.hide().detach();\r\n\t\t\t\tvar i, j, nodes = [];\r\n\t\t\t\tif(lastmv) {\r\n\t\t\t\t\tfor(i = 0, j = data.data.nodes.length; i < j; i++) {\r\n\t\t\t\t\t\tnodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastmv.ins[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'copy_node' : 'move_node' ](nodes, lastmv.par, lastmv.pos, false, false, false, data.data.origin);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ti = $(data.event.target).closest('.jstree');\r\n\t\t\t\t\tif(i.length && laster && laster.error && laster.error === 'check') {\r\n\t\t\t\t\t\ti = i.jstree(true);\r\n\t\t\t\t\t\tif(i) {\r\n\t\t\t\t\t\t\ti.settings.core.error.call(this, laster);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tlastmv = false;\r\n\t\t\t})\r\n\t\t\t.on('keyup.jstree keydown.jstree', function (e, data) {\r\n\t\t\t\tdata = $.vakata.dnd._get();\r\n\t\t\t\tif(data && data.data && data.data.jstree) {\r\n\t\t\t\t\tif (e.type === \"keyup\" && e.which === 27) {\r\n\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\r\n\t\t\t\t\t\tlastmv = false;\r\n\t\t\t\t\t\tlaster = false;\r\n\t\t\t\t\t\tlastev = false;\r\n\t\t\t\t\t\topento = false;\r\n\t\t\t\t\t\tmarker.hide().detach();\r\n\t\t\t\t\t\t$.vakata.dnd._clean();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdata.helper.find('.jstree-copy').first()[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey))) ? 'show' : 'hide' ]();\r\n\t\t\t\t\t\tif(lastev) {\r\n\t\t\t\t\t\t\tlastev.metaKey = e.metaKey;\r\n\t\t\t\t\t\t\tlastev.ctrlKey = e.ctrlKey;\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', lastev);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\n\r\n\t// helpers\r\n\t(function ($) {\r\n\t\t$.vakata.html = {\r\n\t\t\tdiv : $('<div />'),\r\n\t\t\tescape : function (str) {\r\n\t\t\t\treturn $.vakata.html.div.text(str).html();\r\n\t\t\t},\r\n\t\t\tstrip : function (str) {\r\n\t\t\t\treturn $.vakata.html.div.empty().append($.parseHTML(str)).text();\r\n\t\t\t}\r\n\t\t};\r\n\t\t// private variable\r\n\t\tvar vakata_dnd = {\r\n\t\t\telement\t: false,\r\n\t\t\ttarget\t: false,\r\n\t\t\tis_down\t: false,\r\n\t\t\tis_drag\t: false,\r\n\t\t\thelper\t: false,\r\n\t\t\thelper_w: 0,\r\n\t\t\tdata\t: false,\r\n\t\t\tinit_x\t: 0,\r\n\t\t\tinit_y\t: 0,\r\n\t\t\tscroll_l: 0,\r\n\t\t\tscroll_t: 0,\r\n\t\t\tscroll_e: false,\r\n\t\t\tscroll_i: false,\r\n\t\t\tis_touch: false\r\n\t\t};\r\n\t\t$.vakata.dnd = {\r\n\t\t\tsettings : {\r\n\t\t\t\tscroll_speed\t\t: 10,\r\n\t\t\t\tscroll_proximity\t: 20,\r\n\t\t\t\thelper_left\t\t\t: 5,\r\n\t\t\t\thelper_top\t\t\t: 10,\r\n\t\t\t\tthreshold\t\t\t: 5,\r\n\t\t\t\tthreshold_touch\t\t: 10\r\n\t\t\t},\r\n\t\t\t_trigger : function (event_name, e, data) {\r\n\t\t\t\tif (data === undefined) {\r\n\t\t\t\t\tdata = $.vakata.dnd._get();\r\n\t\t\t\t}\r\n\t\t\t\tdata.event = e;\r\n\t\t\t\t$(document).trigger(\"dnd_\" + event_name + \".vakata\", data);\r\n\t\t\t},\r\n\t\t\t_get : function () {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"data\"\t\t: vakata_dnd.data,\r\n\t\t\t\t\t\"element\"\t: vakata_dnd.element,\r\n\t\t\t\t\t\"helper\"\t: vakata_dnd.helper\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t_clean : function () {\r\n\t\t\t\tif(vakata_dnd.helper) { vakata_dnd.helper.remove(); }\r\n\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\r\n\t\t\t\tvakata_dnd = {\r\n\t\t\t\t\telement\t: false,\r\n\t\t\t\t\ttarget\t: false,\r\n\t\t\t\t\tis_down\t: false,\r\n\t\t\t\t\tis_drag\t: false,\r\n\t\t\t\t\thelper\t: false,\r\n\t\t\t\t\thelper_w: 0,\r\n\t\t\t\t\tdata\t: false,\r\n\t\t\t\t\tinit_x\t: 0,\r\n\t\t\t\t\tinit_y\t: 0,\r\n\t\t\t\t\tscroll_l: 0,\r\n\t\t\t\t\tscroll_t: 0,\r\n\t\t\t\t\tscroll_e: false,\r\n\t\t\t\t\tscroll_i: false,\r\n\t\t\t\t\tis_touch: false\r\n\t\t\t\t};\r\n\t\t\t\t$(document).off(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\r\n\t\t\t\t$(document).off(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\r\n\t\t\t},\r\n\t\t\t_scroll : function (init_only) {\r\n\t\t\t\tif(!vakata_dnd.scroll_e || (!vakata_dnd.scroll_l && !vakata_dnd.scroll_t)) {\r\n\t\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(!vakata_dnd.scroll_i) {\r\n\t\t\t\t\tvakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(init_only === true) { return false; }\r\n\r\n\t\t\t\tvar i = vakata_dnd.scroll_e.scrollTop(),\r\n\t\t\t\t\tj = vakata_dnd.scroll_e.scrollLeft();\r\n\t\t\t\tvakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);\r\n\t\t\t\tvakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);\r\n\t\t\t\tif(i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered on the document when a drag causes an element to scroll\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t * @name dnd_scroll.vakata\r\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t * @param {jQuery} event the element that is scrolling\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$.vakata.dnd._trigger(\"scroll\", vakata_dnd.scroll_e);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstart : function (e, data, html) {\r\n\t\t\t\tif(e.type === \"touchstart\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.is_drag) { $.vakata.dnd.stop({}); }\r\n\t\t\t\ttry {\r\n\t\t\t\t\te.currentTarget.unselectable = \"on\";\r\n\t\t\t\t\te.currentTarget.onselectstart = function() { return false; };\r\n\t\t\t\t\tif(e.currentTarget.style) {\r\n\t\t\t\t\t\te.currentTarget.style.touchAction = \"none\";\r\n\t\t\t\t\t\te.currentTarget.style.msTouchAction = \"none\";\r\n\t\t\t\t\t\te.currentTarget.style.MozUserSelect = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(ignore) { }\r\n\t\t\t\tvakata_dnd.init_x\t= e.pageX;\r\n\t\t\t\tvakata_dnd.init_y\t= e.pageY;\r\n\t\t\t\tvakata_dnd.data\t\t= data;\r\n\t\t\t\tvakata_dnd.is_down\t= true;\r\n\t\t\t\tvakata_dnd.element\t= e.currentTarget;\r\n\t\t\t\tvakata_dnd.target\t= e.target;\r\n\t\t\t\tvakata_dnd.is_touch\t= e.type === \"touchstart\";\r\n\t\t\t\tif(html !== false) {\r\n\t\t\t\t\tvakata_dnd.helper = $(\"<div id='vakata-dnd'></div>\").html(html).css({\r\n\t\t\t\t\t\t\"display\"\t\t: \"block\",\r\n\t\t\t\t\t\t\"margin\"\t\t: \"0\",\r\n\t\t\t\t\t\t\"padding\"\t\t: \"0\",\r\n\t\t\t\t\t\t\"position\"\t\t: \"absolute\",\r\n\t\t\t\t\t\t\"top\"\t\t\t: \"-2000px\",\r\n\t\t\t\t\t\t\"lineHeight\"\t: \"16px\",\r\n\t\t\t\t\t\t\"zIndex\"\t\t: \"10000\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t$(document).on(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\r\n\t\t\t\t$(document).on(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tdrag : function (e) {\r\n\t\t\t\tif(e.type === \"touchmove\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(!vakata_dnd.is_down) { return; }\r\n\t\t\t\tif(!vakata_dnd.is_drag) {\r\n\t\t\t\t\tif(\r\n\t\t\t\t\t\tMath.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) ||\r\n\t\t\t\t\t\tMath.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif(vakata_dnd.helper) {\r\n\t\t\t\t\t\t\tvakata_dnd.helper.appendTo(document.body);\r\n\t\t\t\t\t\t\tvakata_dnd.helper_w = vakata_dnd.helper.outerWidth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvakata_dnd.is_drag = true;\r\n\t\t\t\t\t\t$(vakata_dnd.target).one('click.vakata', false);\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * triggered on the document when a drag starts\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t\t * @name dnd_start.vakata\r\n\t\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t\t * @param {Object} event the event that caused the start (probably mousemove)\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t$.vakata.dnd._trigger(\"start\", e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { return; }\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar d  = false, w  = false,\r\n\t\t\t\t\tdh = false, wh = false,\r\n\t\t\t\t\tdw = false, ww = false,\r\n\t\t\t\t\tdt = false, dl = false,\r\n\t\t\t\t\tht = false, hl = false;\r\n\r\n\t\t\t\tvakata_dnd.scroll_t = 0;\r\n\t\t\t\tvakata_dnd.scroll_l = 0;\r\n\t\t\t\tvakata_dnd.scroll_e = false;\r\n\t\t\t\t$($(e.target).parentsUntil(\"body\").addBack().get().reverse())\r\n\t\t\t\t\t.filter(function () {\r\n\t\t\t\t\t\treturn\t(/^auto|scroll$/).test($(this).css(\"overflow\")) &&\r\n\t\t\t\t\t\t\t\t(this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.each(function () {\r\n\t\t\t\t\t\tvar t = $(this), o = t.offset();\r\n\t\t\t\t\t\tif(this.scrollHeight > this.offsetHeight) {\r\n\t\t\t\t\t\t\tif(o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\r\n\t\t\t\t\t\t\tif(e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_t = -1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.scrollWidth > this.offsetWidth) {\r\n\t\t\t\t\t\t\tif(o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\r\n\t\t\t\t\t\t\tif(e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_l = -1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\r\n\t\t\t\t\t\t\tvakata_dnd.scroll_e = $(this);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif(!vakata_dnd.scroll_e) {\r\n\t\t\t\t\td  = $(document); w = $(window);\r\n\t\t\t\t\tdh = d.height(); wh = w.height();\r\n\t\t\t\t\tdw = d.width(); ww = w.width();\r\n\t\t\t\t\tdt = d.scrollTop(); dl = d.scrollLeft();\r\n\t\t\t\t\tif(dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_t = -1;  }\r\n\t\t\t\t\tif(dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\r\n\t\t\t\t\tif(dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_l = -1; }\r\n\t\t\t\t\tif(dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\r\n\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\r\n\t\t\t\t\t\tvakata_dnd.scroll_e = d;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.scroll_e) { $.vakata.dnd._scroll(true); }\r\n\r\n\t\t\t\tif(vakata_dnd.helper) {\r\n\t\t\t\t\tht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);\r\n\t\t\t\t\thl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);\r\n\t\t\t\t\tif(dh && ht + 25 > dh) { ht = dh - 50; }\r\n\t\t\t\t\tif(dw && hl + vakata_dnd.helper_w > dw) { hl = dw - (vakata_dnd.helper_w + 2); }\r\n\t\t\t\t\tvakata_dnd.helper.css({\r\n\t\t\t\t\t\tleft\t: hl + \"px\",\r\n\t\t\t\t\t\ttop\t\t: ht + \"px\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when a drag is in progress\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin dnd\r\n\t\t\t\t * @name dnd_move.vakata\r\n\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t * @param {Object} event the event that caused this to trigger (most likely mousemove)\r\n\t\t\t\t */\r\n\t\t\t\t$.vakata.dnd._trigger(\"move\", e);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tstop : function (e) {\r\n\t\t\t\tif(e.type === \"touchend\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.is_drag) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered on the document when a drag stops (the dragged element is dropped)\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t * @name dnd_stop.vakata\r\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t * @param {Object} event the event that caused the stop\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (e.target !== vakata_dnd.target) {\r\n\t\t\t\t\t\t$(vakata_dnd.target).off('click.vakata');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.vakata.dnd._trigger(\"stop\", e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(e.type === \"touchend\" && e.target === vakata_dnd.target) {\r\n\t\t\t\t\t\tvar to = setTimeout(function () { $(e.target).click(); }, 100);\r\n\t\t\t\t\t\t$(e.target).one('click', function() { if(to) { clearTimeout(to); } });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$.vakata.dnd._clean();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the dnd plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"dnd\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-jstree/plugin/massload',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.massload) { return; }\r\n\r\n\t/**\r\n\t * massload configuration\r\n\t *\r\n\t * It is possible to set this to a standard jQuery-like AJAX config.\r\n\t * In addition to the standard jQuery ajax options here you can supply functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node IDs need to be loaded, the return value of those functions will be used.\r\n\t *\r\n\t * You can also set this to a function, that function will receive the node IDs being loaded as argument and a second param which is a function (callback) which should be called with the result.\r\n\t *\r\n\t * Both the AJAX and the function approach rely on the same return value - an object where the keys are the node IDs, and the value is the children of that node as an array.\r\n\t *\r\n\t *\t{\r\n\t *\t\t\"id1\" : [{ \"text\" : \"Child of ID1\", \"id\" : \"c1\" }, { \"text\" : \"Another child of ID1\", \"id\" : \"c2\" }],\r\n\t *\t\t\"id2\" : [{ \"text\" : \"Child of ID2\", \"id\" : \"c3\" }]\r\n\t *\t}\r\n\t * \r\n\t * @name $.jstree.defaults.massload\r\n\t * @plugin massload\r\n\t */\r\n\t$.jstree.defaults.massload = null;\r\n\t$.jstree.plugins.massload = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tthis._data.massload = {};\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t};\r\n\t\tthis._load_nodes = function (nodes, callback, is_callback, force_reload) {\r\n\t\t\tvar s = this.settings.massload,\r\n\t\t\t\tnodesString = JSON.stringify(nodes),\r\n\t\t\t\ttoLoad = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\ti, j, dom;\r\n\t\t\tif (!is_callback) {\r\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\tif(!m[nodes[i]] || ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || force_reload) ) {\r\n\t\t\t\t\t\ttoLoad.push(nodes[i]);\r\n\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\tdom.addClass(\"jstree-loading\").attr('aria-busy',true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.massload = {};\r\n\t\t\t\tif (toLoad.length) {\r\n\t\t\t\t\tif($.isFunction(s)) {\r\n\t\t\t\t\t\treturn s.call(this, toLoad, $.proxy(function (data) {\r\n\t\t\t\t\t\t\tvar i, j;\r\n\t\t\t\t\t\t\tif(data) {\r\n\t\t\t\t\t\t\t\tfor(i in data) {\r\n\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof s === 'object' && s && s.url) {\r\n\t\t\t\t\t\ts = $.extend(true, {}, s);\r\n\t\t\t\t\t\tif($.isFunction(s.url)) {\r\n\t\t\t\t\t\t\ts.url = s.url.call(this, toLoad);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($.isFunction(s.data)) {\r\n\t\t\t\t\t\t\ts.data = s.data.call(this, toLoad);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn $.ajax(s)\r\n\t\t\t\t\t\t\t.done($.proxy(function (data,t,x) {\r\n\t\t\t\t\t\t\t\t\tvar i, j;\r\n\t\t\t\t\t\t\t\t\tif(data) {\r\n\t\t\t\t\t\t\t\t\t\tfor(i in data) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t\t.fail($.proxy(function (f) {\r\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn parent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t};\r\n\t\tthis._load_node = function (obj, callback) {\r\n\t\t\tvar data = this._data.massload[obj.id],\r\n\t\t\t\trslt = null, dom;\r\n\t\t\tif(data) {\r\n\t\t\t\trslt = this[typeof data === 'string' ? '_append_html_data' : '_append_json_data'](\r\n\t\t\t\t\tobj,\r\n\t\t\t\t\ttypeof data === 'string' ? $($.parseHTML(data)).filter(function () { return this.nodeType !== 3; }) : data,\r\n\t\t\t\t\tfunction (status) { callback.call(this, status); }\r\n\t\t\t\t);\r\n\t\t\t\tdom = this.get_node(obj.id, true);\r\n\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._data.massload[obj.id];\r\n\t\t\t\treturn rslt;\r\n\t\t\t}\r\n\t\t\treturn parent._load_node.call(this, obj, callback);\r\n\t\t};\r\n\t};\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-jstree/plugin/search',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.search) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the search plugin\r\n\t * @name $.jstree.defaults.search\r\n\t * @plugin search\r\n\t */\r\n\t$.jstree.defaults.search = {\r\n\t\t/**\r\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results.\r\n\t\t *\r\n\t\t * A `str` (which is the search string) parameter will be added with the request, an optional `inside` parameter will be added if the search is limited to a node id. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\r\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 3 parameters - the search string, the callback to call with the array of nodes to load, and the optional node ID to limit the search to\r\n\t\t * @name $.jstree.defaults.search.ajax\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tajax : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.fuzzy\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tfuzzy : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.case_sensitive\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tcase_sensitive : false,\r\n\t\t/**\r\n\t\t * Indicates if the tree should be filtered (by default) to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers).\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches : false,\r\n\t\t/**\r\n\t\t * Indicates if the children of matched element are shown (when show_only_matches is true)\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches_children\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches_children : false,\r\n\t\t/**\r\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\r\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tclose_opened_onclear : true,\r\n\t\t/**\r\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_leaves_only\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_leaves_only : false,\r\n\t\t/**\r\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\r\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_callback\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_callback : false\r\n\t};\r\n\r\n\t$.jstree.plugins.search = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.som = false;\r\n\t\t\tthis._data.search.smc = false;\r\n\t\t\tthis._data.search.hdn = [];\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"search.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tvar m = this._model.data, i, j, p = [], k, l;\r\n\t\t\t\t\t\t\tfor(i = 0, j = data.res.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif(m[data.res[i]] && !m[data.res[i]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\tp.push(data.res[i]);\r\n\t\t\t\t\t\t\t\t\tp = p.concat(m[data.res[i]].parents);\r\n\t\t\t\t\t\t\t\t\tif(this._data.search.smc) {\r\n\t\t\t\t\t\t\t\t\t\tfor (k = 0, l = m[data.res[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (m[m[data.res[i]].children_d[k]] && !m[m[data.res[i]].children_d[k]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tp.push(m[data.res[i]].children_d[k]);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = $.vakata.array_remove_item($.vakata.array_unique(p), $.jstree.root);\r\n\t\t\t\t\t\t\tthis._data.search.hdn = this.hide_all(true);\r\n\t\t\t\t\t\t\tthis.show_node(p, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"clear_search.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tthis.show_node(this._data.search.hdn, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to search the tree nodes for a given string\r\n\t\t * @name search(str [, skip_async])\r\n\t\t * @param {String} str the search string\r\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\r\n\t\t * @param {Boolean} show_only_matches if set to true only matching nodes will be shown (keep in mind this can be very slow on large trees or old browsers)\r\n\t\t * @param {mixed} inside an optional node to whose children to limit the search\r\n\t\t * @param {Boolean} append if set to true the results of this search are appended to the previous search\r\n\t\t * @plugin search\r\n\t\t * @trigger search.jstree\r\n\t\t */\r\n\t\tthis.search = function (str, skip_async, show_only_matches, inside, append, show_only_matches_children) {\r\n\t\t\tif(str === false || $.trim(str.toString()) === \"\") {\r\n\t\t\t\treturn this.clear_search();\r\n\t\t\t}\r\n\t\t\tinside = this.get_node(inside);\r\n\t\t\tinside = inside && inside.id ? inside.id : null;\r\n\t\t\tstr = str.toString();\r\n\t\t\tvar s = this.settings.search,\r\n\t\t\t\ta = s.ajax ? s.ajax : false,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = null,\r\n\t\t\t\tr = [],\r\n\t\t\t\tp = [], i, j;\r\n\t\t\tif(this._data.search.res.length && !append) {\r\n\t\t\t\tthis.clear_search();\r\n\t\t\t}\r\n\t\t\tif(show_only_matches === undefined) {\r\n\t\t\t\tshow_only_matches = s.show_only_matches;\r\n\t\t\t}\r\n\t\t\tif(show_only_matches_children === undefined) {\r\n\t\t\t\tshow_only_matches_children = s.show_only_matches_children;\r\n\t\t\t}\r\n\t\t\tif(!skip_async && a !== false) {\r\n\t\t\t\tif($.isFunction(a)) {\r\n\t\t\t\t\treturn a.call(this, str, $.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this), inside);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ta = $.extend({}, a);\r\n\t\t\t\t\tif(!a.data) { a.data = {}; }\r\n\t\t\t\t\ta.data.str = str;\r\n\t\t\t\t\tif(inside) {\r\n\t\t\t\t\t\ta.data.inside = inside;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this._data.search.lastRequest) {\r\n\t\t\t\t\t\tthis._data.search.lastRequest.abort();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._data.search.lastRequest = $.ajax(a)\r\n\t\t\t\t\t\t.fail($.proxy(function () {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\r\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.done($.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t\t\treturn this._data.search.lastRequest;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!append) {\r\n\t\t\t\tthis._data.search.str = str;\r\n\t\t\t\tthis._data.search.dom = $();\r\n\t\t\t\tthis._data.search.res = [];\r\n\t\t\t\tthis._data.search.opn = [];\r\n\t\t\t\tthis._data.search.som = show_only_matches;\r\n\t\t\t\tthis._data.search.smc = show_only_matches_children;\r\n\t\t\t}\r\n\r\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\r\n\t\t\t$.each(m[inside ? inside : $.jstree.root].children_d, function (ii, i) {\r\n\t\t\t\tvar v = m[i];\r\n\t\t\t\tif(v.text && !v.state.hidden && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) ) {\r\n\t\t\t\t\tr.push(i);\r\n\t\t\t\t\tp = p.concat(v.parents);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(r.length) {\r\n\t\t\t\tp = $.vakata.array_unique(p);\r\n\t\t\t\tfor(i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\t\tif(p[i] !== $.jstree.root && m[p[i]] && this.open_node(p[i], null, 0) === true) {\r\n\t\t\t\t\t\tthis._data.search.opn.push(p[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!append) {\r\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\r\n\t\t\t\t\tthis._data.search.res = r;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.search.dom = this._data.search.dom.add($(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))));\r\n\t\t\t\t\tthis._data.search.res = $.vakata.array_unique(this._data.search.res.concat(r));\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\r\n\t\t\t * @param {String} str the search string\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res, show_only_matches : show_only_matches });\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\r\n\t\t * @name clear_search()\r\n\t\t * @plugin search\r\n\t\t * @trigger clear_search.jstree\r\n\t\t */\r\n\t\tthis.clear_search = function () {\r\n\t\t\tif(this.settings.search.close_opened_onclear) {\r\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name clear_search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\r\n\t\t\t * @param {String} str the search string (the last search string)\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\r\n\t\t\tif(this._data.search.res.length) {\r\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(this._data.search.res, function (v) {\r\n\t\t\t\t\treturn \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&');\r\n\t\t\t\t}).join(', #')));\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\r\n\t\t\t}\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t};\r\n\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tif($.inArray(obj.id, this._data.search.res) !== -1) {\r\n\t\t\t\t\tvar i, j, tmp = null;\r\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\ttmp.className += ' jstree-search';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\r\n\t// helpers\r\n\t(function ($) {\r\n\t\t// from http://kiro.me/projects/fuse.html\r\n\t\t$.vakata.search = function(pattern, txt, options) {\r\n\t\t\toptions = options || {};\r\n\t\t\toptions = $.extend({}, $.vakata.search.defaults, options);\r\n\t\t\tif(options.fuzzy !== false) {\r\n\t\t\t\toptions.fuzzy = true;\r\n\t\t\t}\r\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\t\tvar MATCH_LOCATION\t= options.location,\r\n\t\t\t\tMATCH_DISTANCE\t= options.distance,\r\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold,\r\n\t\t\t\tpatternLen = pattern.length,\r\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\r\n\t\t\tif(patternLen > 32) {\r\n\t\t\t\toptions.fuzzy = false;\r\n\t\t\t}\r\n\t\t\tif(options.fuzzy) {\r\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\r\n\t\t\t\tpattern_alphabet = (function () {\r\n\t\t\t\t\tvar mask = {},\r\n\t\t\t\t\t\ti = 0;\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn mask;\r\n\t\t\t\t}());\r\n\t\t\t\tmatch_bitapScore = function (e, x) {\r\n\t\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tsearch = function (text) {\r\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\t\tscore: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif(!options.fuzzy) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\t\tscore: 1\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tvar i, j,\r\n\t\t\t\t\ttextLen = text.length,\r\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\t\tbinMin, binMid,\r\n\t\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\t\tscore = 1,\r\n\t\t\t\t\tlocations = [];\r\n\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbestLoc = -1;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tbinMin = 0;\r\n\t\t\t\t\tbinMid = binMax;\r\n\t\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\t\trd = new Array(finish + 2);\r\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastRd = rd;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\t\tscore: score\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t\t};\r\n\t\t$.vakata.search.defaults = {\r\n\t\t\tlocation : 0,\r\n\t\t\tdistance : 100,\r\n\t\t\tthreshold : 0.6,\r\n\t\t\tfuzzy : false,\r\n\t\t\tcaseSensitive : false\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the search plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"search\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-jstree/plugin/sort',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.sort) { return; }\r\n\r\n\t/**\r\n\t * the settings function used to sort the nodes.\r\n\t * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.\r\n\t * @name $.jstree.defaults.sort\r\n\t * @plugin sort\r\n\t */\r\n\t$.jstree.defaults.sort = function (a, b) {\r\n\t\t//return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);\r\n\t\treturn this.get_text(a) > this.get_text(b) ? 1 : -1;\r\n\t};\r\n\t$.jstree.plugins.sort = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"model.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent, true);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"rename_node.jstree create_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent || data.node.parent, false);\r\n\t\t\t\t\t\tthis.redraw_node(data.parent || data.node.parent, true);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"move_node.jstree copy_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent, false);\r\n\t\t\t\t\t\tthis.redraw_node(data.parent, true);\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to sort a node's children\r\n\t\t * @private\r\n\t\t * @name sort(obj [, deep])\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param {Boolean} deep if set to `true` nodes are sorted recursively.\r\n\t\t * @plugin sort\r\n\t\t * @trigger search.jstree\r\n\t\t */\r\n\t\tthis.sort = function (obj, deep) {\r\n\t\t\tvar i, j;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(obj && obj.children && obj.children.length) {\r\n\t\t\t\tobj.children.sort($.proxy(this.settings.sort, this));\r\n\t\t\t\tif(deep) {\r\n\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\tthis.sort(obj.children_d[i], false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// include the sort plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"sort\");\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-jstree/plugin/state',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.state) { return; }\r\n\r\n\tvar to = false;\r\n\t/**\r\n\t * stores all defaults for the state plugin\r\n\t * @name $.jstree.defaults.state\r\n\t * @plugin state\r\n\t */\r\n\t$.jstree.defaults.state = {\r\n\t\t/**\r\n\t\t * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.\r\n\t\t * @name $.jstree.defaults.state.key\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tkey\t\t: 'jstree',\r\n\t\t/**\r\n\t\t * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.\r\n\t\t * @name $.jstree.defaults.state.events\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tevents\t: 'changed.jstree open_node.jstree close_node.jstree check_node.jstree uncheck_node.jstree',\r\n\t\t/**\r\n\t\t * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.\r\n\t\t * @name $.jstree.defaults.state.ttl\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tttl\t\t: false,\r\n\t\t/**\r\n\t\t * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.\r\n\t\t * @name $.jstree.defaults.state.filter\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tfilter\t: false,\r\n\t\t/**\r\n\t\t * Should loaded nodes be restored (setting this to true means that it is possible that the whole tree will be loaded for some users - use with caution). Defaults to `false`\r\n\t\t * @name $.jstree.defaults.state.preserve_loaded\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tpreserve_loaded : false\r\n\t};\r\n\t$.jstree.plugins.state = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tvar bind = $.proxy(function () {\r\n\t\t\t\tthis.element.on(this.settings.state.events, $.proxy(function () {\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\tto = setTimeout($.proxy(function () { this.save_state(); }, this), 100);\r\n\t\t\t\t}, this));\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when the state plugin is finished restoring the state (and immediately after ready if there is no state to restore).\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name state_ready.jstree\r\n\t\t\t\t * @plugin state\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('state_ready');\r\n\t\t\t}, this);\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"ready.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.one(\"restore_state.jstree\", bind);\r\n\t\t\t\t\t\tif(!this.restore_state()) { bind(); }\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * save the state\r\n\t\t * @name save_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.save_state = function () {\r\n\t\t\tvar tm = this.get_state();\r\n\t\t\tif (!this.settings.state.preserve_loaded) {\r\n\t\t\t\tdelete tm.core.loaded;\r\n\t\t\t}\r\n\t\t\tvar st = { 'state' : tm, 'ttl' : this.settings.state.ttl, 'sec' : +(new Date()) };\r\n\t\t\t$.vakata.storage.set(this.settings.state.key, JSON.stringify(st));\r\n\t\t};\r\n\t\t/**\r\n\t\t * restore the state from the user's computer\r\n\t\t * @name restore_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.restore_state = function () {\r\n\t\t\tvar k = $.vakata.storage.get(this.settings.state.key);\r\n\t\t\tif(!!k) { try { k = JSON.parse(k); } catch(ex) { return false; } }\r\n\t\t\tif(!!k && k.ttl && k.sec && +(new Date()) - k.sec > k.ttl) { return false; }\r\n\t\t\tif(!!k && k.state) { k = k.state; }\r\n\t\t\tif(!!k && $.isFunction(this.settings.state.filter)) { k = this.settings.state.filter.call(this, k); }\r\n\t\t\tif(!!k) {\r\n\t\t\t\tif (!this.settings.state.preserve_loaded) {\r\n\t\t\t\t\tdelete k.core.loaded;\r\n\t\t\t\t}\r\n\t\t\t\tthis.element.one(\"set_state.jstree\", function (e, data) { data.instance.trigger('restore_state', { 'state' : $.extend(true, {}, k) }); });\r\n\t\t\t\tthis.set_state(k);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t/**\r\n\t\t * clear the state on the user's computer\r\n\t\t * @name clear_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.clear_state = function () {\r\n\t\t\treturn $.vakata.storage.del(this.settings.state.key);\r\n\t\t};\r\n\t};\r\n\r\n\t(function ($, undefined) {\r\n\t\t$.vakata.storage = {\r\n\t\t\t// simply specifying the functions in FF throws an error\r\n\t\t\tset : function (key, val) { return window.localStorage.setItem(key, val); },\r\n\t\t\tget : function (key) { return window.localStorage.getItem(key); },\r\n\t\t\tdel : function (key) { return window.localStorage.removeItem(key); }\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the state plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"state\");\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-jstree/plugin/treegrid',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./menu\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,menu,jstree){\r\n    var BLANKRE = /^\\s*$/g,\r\n        IDREGEX = /[\\\\:&!^|()\\[\\]<>@*'+~#\";,= \\/${}%]/g,\r\n        escapeId = function(id) {\r\n            return (id || \"\").replace(IDREGEX, '\\\\$&');\r\n        },\r\n        NODE_DATA_ATTR = \"data-jstreegrid\",\r\n        COL_DATA_ATTR = \"data-jstreegrid-column\",\r\n        SEARCHCLASS = \"jstree-search\",\r\n        SPECIAL_TITLE = \"_DATA_\",\r\n        LEVELINDENT = 24,\r\n        styled = false,\r\n        MINCOLWIDTH = 10,\r\n        generateCellId = function(tree, id) {\r\n            return (\"jstree_\" + tree + \"_grid_\" + escapeId(id) + \"_col\");\r\n        },\r\n        getIds = function(nodes) {\r\n            return $.makeArray(nodes.map(function() {\r\n                return this.id;\r\n            }));\r\n        },\r\n        findDataCell = function(uniq, ids, col, scope) {\r\n            if (scope == undefined) {\r\n                scope = $();\r\n            };\r\n            if (ids === null || ids === undefined || ids.length === 0) {\r\n                return scope;\r\n            }\r\n            var ret = $(),\r\n                columns = [].concat(col),\r\n                cellId;\r\n            if (typeof(ids) === \"string\") {\r\n                cellId = generateCellId(uniq, ids);\r\n                ret = columns.map(function(col) {\r\n                    return \"#\" + cellId + col;\r\n                }).join(\", \");\r\n            } else {\r\n                ret = []\r\n                ids.forEach(function(elm, i) {\r\n                    var cellId = generateCellId(uniq, elm);\r\n                    ret = ret.concat(columns.map(function(col) {\r\n                        return \"#\" + cellId + col;\r\n                    }));\r\n                });\r\n                ret = ret.join(\", \");\r\n            }\r\n            return columns.length == 1 ? scope.find(ret) : $(ret);\r\n        },\r\n        isClickedSep = false,\r\n        toResize = null,\r\n        oldMouseX = 0,\r\n        newMouseX = 0,\r\n\r\n        /*jslint regexp:true */\r\n        htmlstripre = /<\\/?[^>]+>/gi,\r\n        /*jslint regexp:false */\r\n\r\n        getIndent = function(node, tree) {\r\n            var div, i, li, width;\r\n\r\n            // did we already save it for this tree?\r\n            tree._gridSettings = tree._gridSettings || {};\r\n            if (tree._gridSettings.indent > 0) {\r\n                width = tree._gridSettings.indent;\r\n            } else {\r\n                // create a new div on the DOM but not visible on the page\r\n                div = $(\"<div></div>\");\r\n                i = node.prev(\"i\");\r\n                li = i.parent();\r\n                // add to that div all of the classes on the tree root\r\n                div.addClass(tree.get_node(\"#\", true).attr(\"class\"));\r\n\r\n                // move the li to the temporary div root\r\n                li.appendTo(div);\r\n\r\n                // attach to the body quickly\r\n                div.appendTo($(\"body\"));\r\n\r\n                // get the width\r\n                width = i.width() || LEVELINDENT;\r\n\r\n                // detach the li from the new div and destroy the new div\r\n                li.detach();\r\n                div.remove();\r\n\r\n                // save it for the future\r\n                tree._gridSettings.indent = width;\r\n            }\r\n\r\n\r\n            return (width);\r\n\r\n        },\r\n\r\n        copyData = function(fromtree, from, totree, to, recurse) {\r\n            var i, j;\r\n            to.data = $.extend(true, {}, from.data);\r\n            if (from && from.children_d && recurse) {\r\n                for (i = 0, j = from.children_d.length; i < j; i++) {\r\n                    copyData(fromtree, fromtree.get_node(from.children_d[i]), totree, totree.get_node(to.children_d[i]), recurse);\r\n                }\r\n            }\r\n        },\r\n\r\n        findLastClosedNode = function(tree, id) {\r\n            // first get our node\r\n            var ret, node = tree.get_node(id),\r\n                children = node.children;\r\n            // is it closed?\r\n            if (!children || children.length <= 0 || !node.state.opened) {\r\n                ret = id;\r\n            } else {\r\n                ret = findLastClosedNode(tree, children[children.length - 1]);\r\n            }\r\n            return (ret);\r\n        },\r\n\r\n        renderAWidth = function(node, tree) {\r\n            var depth, width,\r\n                fullWidth = parseInt(tree.settings.grid.columns[0].width, 10) + parseInt(tree._gridSettings.treeWidthDiff, 10);\r\n            // need to use a selector in jquery 1.4.4+\r\n            depth = tree.get_node(node).parents.length;\r\n            width = fullWidth - depth * getIndent(node, tree);\r\n            // the following line is no longer needed, since we are doing this inside a <td>\r\n            //a.css({\"vertical-align\": \"top\", \"overflow\":\"hidden\"});\r\n            return (fullWidth);\r\n        },\r\n        renderATitle = function(node, t, tree) {\r\n            var a = node.hasClass(\"jstree-anchor\") ? node : node.children(\"[class~='jstree-anchor']\"),\r\n                title, col = tree.settings.grid.columns[0];\r\n            // get the title\r\n            title = \"\";\r\n            if (col.title) {\r\n                if (col.title === SPECIAL_TITLE) {\r\n                    title = tree.get_text(t);\r\n                } else if (t.attr(col.title)) {\r\n                    title = t.attr(col.title);\r\n                }\r\n            }\r\n            // strip out HTML\r\n            title = title.replace(htmlstripre, '');\r\n            if (title) {\r\n                a.attr(\"title\", title);\r\n            }\r\n        },\r\n        getCellData = function(value, data) {\r\n            var val;\r\n            // get the contents of the cell - value could be a string or a function\r\n            if (value !== undefined && value !== null) {\r\n                if (typeof(value) === \"function\") {\r\n                    val = value(data);\r\n                } else if (data.data !== null && data.data !== undefined && data.data[value] !== undefined) {\r\n                    val = data.data[value];\r\n                } else {\r\n                    val = \"\";\r\n                }\r\n            } else {\r\n                val = \"\";\r\n            }\r\n            return val;\r\n        };\r\n\r\n    $.jstree.defaults.grid = {\r\n        width: 'auto'\r\n    };\r\n\r\n    $.jstree.plugins.grid = function(options, parent) {\r\n        this._initialize = function() {\r\n            if (!this._initialized) {\r\n                var s = this.settings.grid || {},\r\n                    styles, container = this.element,\r\n                    i,\r\n                    gs = this._gridSettings = {\r\n                        columns: s.columns || [],\r\n                        treeClass: \"jstree-grid-col-0\",\r\n                        context: s.contextmenu || false,\r\n                        columnWidth: s.columnWidth,\r\n                        defaultConf: {\r\n                            \"*display\": \"inline\",\r\n                            \"*+display\": \"inline\"\r\n                        },\r\n                        isThemeroller: !!this._data.themeroller,\r\n                        treeWidthDiff: 0,\r\n                        resizable: s.resizable,\r\n                        draggable: s.draggable,\r\n                        stateful: s.stateful,\r\n                        indent: 0,\r\n                        sortOrder: 'text',\r\n                        sortAsc: true,\r\n                        caseInsensitive: s.caseInsensitive,\r\n                        fixedHeader: s.fixedHeader !== false,\r\n                        width: s.width,\r\n                        height: s.height,\r\n                        gridcontextmenu: s.gridcontextmenu,\r\n                        treecol: 0,\r\n                        gridcols: []\r\n                    },\r\n                    cols = gs.columns,\r\n                    treecol = 0,\r\n                    columnSearch = false;\r\n                if (gs.gridcontextmenu === true) {\r\n                    gs.gridcontextmenu = function(grid, tree, node, val, col, t, target) {\r\n                        return {\r\n                            \"edit\": {\r\n                                label: \"Edit\",\r\n                                \"action\": function(data) {\r\n                                    var obj = t.get_node(node);\r\n                                    grid._edit(obj, col, target);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (gs.gridcontextmenu === false) {\r\n                    gs.gridcontextmenu = false;\r\n                }\r\n                // find which column our tree shuld go in\r\n                for (var i = 0, len = s.columns.length; i < len; i++) {\r\n                    if (s.columns[i].tree) {\r\n                        // save which column it was\r\n                        treecol = i;\r\n                        gs.treecol = treecol;\r\n                    } else {\r\n                        gs.gridcols.push(i);\r\n                    }\r\n                }\r\n                // set a unique ID for this table\r\n                this.uniq = Math.ceil(Math.random() * 1000);\r\n                this.rootid = container.attr(\"id\");\r\n\r\n                var msie = /msie/.test(navigator.userAgent.toLowerCase());\r\n                if (msie) {\r\n                    var version = parseFloat(navigator.appVersion.split(\"MSIE\")[1]);\r\n                    if (version < 8) {\r\n                        gs.defaultConf.display = \"inline\";\r\n                        gs.defaultConf.zoom = \"1\";\r\n                    }\r\n                }\r\n\r\n                // set up the classes we need\r\n                if (!styled) {\r\n                    styled = true;\r\n                    styles = [\r\n                        '.jstree-grid-cell {vertical-align: top; overflow:hidden;margin-left:0;position:relative;width: 100%;padding-left:7px;white-space: nowrap;}',\r\n                        '.jstree-grid-cell span {margin-right:0px;margin-right:0px;*display:inline;*+display:inline;white-space: nowrap;}',\r\n                        '.jstree-grid-separator {position:absolute; top:0; right:0; height:24px; margin-left: -2px; border-width: 0 2px 0 0; *display:inline; *+display:inline; margin-right:0px;width:0px;}',\r\n                        '.jstree-grid-header-cell {overflow: hidden; white-space: nowrap;padding: 1px 3px 2px 5px; cursor: default;}',\r\n                        '.jstree-grid-header-themeroller {border: 0; padding: 1px 3px;}',\r\n                        '.jstree-grid-header-regular {position:relative; background-color: #EBF3FD; z-index: 1;}',\r\n                        '.jstree-grid-hidden {display: none;}',\r\n                        '.jstree-grid-resizable-separator {cursor: col-resize; width: 2px;}',\r\n                        '.jstree-grid-separator-regular {border-color: #d0d0d0; border-style: solid;}',\r\n                        '.jstree-grid-cell-themeroller {border: none !important; background: transparent !important;}',\r\n                        '.jstree-grid-wrapper {table-layout: fixed; width: 100%; overflow: auto; position: relative;}',\r\n                        '.jstree-grid-midwrapper {display: table-row;}',\r\n                        '.jstree-grid-width-auto {width:auto;display:block;}',\r\n                        '.jstree-grid-column {display: table-cell; overflow: hidden;}',\r\n                        '.jstree-grid-ellipsis {text-overflow: ellipsis;}',\r\n                        '.jstree-grid-col-0 {width: 100%;}'\r\n                    ];\r\n                    $('<style type=\"text/css\">' + styles.join(\"\\n\") + '</style>').appendTo(\"head\");\r\n                }\r\n                this.gridWrapper = $(\"<div></div>\").addClass(\"jstree-grid-wrapper\").insertAfter(container);\r\n                this.midWrapper = $(\"<div></div>\").addClass(\"jstree-grid-midwrapper\").appendTo(this.gridWrapper);\r\n                // set the wrapper width\r\n                if (s.width) {\r\n                    this.gridWrapper.width(s.width);\r\n                }\r\n                if (s.height) {\r\n                    this.gridWrapper.height(s.height);\r\n                }\r\n                // create the data columns\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    // create the column\r\n                    $(\"<div></div>\").addClass(\"jstree-default jstree-grid-column jstree-grid-column-\" + i + \" jstree-grid-column-root-\" + this.rootid).appendTo(this.midWrapper);\r\n                }\r\n                this.midWrapper.children(\"div:eq(\" + treecol + \")\").append(container);\r\n                container.addClass(\"jstree-grid-cell\");\r\n\r\n                //move header with scroll\r\n                if (gs.fixedHeader) {\r\n                    this.gridWrapper.scroll(function() {\r\n                        $(this).find('.jstree-grid-header').css('top', $(this).scrollTop());\r\n                    });\r\n                }\r\n\r\n                // copy original sort function\r\n                var defaultSort = $.proxy(this.settings.sort, this);\r\n\r\n                // override sort function\r\n                this.settings.sort = function(a, b) {\r\n                    var bigger, colrefs = this.colrefs;\r\n\r\n                    if (gs.sortOrder === 'text') {\r\n                        var caseInsensitiveSort = this.get_text(a).toLowerCase().localeCompare(this.get_text(b).toLowerCase());\r\n                        bigger = gs.caseInsensitive ? (caseInsensitiveSort === 1) : (defaultSort(a, b) === 1);\r\n                    } else {\r\n                        // gs.sortOrder just refers to the unique random name for this column\r\n                        // we need to get the correct value\r\n                        var nodeA = this.get_node(a),\r\n                            nodeB = this.get_node(b),\r\n                            value = colrefs[gs.sortOrder].value,\r\n                            valueA = typeof(value) === 'function' ? value(nodeA) : nodeA.data[value],\r\n                            valueB = typeof(value) === 'function' ? value(nodeB) : nodeB.data[value];\r\n                        if (typeof(valueA) && typeof(valueB) !== 'undefined') {\r\n                            bigger = gs.caseInsensitive ? valueA.toLowerCase() > valueB.toLowerCase() : valueA > valueB;\r\n                        }\r\n                    }\r\n\r\n                    if (!gs.sortAsc)\r\n                        bigger = !bigger;\r\n\r\n                    return bigger ? 1 : -1;\r\n                };\r\n\r\n                // sortable columns when jQuery UI is available\r\n                if (gs.draggable) {\r\n                    if (!$.ui || !$.ui.sortable) {\r\n                        console.warn('[jstree-grid] draggable option requires jQuery UI');\r\n                    } else {\r\n                        var from, to;\r\n\r\n                        $(this.midWrapper).sortable({\r\n                            axis: \"x\",\r\n                            handle: \".jstree-grid-header\",\r\n                            cancel: \".jstree-grid-separator\",\r\n                            start: function(event, ui) {\r\n                                from = ui.item.index();\r\n                            },\r\n                            stop: function(event, ui) {\r\n                                to = ui.item.index();\r\n                                gs.columns.splice(to, 0, gs.columns.splice(from, 1)[0]);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //public function. validate searchObject keys, set columnSearch flag, calls jstree search and reset columnSearch flag\r\n                this.searchColumn = function(searchObj) {\r\n                    var validatedSearchObj = {};\r\n\r\n                    if (typeof searchObj == 'object') {\r\n                        for (var columnIndex in searchObj) {\r\n                            if (searchObj.hasOwnProperty(columnIndex)) {\r\n                                // keys should be the index of a column. This means the following:\r\n                                // only integers and smaller than the number of columns and bigger or equal to 0\r\n                                // (possilbe idea for in the future: ability to set key as a more human readable term like the column header and then map it here to an index)\r\n                                if (columnIndex % 1 === 0 && columnIndex < cols.length && columnIndex >= 0) {\r\n                                    validatedSearchObj[columnIndex] = searchObj[columnIndex];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    columnSearch = validatedSearchObj;\r\n\r\n                    if (Object.keys(validatedSearchObj).length !== 0) {\r\n                        //the search string doesn't matter. we'll use the search string in the columnSearch object!\r\n                        this.search('someValue');\r\n                    } else { // nothing to search so reset jstree's search by passing an empty string\r\n                        this.search('');\r\n                    }\r\n                    columnSearch = false;\r\n                }\r\n\r\n\r\n                // set default search for each column with no user defined search function (used when doing a columnSearch)\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    var column = cols[i];\r\n                    if (typeof(column.search_callback) !== \"function\") {\r\n                        // no search callback so set default function\r\n                        column.search_callback = function(str, columnValue, node, column) {\r\n                            var f = new $.vakata.search(str, true, {\r\n                                caseSensitive: searchSettings.case_sensitive,\r\n                                fuzzy: searchSettings.fuzzy\r\n                            });\r\n\r\n                            return f.search(columnValue).isMatch;\r\n\r\n                        };\r\n                    }\r\n                }\r\n\r\n                // if there was no overridden search_callback, we will provide it\r\n                // it will use the default per-node search algorithm, augmented by searching our data nodes\r\n                var searchSettings = this.settings.search;\r\n                var omniSearchCallback = searchSettings.search_callback;\r\n\r\n                if (!omniSearchCallback) {\r\n                    omniSearchCallback = function(str, node) {\r\n                        var i, f = new $.vakata.search(str, true, {\r\n                                caseSensitive: searchSettings.case_sensitive,\r\n                                fuzzy: searchSettings.fuzzy\r\n                            }),\r\n                            matched = f.search(node.text).isMatch,\r\n                            col;\r\n\r\n                        // only bother looking in each cell if it was not yet matched\r\n                        if (!matched) {\r\n                            for (var i = 0, len = cols.length; i < len; i++) {\r\n                                if (treecol === i) {\r\n                                    continue;\r\n                                }\r\n                                col = cols[i];\r\n                                matched = f.search(getCellData(col.value, node)).isMatch;\r\n                                if (matched) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        return matched;\r\n                    }\r\n                }\r\n\r\n                searchSettings.search_callback = function(str, node) {\r\n                    var matched = false;\r\n                    if (columnSearch) {\r\n                        //using logical AND for column searches (more options in the future)\r\n                        for (var columnIndex in columnSearch) {\r\n                            if (columnSearch.hasOwnProperty(columnIndex)) {\r\n                                var searchValue = columnSearch[columnIndex];\r\n                                if (searchValue == '') {\r\n                                    continue;\r\n                                }\r\n                                var col = cols[columnIndex];\r\n                                if (treecol == columnIndex) {\r\n                                    matched = col.search_callback(searchValue, node.text, node, col)\r\n                                } else {\r\n                                    matched = col.search_callback(searchValue, getCellData(col.value, node), node, col)\r\n                                }\r\n\r\n                                if (!matched) {\r\n                                    break; //found one that didn't match\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        container.trigger(\"columnSearch_grid.jstree\");\r\n                    } else {\r\n                        matched = omniSearchCallback(str, node);\r\n                        container.trigger(\"omniSearch_grid.jstree\");\r\n                    }\r\n                    return matched;\r\n                };\r\n                this._initialized = true;\r\n            }\r\n        };\r\n        this.init = function(el, options) {\r\n            parent.init.call(this, el, options);\r\n            this._initialize();\r\n        };\r\n        this.bind = function() {\r\n            parent.bind.call(this);\r\n            this._initialize();\r\n            this.element\r\n                .on(\"move_node.jstree create_node.jstree clean_node.jstree change_node.jstree\", $.proxy(function(e, data) {\r\n                    var target = this.get_node(data || \"#\", true);\r\n                    var id = _guid();\r\n                    this._detachColumns(id);\r\n                    this._prepare_grid(target);\r\n                    this._reattachColumns(id);\r\n                }, this))\r\n                .on(\"delete_node.jstree\", $.proxy(function(e, data) {\r\n                    if (data.node.id !== undefined) {\r\n                        var grid = this.gridWrapper,\r\n                            removeNodes = [data.node.id],\r\n                            i;\r\n                        // add children to remove list\r\n                        if (data.node && data.node.children_d) {\r\n                            removeNodes = removeNodes.concat(data.node.children_d);\r\n                        }\r\n                        findDataCell(this.uniq, removeNodes, this._gridSettings.gridcols).remove();\r\n                    }\r\n                }, this))\r\n                .on(\"show_node.jstree\", $.proxy(function(e, data) {\r\n                    this._hideOrShowTree(data.node, false);\r\n                }, this))\r\n                .on(\"hide_node.jstree\", $.proxy(function(e, data) {\r\n                    this._hideOrShowTree(data.node, true);\r\n                }, this))\r\n                .on(\"close_node.jstree\", $.proxy(function(e, data) {\r\n                    this._hide_grid(data.node);\r\n                }, this))\r\n                .on(\"open_node.jstree\", $.proxy(function(e, data) {}, this))\r\n                .on(\"load_node.jstree\", $.proxy(function(e, data) {}, this))\r\n                .on(\"loaded.jstree\", $.proxy(function(e) {\r\n                    this._prepare_headers();\r\n                    this.element.trigger(\"loaded_grid.jstree\");\r\n                }, this))\r\n                .on(\"ready.jstree\", $.proxy(function(e, data) {\r\n                    // find the line-height of the first known node\r\n                    var anchorHeight = this.element.find(\"[class~='jstree-anchor']:first\").outerHeight(),\r\n                        q,\r\n                        cls = this.element.attr(\"class\") || \"\";\r\n                    $('<style type=\"text/css\">div.jstree-grid-cell-root-' + this.rootid + ' {line-height: ' + anchorHeight + 'px; height: ' + anchorHeight + 'px;}</style>').appendTo(\"head\");\r\n\r\n                    // add container classes to the wrapper - EXCEPT those that are added by jstree, i.e. \"jstree\" and \"jstree-*\"\r\n                    q = cls.split(/\\s+/).map(function(i) {\r\n                        var match = i.match(/^jstree(-|$)/);\r\n                        return (match ? \"\" : i);\r\n                    });\r\n                    this.gridWrapper.addClass(q.join(\" \"));\r\n\r\n                }, this))\r\n                .on(\"move_node.jstree\", $.proxy(function(e, data) {\r\n                    var node = data.new_instance.element;\r\n                    //renderAWidth(node,this);\r\n                    // check all the children, because we could drag a tree over\r\n                    node.find(\"li > a\").each($.proxy(function(i, elm) {\r\n                        //renderAWidth($(elm),this);\r\n                    }, this));\r\n\r\n                }, this))\r\n                .on(\"hover_node.jstree\", $.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    if (this._hover_node !== null && this._hover_node !== undefined) {\r\n                        findDataCell(this.uniq, this._hover_node, this._gridSettings.gridcols).removeClass(\"jstree-hovered\");\r\n                    }\r\n                    this._hover_node = id;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass(\"jstree-hovered\");\r\n                }, this))\r\n                .on(\"dehover_node.jstree\", $.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    this._hover_node = null;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass(\"jstree-hovered\");\r\n                }, this))\r\n                .on(\"select_node.jstree\", $.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass(\"jstree-clicked\");\r\n                    this.get_node(selected.node.id, true).children(\"div.jstree-grid-cell\").addClass(\"jstree-clicked\");\r\n                }, this))\r\n                .on(\"deselect_node.jstree\", $.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass(\"jstree-clicked\");\r\n                }, this))\r\n                .on(\"deselect_all.jstree\", $.proxy(function(node, selected, event) {\r\n                    // get all of the ids that were unselected\r\n                    var ids = selected.node || [],\r\n                        i;\r\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(\"jstree-clicked\");\r\n                }, this))\r\n                .on(\"search.jstree\", $.proxy(function(e, data) {\r\n                    // search sometimes filters, so we need to hide all of the appropriate grid cells as well, and show only the matches\r\n                    var grid = this.gridWrapper,\r\n                        that = this,\r\n                        nodesToShow, startTime = new Date().getTime(),\r\n                        ids = getIds(data.nodes.filter(\".jstree-node\")),\r\n                        endTime;\r\n                    this.holdingCells = {};\r\n                    if (data.nodes.length) {\r\n                        var id = _guid();\r\n                        // save the cells we will hide\r\n                        var cells = grid.find('div.jstree-grid-cell-regular');\r\n                        this._detachColumns(id);\r\n                        if (this._data.search.som) {\r\n                            // create the list of nodes we want to look at\r\n                            if (this._data.search.smc) {\r\n                                nodesToShow = data.nodes.add(data.nodes.find('.jstree-node'));\r\n                            }\r\n                            nodesToShow = (nodesToShow || data.nodes).add(data.nodes.parentsUntil(\".jstree\"));\r\n\r\n                            // hide all of the grid cells\r\n                            cells.hide();\r\n                            // show only those that match\r\n                            nodesToShow.filter(\".jstree-node\").each(function(i, node) {\r\n                                var id = node.id;\r\n                                if (id) {\r\n                                    that._prepare_grid(node);\r\n                                    for (var i = 0, len = that._gridSettings.gridcols.length; i < len; i++) {\r\n                                        if (i === that._gridSettings.treecol) {\r\n                                            continue;\r\n                                        }\r\n                                        findDataCell(that.uniq, id, that._gridSettings.gridcols[i], $(that._domManipulation.columns[i])).show();\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        for (var i = 0, len = this._gridSettings.gridcols.length; i < len; i++) {\r\n                            if (i === this._gridSettings.treecol) {\r\n                                continue;\r\n                            }\r\n                            findDataCell(that.uniq, ids, this._gridSettings.gridcols[i], $(this._domManipulation.columns[i])).addClass(SEARCHCLASS);\r\n                        }\r\n                        this._reattachColumns(id);\r\n                        endTime = new Date().getTime();\r\n                        this.element.trigger(\"search-complete.jstree-grid\", [{\r\n                            time: endTime - startTime\r\n                        }]);\r\n                    }\r\n                    return true;\r\n                }, this))\r\n                .on(\"clear_search.jstree\", $.proxy(function(e, data) {\r\n                    // search has been cleared, so we need to show all rows\r\n                    var grid = this.gridWrapper,\r\n                        ids = getIds(data.nodes.filter(\".jstree-node\"));\r\n                    grid.find('div.jstree-grid-cell').show();\r\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(SEARCHCLASS);\r\n                    return true;\r\n                }, this))\r\n                .on(\"copy_node.jstree\", function(e, data) {\r\n                    var newtree = data.new_instance,\r\n                        oldtree = data.old_instance,\r\n                        obj = newtree.get_node(data.node, true);\r\n                    copyData(oldtree, data.original, newtree, data.node, true);\r\n                    newtree._detachColumns(obj.id);\r\n                    newtree._prepare_grid(obj);\r\n                    newtree._reattachColumns(obj.id);\r\n                    return true;\r\n                })\r\n                .on(\"show_ellipsis.jstree\", $.proxy(function(e, data) {\r\n                    this.gridWrapper.find(\".jstree-grid-cell\").add(\".jstree-grid-header\", this.gridWrapper).addClass(\"jstree-grid-ellipsis\");\r\n                    return true;\r\n                }, this))\r\n                .on(\"hide_ellipsis.jstree\", $.proxy(function(e, data) {\r\n                    this.gridWrapper.find(\".jstree-grid-cell\").add(\".jstree-grid-header\", this.gridWrapper).removeClass(\"jstree-grid-ellipsis\");\r\n                    return true;\r\n                }, this));\r\n            if (this._gridSettings.isThemeroller) {\r\n                this.element\r\n                    .on(\"select_node.jstree\", $.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").addClass(\"ui-state-active\");\r\n                    }, this))\r\n                    .on(\"deselect_node.jstree deselect_all.jstree\", $.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").removeClass(\"ui-state-active\");\r\n                    }, this))\r\n                    .on(\"hover_node.jstree\", $.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").addClass(\"ui-state-hover\");\r\n                    }, this))\r\n                    .on(\"dehover_node.jstree\", $.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").removeClass(\"ui-state-hover\");\r\n                    }, this));\r\n            }\r\n\r\n            if (this._gridSettings.stateful) {\r\n                this.element\r\n                    .on(\"resize_column.jstree-grid\", $.proxy(function(e, col, width) {\r\n                        localStorage['jstree-root-' + this.rootid + '-column-' + col] = width;\r\n                    }, this));\r\n            }\r\n        };\r\n\r\n        // tear down the tree entirely\r\n        this.teardown = function() {\r\n            var gw = this.gridWrapper,\r\n                container = this.element,\r\n                gridparent = gw.parent();\r\n            container.detach();\r\n            gw.remove();\r\n            gridparent.append(container);\r\n            parent.teardown.call(this);\r\n        };\r\n        // clean the grid in case of redraw or refresh entire tree\r\n        this._clean_grid = function(target, id) {\r\n            var grid = this.gridWrapper;\r\n            if (target) {\r\n                findDataCell(this.uniq, id, this._gridSettings.gridcols).remove();\r\n            } else {\r\n                // get all of the `div` children in all of the `td` in dataRow except for :first (that is the tree itself) and remove\r\n                grid.find(\"div.jstree-grid-cell-regular\").remove();\r\n            }\r\n        };\r\n        // prepare the headers\r\n        this._prepare_headers = function() {\r\n            var header, i, col, _this = this,\r\n                gs = this._gridSettings,\r\n                cols = gs.columns || [],\r\n                width, defaultWidth = gs.columnWidth,\r\n                resizable = gs.resizable || false,\r\n                cl, ccl, val, name, last, tr = gs.isThemeroller,\r\n                classAdd = (tr ? \"themeroller\" : \"regular\"),\r\n                puller,\r\n                hasHeaders = false,\r\n                gridparent = this.gridparent,\r\n                rootid = this.rootid,\r\n                conf = gs.defaultConf,\r\n                coluuid,\r\n                borPadWidth = 0,\r\n                totalWidth = 0;\r\n\r\n            // save the original parent so we can reparent on destroy\r\n            this.parent = gridparent;\r\n\r\n            // save the references to columns by unique ID\r\n            this.colrefs = {};\r\n\r\n\r\n            // create the headers\r\n            for (var i = 0, len = cols.length; i < len; i++) {\r\n                //col = $(\"<col/>\");\r\n                //col.appendTo(colgroup);\r\n                cl = cols[i].headerClass || \"\";\r\n                ccl = cols[i].columnClass || \"\";\r\n                val = cols[i].header || \"\";\r\n                do {\r\n                    coluuid = String(Math.floor(Math.random() * 10000));\r\n                } while (this.colrefs[coluuid] !== undefined);\r\n                // create a unique name for this column\r\n                name = cols[i].value ? coluuid : \"text\";\r\n                this.colrefs[name] = cols[i];\r\n\r\n                if (val) {\r\n                    hasHeaders = true;\r\n                }\r\n                if (gs.stateful && localStorage['jstree-root-' + rootid + '-column-' + i])\r\n                    width = localStorage['jstree-root-' + rootid + '-column-' + i];\r\n                else\r\n                    width = cols[i].width || defaultWidth;\r\n\r\n                var minWidth = cols[i].minWidth || width;\r\n                var maxWidth = cols[i].maxWidth || width;\r\n\r\n                // we only deal with borders if width is not auto and not percentages\r\n                borPadWidth = tr ? 1 + 6 : 2 + 8; // account for the borders and padding\r\n                if (width !== 'auto' && typeof(width) !== \"string\") {\r\n                    width -= borPadWidth;\r\n                }\r\n                col = this.midWrapper.children(\"div.jstree-grid-column-\" + i);\r\n                last = $(\"<div></div>\").css(conf).addClass(\"jstree-grid-div-\" + this.uniq + \"-\" + i + \" \" + (tr ? \"ui-widget-header \" : \"\") + \" jstree-grid-header jstree-grid-header-cell jstree-grid-header-\" + classAdd + \" \" + cl + \" \" + ccl).html(val);\r\n                last.addClass((tr ? \"ui-widget-header \" : \"\") + \"jstree-grid-header jstree-grid-header-\" + classAdd);\r\n                if (this.settings.core.themes.ellipsis === true) {\r\n                    last.addClass('jstree-grid-ellipsis');\r\n                }\r\n                last.prependTo(col);\r\n                last.attr(COL_DATA_ATTR, name);\r\n                totalWidth += last.outerWidth();\r\n                puller = $(\"<div class='jstree-grid-separator jstree-grid-separator-\" + classAdd + (tr ? \" ui-widget-header\" : \"\") + (resizable ? \" jstree-grid-resizable-separator\" : \"\") + \"'>&nbsp;</div>\").appendTo(last);\r\n                col.width(width);\r\n                col.css(\"min-width\", minWidth);\r\n                col.css(\"max-width\", maxWidth);\r\n            }\r\n\r\n            last.addClass((tr ? \"ui-widget-header \" : \"\") + \"jstree-grid-header jstree-grid-header-last jstree-grid-header-\" + classAdd);\r\n            // if there is no width given for the last column, do it via automatic\r\n            if (cols[cols.length - 1].width === undefined) {\r\n                totalWidth -= width;\r\n                col.css({\r\n                    width: \"auto\"\r\n                });\r\n                last.addClass(\"jstree-grid-width-auto\").next(\".jstree-grid-separator\").remove();\r\n            }\r\n            if (hasHeaders) {\r\n                // save the offset of the div from the body\r\n                //gs.divOffset = header.parent().offset().left;\r\n                gs.header = header;\r\n            } else {\r\n                $(\"div.jstree-grid-header\").hide();\r\n            }\r\n\r\n            if (!this.bound && resizable) {\r\n                this.bound = true;\r\n                $(document).mouseup(function() {\r\n                    var ref, cols, width, headers, currentTree, colNum;\r\n                    if (isClickedSep) {\r\n                        colNum = toResize.prevAll(\".jstree-grid-column\").length;\r\n                        currentTree = toResize.closest(\".jstree-grid-wrapper\").find(\".jstree\");\r\n                        ref = $.jstree.reference(currentTree);\r\n                        cols = ref.settings.grid.columns;\r\n                        headers = toResize.parent().children(\"div.jstree-grid-column\");\r\n                        if (isNaN(colNum) || colNum < 0) {\r\n                            ref._gridSettings.treeWidthDiff = currentTree.find(\"ins:eq(0)\").width() + currentTree.find(\"[class~='jstree-anchor']:eq(0)\").width() - ref._gridSettings.columns[0].width;\r\n                        }\r\n                        width = ref._gridSettings.columns[colNum].width = parseFloat(toResize.css(\"width\"));\r\n                        isClickedSep = false;\r\n                        toResize = null;\r\n\r\n                        currentTree.trigger(\"resize_column.jstree-grid\", [colNum, width]);\r\n                    }\r\n                }).mousemove(function(e) {\r\n                    if (isClickedSep) {\r\n                        newMouseX = e.pageX;\r\n                        var diff = newMouseX - oldMouseX,\r\n                            oldPrevHeaderInner,\r\n                            oldPrevColWidth, newPrevColWidth;\r\n\r\n                        if (diff !== 0) {\r\n                            oldPrevHeaderInner = toResize.width();\r\n                            oldPrevColWidth = parseFloat(toResize.css(\"width\"));\r\n\r\n                            // handle a Chrome issue with columns set to auto\r\n                            // thanks to Brabus https://github.com/side-by-side\r\n                            if (!oldPrevColWidth) {\r\n                                oldPrevColWidth = toResize.innerWidth();\r\n                            }\r\n\r\n                            // make sure that diff cannot be beyond the left/right limits\r\n                            diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\r\n                            newPrevColWidth = oldPrevColWidth + diff;\r\n\r\n                            // only do this if we are not shrinking past 0 on left - and limit it to that amount\r\n                            if ((diff > 0 || oldPrevHeaderInner > 0) && newPrevColWidth > MINCOLWIDTH) {\r\n                                toResize.width(newPrevColWidth + \"px\");\r\n                                toResize.css(\"min-width\", newPrevColWidth + \"px\");\r\n                                toResize.css(\"max-width\", newPrevColWidth + \"px\");\r\n                                oldMouseX = newMouseX;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                this.gridWrapper.on(\"selectstart\", \".jstree-grid-resizable-separator\", function() {\r\n                        return false;\r\n                    }).on(\"mousedown\", \".jstree-grid-resizable-separator\", function(e) {\r\n                        isClickedSep = true;\r\n                        oldMouseX = e.pageX;\r\n                        toResize = $(this).closest(\"div.jstree-grid-column\");\r\n                        // the max rightmost position we will allow is the right-most of the wrapper minus a buffer (10)\r\n                        return false;\r\n                    })\r\n                    .on(\"dblclick\", \".jstree-grid-resizable-separator\", function(e) {\r\n                        var clickedSep = $(this),\r\n                            col = clickedSep.closest(\"div.jstree-grid-column\"),\r\n                            oldPrevColWidth = parseFloat(col.css(\"width\")),\r\n                            newWidth = 0,\r\n                            diff,\r\n                            colNum = col.prevAll(\".jstree-grid-column\").length,\r\n                            oldPrevHeaderInner = col.width(),\r\n                            newPrevColWidth;\r\n\r\n\r\n                        //find largest width\r\n                        col.find(\".jstree-grid-cell\").each(function() {\r\n                            var item = $(this),\r\n                                width;\r\n                            item.css(\"position\", \"absolute\");\r\n                            item.css(\"width\", \"auto\");\r\n                            width = item.outerWidth();\r\n                            item.css(\"position\", \"relative\");\r\n\r\n                            if (width > newWidth) {\r\n                                newWidth = width;\r\n                            }\r\n                        });\r\n\r\n                        diff = newWidth - oldPrevColWidth;\r\n\r\n                        // make sure that diff cannot be beyond the left limits\r\n                        diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\r\n                        newPrevColWidth = (oldPrevColWidth + diff) + \"px\";\r\n\r\n                        col.width(newPrevColWidth);\r\n                        col.css(\"min-width\", newPrevColWidth);\r\n                        col.css(\"max-width\", newPrevColWidth);\r\n\r\n                        $(this).closest(\".jstree-grid-wrapper\").find(\".jstree\").trigger(\"resize_column.jstree-grid\", [colNum, newPrevColWidth]);\r\n                    })\r\n                    .on(\"click\", \".jstree-grid-separator\", function(e) {\r\n                        // don't sort after resize\r\n                        e.stopPropagation();\r\n                    });\r\n            }\r\n            this.gridWrapper.on(\"click\", \".jstree-grid-header-cell\", function(e) {\r\n                if (!_this.sort) {\r\n                    return;\r\n                }\r\n\r\n                // get column\r\n                var name = $(this).attr(COL_DATA_ATTR);\r\n\r\n                // sort order\r\n                var symbol;\r\n                if (gs.sortOrder === name && gs.sortAsc === true) {\r\n                    gs.sortAsc = false;\r\n                    symbol = \"&darr;\";\r\n                } else {\r\n                    gs.sortOrder = name;\r\n                    gs.sortAsc = true;\r\n                    symbol = \"&uarr;\";\r\n                }\r\n\r\n                // add sort arrow\r\n                $(this.closest('.jstree-grid-wrapper')).find(\".jstree-grid-sort-icon\").remove();\r\n                $(\"<span></span>\").addClass(\"jstree-grid-sort-icon\").appendTo($(this)).html(symbol);\r\n\r\n                // sort by column\r\n                var rootNode = _this.get_node('#');\r\n                _this.sort(rootNode, true);\r\n                _this.redraw_node(rootNode, true);\r\n            });\r\n\r\n        };\r\n\r\n        this._domManipulation = null; // We'll store the column nodes in this object and an id for the grid-node that started the manipulation { id: \"id of the node that started the manipulation\", columns: { Key-Value-Pair col-No: Column }}\r\n\r\n        function _guid() {\r\n            function s4() {\r\n                return Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1);\r\n            }\r\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n                s4() + '-' + s4() + s4() + s4();\r\n        }\r\n        /*\r\n         * Trys to detach the tree columns on massive dom manipulations\r\n         */\r\n        this._detachColumns = function(id) {\r\n            // if the columns are not detached, then detach them\r\n            if (this._domManipulation == null) {\r\n                var cols = this._gridSettings.columns || [],\r\n                    treecol = this._gridSettings.treecol,\r\n                    mw = this.midWrapper;\r\n                this._domManipulation = {\r\n                    id: id,\r\n                    columns: {}\r\n                };\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    //if (treecol === i) {\r\n                    //  continue;\r\n                    //}\r\n                    this._domManipulation.columns[i] = mw.children(\".jstree-grid-column-\" + i)[0];\r\n                    this._domManipulation.columns[i].parentNode.removeChild(this._domManipulation.columns[i]);\r\n                }\r\n            }\r\n            return this._domManipulation;\r\n        }\r\n\r\n        this._reattachColumns = function(id) {\r\n            if (this._domManipulation == null) {\r\n                return false;\r\n            }\r\n            if (this._domManipulation.id === id) {\r\n                var cols = this._gridSettings.columns || [],\r\n                    treecol = this._gridSettings.treecol,\r\n                    mw = this.midWrapper;\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    //if (treecol === i) {\r\n                    //  continue;\r\n                    //}\r\n                    mw[0].appendChild(this._domManipulation.columns[i]);\r\n                }\r\n                this._domManipulation = null;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        /*\r\n         * Override open_node to detach the columns before redrawing child-nodes, and do reattach them afterwarts\r\n         */\r\n        this.open_node = function(obj, callback, animation) {\r\n            var isArray = $.isArray(obj);\r\n            var node = null;\r\n            if (!isArray) {\r\n                node = this.get_node(obj);\r\n                if (node.id === \"#\") {\r\n                    return;\r\n                } // wtf??? we ar in the root and do not need a open!\r\n            }\r\n            var id = isArray ? _guid() : node.id;\r\n            this._detachColumns(id);\r\n            var ret = parent.open_node.call(this, obj, callback, animation);\r\n            this._reattachColumns(id);\r\n            return ret;\r\n        }\r\n\r\n        /*\r\n         * Override redraw_node to correctly insert the grid\r\n         */\r\n        this.redraw_node = function(obj, deep, is_callback, force_render) {\r\n            var id = $.isArray(obj) ? _guid() : this.get_node(obj).id;\r\n            // we detach the columns once\r\n            this._detachColumns(id);\r\n            // first allow the parent to redraw the node\r\n            obj = parent.redraw_node.call(this, obj, deep, is_callback, force_render);\r\n            // next prepare the grid for a redrawn node - but only if ths node is not hidden (search does that)\r\n            if (obj) {\r\n                this._prepare_grid(obj);\r\n            }\r\n            // don't forget to reattach\r\n            this._reattachColumns(id);\r\n            return obj;\r\n        };\r\n        this.refresh = function() {\r\n            this._clean_grid();\r\n            return parent.refresh.apply(this, arguments);\r\n        };\r\n        /*\r\n         * Override set_id to update cell attributes\r\n         */\r\n        this.set_id = function(obj, id) {\r\n            var old, uniq = this.uniq;\r\n            if (obj) {\r\n                old = obj.id;\r\n            }\r\n            var result = parent.set_id.apply(this, arguments);\r\n            if (result) {\r\n                if (old !== undefined) {\r\n                    var grid = this.gridWrapper,\r\n                        oldNodes = [old],\r\n                        i;\r\n                    // get children\r\n                    if (obj && obj.children_d) {\r\n                        oldNodes = oldNodes.concat(obj.children_d);\r\n                    }\r\n                    // update id in children\r\n                    findDataCell(uniq, oldNodes, this._gridSettings.gridcols)\r\n                        .attr(NODE_DATA_ATTR, obj.id)\r\n                        .removeClass(generateCellId(uniq, old))\r\n                        .addClass(generateCellId(uniq, obj.id))\r\n                        .each(function(i, node) {\r\n                            $(node).attr('id', generateCellId(uniq, obj.id) + (i + 1));\r\n                        });\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n\r\n        this._hideOrShowTree = function(node, hide) {\r\n            //Hides or shows a tree\r\n            this._detachColumns(node.id);\r\n            // show cells in each detachted column\r\n            this._hideOrShowNode(node, hide, this._gridSettings.columns || [], this._gridSettings.treecol);\r\n            this._reattachColumns(node.id);\r\n        }\r\n        this._hideOrShowNode = function(node, hide, cols, treecol) {\r\n            //Hides or shows a node with recursive calls to all open child-nodes\r\n            for (var i = 0, len = cols.length; i < len; i++) {\r\n                if (i === treecol) {\r\n                    continue;\r\n                }\r\n                var cells = findDataCell(this.uniq, node.id, i, $(this._domManipulation.columns[i]));\r\n                if (hide) {\r\n                    cells.addClass(\"jstree-grid-hidden\");\r\n                } else {\r\n                    cells.removeClass(\"jstree-grid-hidden\");\r\n                }\r\n            }\r\n            if (node.state.opened && node.children) {\r\n                for (var i = 0, len = node.children.length; i < len; i++) {\r\n                    this._hideOrShowNode(this.get_node(node.children[i]), hide, cols, treecol);\r\n                }\r\n            }\r\n        }\r\n        this._hide_grid = function(node) {\r\n            if (!node) {\r\n                return true;\r\n            }\r\n            this._detachColumns(node.id);\r\n            var children = node.children ? node.children : [],\r\n                cols = this._gridSettings.columns || [],\r\n                treecol = this._gridSettings.treecol;\r\n            // try to remove all children\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                var child = this.get_node(children[i]);\r\n                // go through each column, remove all children with the correct ID name\r\n                for (var j = 0, lenj = cols.length; j < lenj; j++) {\r\n                    if (j === treecol) {\r\n                        continue;\r\n                    }\r\n                    findDataCell(this.uniq, child.id, j, $(this._domManipulation.columns[j])).remove();\r\n                }\r\n                if (child.state.opened) {\r\n                    this._hide_grid(child);\r\n                }\r\n            }\r\n\r\n\r\n            this._reattachColumns(node.id);\r\n        };\r\n        this.holdingCells = {};\r\n        this.getHoldingCells = function(obj, col, hc) {\r\n            if (obj.state.hidden || !obj.state.opened) {\r\n                return $();\r\n            }\r\n            var ret = $(),\r\n                children = obj.children || [],\r\n                child, i, uniq = this.uniq;\r\n            // run through each child, render it, and then render its children recursively\r\n            for (i = 0; i < children.length; i++) {\r\n                child = generateCellId(uniq, children[i]) + col;\r\n                if (hc[child]) {\r\n                    ret = ret.add(hc[child]).add(this.getHoldingCells(this.get_node(children[i]), col, hc));\r\n                    //delete hc[child];\r\n                }\r\n            }\r\n            return (ret);\r\n        };\r\n\r\n        /**\r\n         * put a grid cell in edit mode (input field to edit the data)\r\n         * @name edit(obj, col)\r\n         * @param  {mixed} obj\r\n         * @param  {obj} col definition\r\n         * @param  {element} cell element, either span or wrapping div\r\n         */\r\n        this._edit = function(obj, col, element) {\r\n            if (!obj) {\r\n                return false;\r\n            }\r\n            if (!obj.data) {\r\n                obj.data = {};\r\n            }\r\n            if (element) {\r\n                element = $(element);\r\n                if (element.prop(\"tagName\").toLowerCase() === \"div\") {\r\n                    element = element.children(\"span:first\");\r\n                }\r\n            } else {\r\n                // need to find the element - later\r\n                return false;\r\n            }\r\n            var rtl = this._data.core.rtl,\r\n                w = this.element.width(),\r\n                t = obj.data[col.value],\r\n                h1 = $(\"<\" + \"div />\", {\r\n                    css: {\r\n                        \"position\": \"absolute\",\r\n                        \"top\": \"-200px\",\r\n                        \"left\": (rtl ? \"0px\" : \"-1000px\"),\r\n                        \"visibility\": \"hidden\"\r\n                    }\r\n                }).appendTo(\"body\"),\r\n                h2 = $(\"<\" + \"input />\", {\r\n                    \"value\": t,\r\n                    \"class\": \"jstree-rename-input\",\r\n                    \"css\": {\r\n                        \"padding\": \"0\",\r\n                        \"border\": \"1px solid silver\",\r\n                        \"box-sizing\": \"border-box\",\r\n                        \"display\": \"inline-block\",\r\n                        \"height\": (this._data.core.li_height) + \"px\",\r\n                        \"lineHeight\": (this._data.core.li_height) + \"px\",\r\n                        \"width\": \"150px\" // will be set a bit further down\r\n                    },\r\n                    \"blur\": $.proxy(function() {\r\n                        var v = h2.val();\r\n                        // save the value if changed\r\n                        if (v === \"\" || v === t) {\r\n                            v = t;\r\n                        } else {\r\n                            obj.data[col.value] = v;\r\n                            this.element.trigger('update_cell.jstree-grid', {\r\n                                node: obj,\r\n                                col: col.value,\r\n                                value: v,\r\n                                old: t\r\n                            });\r\n                            var id = _guid();\r\n                            this._detachColumns(id);\r\n                            this._prepare_grid(this.get_node(obj, true));\r\n                            this._reattachColumns(id);\r\n                        }\r\n                        h2.remove();\r\n                        element.show();\r\n                    }, this),\r\n                    \"keydown\": function(event) {\r\n                        var key = event.which;\r\n                        if (key === 27) {\r\n                            this.value = t;\r\n                        }\r\n                        if (key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\r\n                            event.stopImmediatePropagation();\r\n                        }\r\n                        if (key === 27 || key === 13) {\r\n                            event.preventDefault();\r\n                            this.blur();\r\n                        }\r\n                    },\r\n                    \"click\": function(e) {\r\n                        e.stopImmediatePropagation();\r\n                    },\r\n                    \"mousedown\": function(e) {\r\n                        e.stopImmediatePropagation();\r\n                    },\r\n                    \"keyup\": function(event) {\r\n                        h2.width(Math.min(h1.text(\"pW\" + this.value).width(), w));\r\n                    },\r\n                    \"keypress\": function(event) {\r\n                        if (event.which === 13) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }),\r\n                fn = {\r\n                    fontFamily: element.css('fontFamily') || '',\r\n                    fontSize: element.css('fontSize') || '',\r\n                    fontWeight: element.css('fontWeight') || '',\r\n                    fontStyle: element.css('fontStyle') || '',\r\n                    fontStretch: element.css('fontStretch') || '',\r\n                    fontVariant: element.css('fontVariant') || '',\r\n                    letterSpacing: element.css('letterSpacing') || '',\r\n                    wordSpacing: element.css('wordSpacing') || ''\r\n                };\r\n            element.hide();\r\n            element.parent().append(h2);\r\n            h2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(), w))[0].select();\r\n        };\r\n\r\n        this.grid_hide_column = function(col) {\r\n            this.midWrapper.find(\".jstree-grid-column-\" + col).hide();\r\n        };\r\n        this.grid_show_column = function(col) {\r\n            this.midWrapper.find(\".jstree-grid-column-\" + col).show();\r\n        };\r\n\r\n        this._prepare_grid = function(obj) {\r\n            var gs = this._gridSettings,\r\n                c = gs.treeClass,\r\n                _this = this,\r\n                t,\r\n                cols = gs.columns || [],\r\n                width, tr = gs.isThemeroller,\r\n                uniq = this.uniq,\r\n                treecol = gs.treecol,\r\n                tree = this.element,\r\n                rootid = this.rootid,\r\n                classAdd = (tr ? \"themeroller\" : \"regular\"),\r\n                img, objData = this.get_node(obj),\r\n                defaultWidth = gs.columnWidth,\r\n                conf = gs.defaultConf,\r\n                cellClickHandler = function(tree, node, val, col, t) {\r\n                    return function(e) {\r\n                        //node = tree.find(\"#\"+node.attr(\"id\"));\r\n                        var event = eventer.create(\"select_cell.jstree-grid\");\r\n                        tree.trigger(event, [{\r\n                            value: val,\r\n                            column: col.header,\r\n                            node: node,\r\n                            grid: $(this),\r\n                            sourceName: col.value\r\n                        }]);\r\n                        if (!event.isDefaultPrevented()) {\r\n                            node.children(\".jstree-anchor\").trigger(\"click.jstree\", e);\r\n                        }\r\n                    };\r\n                },\r\n                cellRightClickHandler = function(tree, node, val, col, t) {\r\n                    return function(e) {\r\n                        if (gs.gridcontextmenu) {\r\n                            e.preventDefault();\r\n                            menu.popup(this, {\r\n                                'x': e.pageX,\r\n                                'y': e.pageY\r\n                            }, gs.gridcontextmenu(_this, tree, node, val, col, t, e.target));\r\n                        }\r\n                    };\r\n                },\r\n                hoverInHandler = function(node, jsTreeInstance) {\r\n                    return function() {\r\n                        jsTreeInstance.hover_node(node);\r\n                    };\r\n                },\r\n                hoverOutHandler = function(node, jsTreeInstance) {\r\n                    return function() {\r\n                        jsTreeInstance.dehover_node(node);\r\n                    };\r\n                },\r\n                i, val, cl, wcl, ccl, a, last, valClass, wideValClass, span, paddingleft, title, gridCellName, gridCellParentId, gridCellParent,\r\n                gridCellPrev, gridCellPrevId, gridCellNext, gridCellNextId, gridCellChild, gridCellChildId,\r\n                col, content, tmpWidth, mw = this.midWrapper,\r\n                column, lid = objData.id,\r\n                highlightSearch, isClicked,\r\n                peers = this.get_node(objData.parent).children,\r\n                // find my position in the list of peers. \"peers\" is the list of everyone at my level under my parent, in order\r\n                pos = $.inArray(lid, peers),\r\n                hc = this.holdingCells,\r\n                rendered = false,\r\n                closed;\r\n            // get our column definition\r\n            t = $(obj);\r\n\r\n            // find the a children\r\n            a = t.children(\"[class~='jstree-anchor']\");\r\n            highlightSearch = a.hasClass(SEARCHCLASS);\r\n            isClicked = a.hasClass(\"jstree-clicked\");\r\n\r\n            if (a.length === 1) {\r\n                closed = !objData.state.opened;\r\n                gridCellName = generateCellId(uniq, lid);\r\n                gridCellParentId = objData.parent === \"#\" ? null : objData.parent;\r\n                a.addClass(c);\r\n                //renderAWidth(a,_this);\r\n                renderATitle(a, t, _this);\r\n                last = a;\r\n\r\n                // calculate position ids once\r\n                gridCellPrevId = pos <= 0 ? objData.parent : findLastClosedNode(this, peers[pos - 1]);\r\n                gridCellNextId = pos >= peers.length - 1 ? \"NULL\" : peers[pos + 1];\r\n                gridCellChildId = objData.children && objData.children.length > 0 ? objData.children[0] : \"NULL\";\r\n\r\n                // find which column our tree shuld go in\r\n                var s = this.settings.grid;\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    if (treecol === i) {\r\n                        continue;\r\n                    }\r\n                    col = cols[i];\r\n                    column = this._domManipulation == null ? mw.children(\"div:eq(\" + i + \")\") : $(this._domManipulation.columns[i]); //Geht the detached column not mw.children(\"div:eq(\"+i+\")\");\r\n                    // get the cellClass, the wideCellClass, and the columnClass\r\n                    cl = col.cellClass || \"\";\r\n                    wcl = col.wideCellClass || \"\";\r\n                    ccl = col.columnClass || \"\";\r\n\r\n                    // add a column class to the Column\r\n                    column.addClass(ccl);\r\n\r\n\r\n                    // get the contents of the cell - value could be a string or a function\r\n                    val = getCellData(col.value, objData);\r\n\r\n                    if (typeof(col.format) === \"function\") {\r\n                        val = col.format(val);\r\n                    }\r\n\r\n                    // put images instead of text if needed\r\n                    if (col.images) {\r\n                        img = col.images[val] || col.images[\"default\"];\r\n                        if (img) {\r\n                            content = img[0] === \"*\" ? '<span class=\"' + img.substr(1) + '\"></span>' : '<img src=\"' + img + '\">';\r\n                        }\r\n                    } else {\r\n                        content = val;\r\n                    }\r\n\r\n                    // content cannot be blank, or it messes up heights\r\n                    if (content === undefined || content === null || BLANKRE.test(content)) {\r\n                        content = \"&nbsp;\";\r\n                    }\r\n\r\n                    // get the valueClass\r\n                    valClass = col.valueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.valueClass] || \"\" : \"\";\r\n                    if (valClass && col.valueClassPrefix && col.valueClassPrefix !== \"\") {\r\n                        valClass = col.valueClassPrefix + valClass;\r\n                    }\r\n                    // get the wideValueClass\r\n                    wideValClass = col.wideValueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.wideValueClass] || \"\" : \"\";\r\n                    if (wideValClass && col.wideValueClassPrefix && col.wideValueClassPrefix !== \"\") {\r\n                        wideValClass = col.wideValueClassPrefix + wideValClass;\r\n                    }\r\n                    // get the title\r\n                    title = col.title && objData.data !== null && objData.data !== undefined ? objData.data[col.title] || \"\" : \"\";\r\n                    // strip out HTML\r\n                    title = title.replace(htmlstripre, '');\r\n\r\n                    // get the width\r\n                    paddingleft = 7;\r\n                    width = col.width || defaultWidth;\r\n                    if (width !== 'auto') {\r\n                        width = tmpWidth || (width - paddingleft);\r\n                    }\r\n\r\n                    last = findDataCell(uniq, lid, i, column);\r\n                    if (!last || last.length < 1) {\r\n                        last = $(\"<div></div>\");\r\n                        $(\"<span></span>\").appendTo(last);\r\n                        last.attr(\"id\", gridCellName + i);\r\n                        last.addClass(gridCellName);\r\n                        last.attr(NODE_DATA_ATTR, lid);\r\n                        if (highlightSearch) {\r\n                            last.addClass(SEARCHCLASS);\r\n                        } else {\r\n                            last.removeClass(SEARCHCLASS);\r\n                        }\r\n                        if (isClicked) {\r\n                            last.addClass(\"jstree-clicked\");\r\n                        } else {\r\n                            last.removeClass(\"jstree-clicked\");\r\n                        }\r\n                        if (this.settings.core.themes.ellipsis === true && i !== treecol) {\r\n                            last.addClass('jstree-grid-ellipsis');\r\n                        }\r\n\r\n                    }\r\n\r\n                    // we need to check the hidden-state and see if we need to hide the node\r\n                    if (objData.state.hidden) {\r\n                        last.addClass(\"jstree-grid-hidden\");\r\n                    } else {\r\n                        last.removeClass(\"jstree-grid-hidden\");\r\n                    }\r\n\r\n                    // we need to put it in the dataCell - after the parent, but the position matters\r\n                    // if we have no parent, then we are one of the root nodes, but still need to look at peers\r\n\r\n\r\n                    // if we are first, i.e. pos === 0, we go right after the parent;\r\n                    // if we are not first, and our previous peer (one before us) is closed, we go right after the previous peer cell\r\n                    // if we are not first, and our previous peer is opened, then we have to find its youngest & lowest closed child (incl. leaf)\r\n                    //\r\n                    // probably be much easier to go *before* our next one\r\n                    // but that one might not be drawn yet\r\n                    // here is the logic for jstree drawing:\r\n                    //   it draws peers from first to last or from last to first\r\n                    //   it draws children before a parent\r\n                    //\r\n                    // so I can rely on my *parent* not being drawn, but I cannot rely on my previous peer or my next peer being drawn\r\n\r\n                    // so we do the following:\r\n                    //   1- We are the first child: install after the parent\r\n                    //   2- Our previous peer is already drawn: install after the previous peer\r\n                    //   3- Our previous peer is not drawn, we have a child that is drawn: install right before our first child\r\n                    //   4- Our previous peer is not drawn, we have no child that is drawn, our next peer is drawn: install right before our next peer\r\n                    //   5- Our previous peer is not drawn, we have no child that is drawn, our next peer is not drawn: install right after parent\r\n                    gridCellPrev = findDataCell(uniq, gridCellPrevId, i, column);\r\n                    gridCellNext = findDataCell(uniq, gridCellNextId, i, column);\r\n                    gridCellChild = findDataCell(uniq, gridCellChildId, i, column);\r\n                    gridCellParent = findDataCell(uniq, gridCellParentId, i, column);\r\n\r\n\r\n                    // if our parent is already drawn, then we put this in the right order under our parent\r\n                    if (gridCellParentId) {\r\n                        if (gridCellParent && gridCellParent.length > 0) {\r\n                            if (gridCellPrev && gridCellPrev.length > 0) {\r\n                                last.insertAfter(gridCellPrev);\r\n                            } else if (gridCellChild && gridCellChild.length > 0) {\r\n                                last.insertBefore(gridCellChild);\r\n                            } else if (gridCellNext && gridCellNext.length > 0) {\r\n                                last.insertBefore(gridCellNext);\r\n                            } else {\r\n                                last.insertAfter(gridCellParent);\r\n                            }\r\n                            rendered = true;\r\n                        } else {\r\n                            rendered = false;\r\n                        }\r\n                        // always put it in the holding cells, and then sort when the parent comes in, in case parent is (re)drawn later\r\n                        hc[gridCellName + i] = last;\r\n                    } else {\r\n                        if (gridCellPrev && gridCellPrev.length > 0) {\r\n                            last.insertAfter(gridCellPrev);\r\n                        } else if (gridCellChild && gridCellChild.length > 0) {\r\n                            last.insertBefore(gridCellChild);\r\n                        } else if (gridCellNext && gridCellNext.length > 0) {\r\n                            last.insertBefore(gridCellNext);\r\n                        } else {\r\n                            last.appendTo(column);\r\n                        }\r\n                        rendered = true;\r\n                    }\r\n                    // do we have any children waiting for this cell? walk down through the children/grandchildren/etc tree\r\n                    if (rendered) {\r\n                        var toRen = this.getHoldingCells(objData, i, hc);\r\n                        last.after(toRen);\r\n                    }\r\n                    // need to make the height of this match the line height of the tree. How?\r\n                    span = last.children(\"span\");\r\n\r\n                    // create a span inside the div, so we can control what happens in the whole div versus inside just the text/background\r\n                    span.addClass(cl + \" \" + valClass).html(content);\r\n                    last = last.css(conf).addClass(\"jstree-grid-cell jstree-grid-cell-regular jstree-grid-cell-root-\" + rootid + \" jstree-grid-cell-\" + classAdd + \" \" + wcl + \" \" + wideValClass + (tr ? \" ui-state-default\" : \"\")).addClass(\"jstree-grid-col-\" + i).addClass(\"jstree-animated\");\r\n                    // add click handler for clicking inside a grid cell\r\n                    last.click(cellClickHandler(tree, t, val, col, this));\r\n                    last.on(\"contextmenu\", cellRightClickHandler(tree, t, val, col, this));\r\n                    last.hover(hoverInHandler(t, this), hoverOutHandler(t, this));\r\n\r\n                    if (title) {\r\n                        span.attr(\"title\", title);\r\n                    }\r\n\r\n                    tree.trigger(\"render_cell.jstree-grid\", [{\r\n                        value: val,\r\n                        column: col.header,\r\n                        node: t,\r\n                        sourceName: col.value\r\n                    }]);\r\n                }\r\n                last.addClass(\"jstree-grid-cell-last\" + (tr ? \" ui-state-default\" : \"\"));\r\n                // if there is no width given for the last column, do it via automatic\r\n                if (cols[cols.length - 1].width === undefined) {\r\n                    last.addClass(\"jstree-grid-width-auto\").next(\".jstree-grid-separator\").remove();\r\n                }\r\n            }\r\n            this.element.css({\r\n                'overflow-y': 'auto !important'\r\n            });\r\n        };\r\n        // clean up holding cells\r\n        this.holdingCells = {};\r\n\r\n        // need to do alternating background colors or borders\r\n    };\r\n\r\n    return $;\r\n});\ndefine('skylark-jstree/plugin/types',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.types) { return; }\r\n\r\n\t/**\r\n\t * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).\r\n\t *\r\n\t * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.\r\n\t * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.\r\n\t * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.\r\n\t * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.\r\n\t * * `li_attr` an object of values which will be used to add HTML attributes on the resulting LI DOM node (merged with the node's own data)\r\n\t * * `a_attr` an object of values which will be used to add HTML attributes on the resulting A DOM node (merged with the node's own data)\r\n\t *\r\n\t * There are two predefined types:\r\n\t *\r\n\t * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.\r\n\t * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.\r\n\t *\r\n\t * @name $.jstree.defaults.types\r\n\t * @plugin types\r\n\t */\r\n\t$.jstree.defaults.types = {\r\n\t\t'default' : {}\r\n\t};\r\n\t$.jstree.defaults.types[$.jstree.root] = {};\r\n\r\n\t$.jstree.plugins.types = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tvar i, j;\r\n\t\t\tif(options && options.types && options.types['default']) {\r\n\t\t\t\tfor(i in options.types) {\r\n\t\t\t\t\tif(i !== \"default\" && i !== $.jstree.root && options.types.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tfor(j in options.types['default']) {\r\n\t\t\t\t\t\t\tif(options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {\r\n\t\t\t\t\t\t\t\toptions.types[i][j] = options.types['default'][j];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tparent.refresh.call(this, skip_loading, forget_state);\r\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\r\n\t\t};\r\n\t\tthis.bind = function () {\r\n\t\t\tthis.element\r\n\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\tt = this.settings.types,\r\n\t\t\t\t\t\t\ti, j, c = 'default', k;\r\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\tc = 'default';\r\n\t\t\t\t\t\t\tif(m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {\r\n\t\t\t\t\t\t\t\tc = m[dpc[i]].original.type;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {\r\n\t\t\t\t\t\t\t\tc = m[dpc[i]].data.jstree.type;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[dpc[i]].type = c;\r\n\t\t\t\t\t\t\tif(m[dpc[i]].icon === true && t[c].icon !== undefined) {\r\n\t\t\t\t\t\t\t\tm[dpc[i]].icon = t[c].icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(t[c].li_attr !== undefined && typeof t[c].li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (k in t[c].li_attr) {\r\n\t\t\t\t\t\t\t\t\tif (t[c].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].li_attr[k] === undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr[k] = t[c].li_attr[k];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr['class'] = t[c].li_attr['class'] + ' ' + m[dpc[i]].li_attr['class'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(t[c].a_attr !== undefined && typeof t[c].a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (k in t[c].a_attr) {\r\n\t\t\t\t\t\t\t\t\tif (t[c].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].a_attr[k] === undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr[k] = t[c].a_attr[k];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'href' && m[dpc[i]].a_attr[k] === '#') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['href'] = t[c].a_attr['href'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['class'] = t[c].a_attr['class'] + ' ' + m[dpc[i]].a_attr['class'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tm[$.jstree.root].type = $.jstree.root;\r\n\t\t\t\t\t}, this));\r\n\t\t\tparent.bind.call(this);\r\n\t\t};\r\n\t\tthis.get_json = function (obj, options, flat) {\r\n\t\t\tvar i, j,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\topt = options ? $.extend(true, {}, options, {no_id:false}) : {},\r\n\t\t\t\ttmp = parent.get_json.call(this, obj, opt, flat);\r\n\t\t\tif(tmp === false) { return false; }\r\n\t\t\tif($.isArray(tmp)) {\r\n\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : \"default\";\r\n\t\t\t\t\tif(options && options.no_id) {\r\n\t\t\t\t\t\tdelete tmp[i].id;\r\n\t\t\t\t\t\tif(tmp[i].li_attr && tmp[i].li_attr.id) {\r\n\t\t\t\t\t\t\tdelete tmp[i].li_attr.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(tmp[i].a_attr && tmp[i].a_attr.id) {\r\n\t\t\t\t\t\t\tdelete tmp[i].a_attr.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : \"default\";\r\n\t\t\t\tif(options && options.no_id) {\r\n\t\t\t\t\ttmp = this._delete_ids(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\tthis._delete_ids = function (tmp) {\r\n\t\t\tif($.isArray(tmp)) {\r\n\t\t\t\tfor(var i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i] = this._delete_ids(tmp[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp;\r\n\t\t\t}\r\n\t\t\tdelete tmp.id;\r\n\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\r\n\t\t\t\tdelete tmp.li_attr.id;\r\n\t\t\t}\r\n\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\r\n\t\t\t\tdelete tmp.a_attr.id;\r\n\t\t\t}\r\n\t\t\tif(tmp.children && $.isArray(tmp.children)) {\r\n\t\t\t\ttmp.children = this._delete_ids(tmp.children);\r\n\t\t\t}\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\tthis.check = function (chk, obj, par, pos, more) {\r\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tvar m = obj && obj.id ? (more && more.origin ? more.origin : $.jstree.reference(obj.id)) : null, tmp, d, i, j;\r\n\t\t\tm = m && m._model && m._model.data ? m._model.data : null;\r\n\t\t\tswitch(chk) {\r\n\t\t\t\tcase \"create_node\":\r\n\t\t\t\tcase \"move_node\":\r\n\t\t\t\tcase \"copy_node\":\r\n\t\t\t\t\tif(chk !== 'move_node' || $.inArray(obj.id, par.children) === -1) {\r\n\t\t\t\t\t\ttmp = this.get_rules(par);\r\n\t\t\t\t\t\tif(tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_01', 'reason' : 'max_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(tmp.valid_children !== undefined && tmp.valid_children !== -1 && $.inArray((obj.type || 'default'), tmp.valid_children) === -1) {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_02', 'reason' : 'valid_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(m && obj.children_d && obj.parents) {\r\n\t\t\t\t\t\t\td = 0;\r\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\td = Math.max(d, m[obj.children_d[i]].parents.length);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\td = d - obj.parents.length + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(d <= 0 || d === undefined) { d = 1; }\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tif(tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_03', 'reason' : 'max_depth prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpar = this.get_node(par.parent);\r\n\t\t\t\t\t\t\ttmp = this.get_rules(par);\r\n\t\t\t\t\t\t\td++;\r\n\t\t\t\t\t\t} while(par);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to retrieve the type settings object for a node\r\n\t\t * @name get_rules(obj)\r\n\t\t * @param {mixed} obj the node to find the rules for\r\n\t\t * @return {Object}\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.get_rules = function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar tmp = this.get_type(obj, true);\r\n\t\t\tif(tmp.max_depth === undefined) { tmp.max_depth = -1; }\r\n\t\t\tif(tmp.max_children === undefined) { tmp.max_children = -1; }\r\n\t\t\tif(tmp.valid_children === undefined) { tmp.valid_children = -1; }\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to retrieve the type string or settings object for a node\r\n\t\t * @name get_type(obj [, rules])\r\n\t\t * @param {mixed} obj the node to find the rules for\r\n\t\t * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned\r\n\t\t * @return {String|Object}\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.get_type = function (obj, rules) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj) ? false : ( rules ? $.extend({ 'type' : obj.type }, this.settings.types[obj.type]) : obj.type);\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to change a node's type\r\n\t\t * @name set_type(obj, type)\r\n\t\t * @param {mixed} obj the node to change\r\n\t\t * @param {String} type the new type\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.set_type = function (obj, type) {\r\n\t\t\tvar m = this._model.data, t, t1, t2, old_type, old_icon, k, d, a;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_type(obj[t1], type);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tt = this.settings.types;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!t[type] || !obj) { return false; }\r\n\t\t\td = this.get_node(obj, true);\r\n\t\t\tif (d && d.length) {\r\n\t\t\t\ta = d.children('.jstree-anchor');\r\n\t\t\t}\r\n\t\t\told_type = obj.type;\r\n\t\t\told_icon = this.get_icon(obj);\r\n\t\t\tobj.type = type;\r\n\t\t\tif(old_icon === true || !t[old_type] || (t[old_type].icon !== undefined && old_icon === t[old_type].icon)) {\r\n\t\t\t\tthis.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);\r\n\t\t\t}\r\n\r\n\t\t\t// remove old type props\r\n\t\t\tif(t[old_type] && t[old_type].li_attr !== undefined && typeof t[old_type].li_attr === 'object') {\r\n\t\t\t\tfor (k in t[old_type].li_attr) {\r\n\t\t\t\t\tif (t[old_type].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = (m[obj.id].li_attr['class'] || '').replace(t[old_type].li_attr[k], '');\r\n\t\t\t\t\t\t\tif (d) { d.removeClass(t[old_type].li_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === t[old_type].li_attr[k]) {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = null;\r\n\t\t\t\t\t\t\tif (d) { d.removeAttr(k); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(t[old_type] && t[old_type].a_attr !== undefined && typeof t[old_type].a_attr === 'object') {\r\n\t\t\t\tfor (k in t[old_type].a_attr) {\r\n\t\t\t\t\tif (t[old_type].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = (m[obj.id].a_attr['class'] || '').replace(t[old_type].a_attr[k], '');\r\n\t\t\t\t\t\t\tif (a) { a.removeClass(t[old_type].a_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === t[old_type].a_attr[k]) {\r\n\t\t\t\t\t\t\tif (k === 'href') {\r\n\t\t\t\t\t\t\t\tm[obj.id].a_attr[k] = '#';\r\n\t\t\t\t\t\t\t\tif (a) { a.attr('href', '#'); }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdelete m[obj.id].a_attr[k];\r\n\t\t\t\t\t\t\t\tif (a) { a.removeAttr(k); }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// add new props\r\n\t\t\tif(t[type].li_attr !== undefined && typeof t[type].li_attr === 'object') {\r\n\t\t\t\tfor (k in t[type].li_attr) {\r\n\t\t\t\t\tif (t[type].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === undefined) {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = t[type].li_attr[k];\r\n\t\t\t\t\t\t\tif (d) {\r\n\t\t\t\t\t\t\t\tif (k === 'class') {\r\n\t\t\t\t\t\t\t\t\td.addClass(t[type].li_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\td.attr(k, t[type].li_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = t[type].li_attr[k] + ' ' + m[obj.id].li_attr['class'];\r\n\t\t\t\t\t\t\tif (d) { d.addClass(t[type].li_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(t[type].a_attr !== undefined && typeof t[type].a_attr === 'object') {\r\n\t\t\t\tfor (k in t[type].a_attr) {\r\n\t\t\t\t\tif (t[type].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === undefined) {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr[k] = t[type].a_attr[k];\r\n\t\t\t\t\t\t\tif (a) {\r\n\t\t\t\t\t\t\t\tif (k === 'class') {\r\n\t\t\t\t\t\t\t\t\ta.addClass(t[type].a_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ta.attr(k, t[type].a_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'href' && m[obj.id].a_attr[k] === '#') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['href'] = t[type].a_attr['href'];\r\n\t\t\t\t\t\t\tif (a) { a.attr('href', t[type].a_attr['href']); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = t[type].a_attr['class'] + ' ' + m[obj.id].a_attr['class'];\r\n\t\t\t\t\t\t\tif (a) { a.addClass(t[type].a_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t};\r\n\t// include the types plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"types\");\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-jstree/plugin/unique',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.unique) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the unique plugin\r\n\t * @name $.jstree.defaults.unique\r\n\t * @plugin unique\r\n\t */\r\n\t$.jstree.defaults.unique = {\r\n\t\t/**\r\n\t\t * Indicates if the comparison should be case sensitive. Default is `false`.\r\n\t\t * @name $.jstree.defaults.unique.case_sensitive\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\tcase_sensitive : false,\r\n\t\t/**\r\n\t\t * Indicates if white space should be trimmed before the comparison. Default is `false`.\r\n\t\t * @name $.jstree.defaults.unique.trim_whitespace\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\ttrim_whitespace : false,\r\n\t\t/**\r\n\t\t * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.\r\n\t\t * @name $.jstree.defaults.unique.duplicate\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\tduplicate : function (name, counter) {\r\n\t\t\treturn name + ' (' + counter + ')';\r\n\t\t}\r\n\t};\r\n\r\n\t$.jstree.plugins.unique = function (options, parent) {\r\n\t\tthis.check = function (chk, obj, par, pos, more) {\r\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tif(!par || !par.children) { return true; }\r\n\t\t\tvar n = chk === \"rename_node\" ? pos : obj.text,\r\n\t\t\t\tc = [],\r\n\t\t\t\ts = this.settings.unique.case_sensitive,\r\n\t\t\t\tw = this.settings.unique.trim_whitespace,\r\n\t\t\t\tm = this._model.data, i, j, t;\r\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\tt = m[par.children[i]].text;\r\n\t\t\t\tif (!s) {\r\n\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (w) {\r\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t}\r\n\t\t\t\tc.push(t);\r\n\t\t\t}\r\n\t\t\tif(!s) { n = n.toLowerCase(); }\r\n\t\t\tif (w) { n = n.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, ''); }\r\n\t\t\tswitch(chk) {\r\n\t\t\t\tcase \"delete_node\":\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"rename_node\":\r\n\t\t\t\t\tt = obj.text || '';\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti = ($.inArray(n, c) === -1 || (obj.text && t === n));\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_01', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"create_node\":\r\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_04', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"copy_node\":\r\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_02', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"move_node\":\r\n\t\t\t\t\ti = ( (obj.parent === par.id && (!more || !more.is_multi)) || $.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_03', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\tthis.create_node = function (par, node, pos, callback, is_loaded) {\r\n\t\t\tif(!node || node.text === undefined) {\r\n\t\t\t\tif(par === null) {\r\n\t\t\t\t\tpar = $.jstree.root;\r\n\t\t\t\t}\r\n\t\t\t\tpar = this.get_node(par);\r\n\t\t\t\tif(!par) {\r\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t\t\t}\r\n\t\t\t\tpos = pos === undefined ? \"last\" : pos;\r\n\t\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t\t\t}\r\n\t\t\t\tif(!node) { node = {}; }\r\n\t\t\t\tvar tmp, n, dpc, i, j, m = this._model.data, s = this.settings.unique.case_sensitive, w = this.settings.unique.trim_whitespace, cb = this.settings.unique.duplicate, t;\r\n\t\t\t\tn = tmp = this.get_string('New node');\r\n\t\t\t\tdpc = [];\r\n\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\t\tt = m[par.children[i]].text;\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdpc.push(t);\r\n\t\t\t\t}\r\n\t\t\t\ti = 1;\r\n\t\t\t\tt = n;\r\n\t\t\t\tif (!s) {\r\n\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (w) {\r\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t}\r\n\t\t\t\twhile($.inArray(t, dpc) !== -1) {\r\n\t\t\t\t\tn = cb.call(this, tmp, (++i)).toString();\r\n\t\t\t\t\tt = n;\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnode.text = n;\r\n\t\t\t}\r\n\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t};\r\n\t};\r\n\r\n\t// include the unique plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"unique\");\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-jstree/plugin/wholerow',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"../tree\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.wholerow) { return; }\r\n\r\n\tvar div = document.createElement('DIV');\r\n\tdiv.setAttribute('unselectable','on');\r\n\tdiv.setAttribute('role','presentation');\r\n\tdiv.className = 'jstree-wholerow';\r\n\tdiv.innerHTML = '&#160;';\r\n\t$.jstree.plugins.wholerow = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on('ready.jstree set_state.jstree', $.proxy(function () {\r\n\t\t\t\t\t\tthis.hide_dots();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\t//div.style.height = this._data.core.li_height + 'px';\r\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"deselect_all.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"changed.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t\tvar tmp = false, i, j;\r\n\t\t\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = this.get_node(data.selected[i], true);\r\n\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\ttmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"open_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"hover_node.jstree dehover_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(e.type === \"hover_node\" && this.is_disabled(data.node)) { return; }\r\n\t\t\t\t\t\tthis.get_node(data.node, true).children('.jstree-wholerow')[e.type === \"hover_node\"?\"addClass\":\"removeClass\"]('jstree-wholerow-hovered');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-wholerow\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif (this._data.contextmenu) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar tmp = $.Event('contextmenu', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey, pageX : e.pageX, pageY : e.pageY });\r\n\t\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t/*!\r\n\t\t\t\t.on(\"mousedown.jstree touchstart.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\tif(e.target === e.currentTarget) {\r\n\t\t\t\t\t\t\tvar a = $(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\");\r\n\t\t\t\t\t\t\te.target = a[0];\r\n\t\t\t\t\t\t\ta.trigger(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t*/\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('dblclick', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-leaf > .jstree-ocl\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mouseover.jstree\", \".jstree-wholerow, .jstree-icon\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tif(!this.is_disabled(e.currentTarget)) {\r\n\t\t\t\t\t\t\tthis.hover_node(e.currentTarget);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mouseleave.jstree\", \".jstree-node\", $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\tthis.teardown = function () {\r\n\t\t\tif(this.settings.wholerow) {\r\n\t\t\t\tthis.element.find(\".jstree-wholerow\").remove();\r\n\t\t\t}\r\n\t\t\tparent.teardown.call(this);\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tvar tmp = div.cloneNode(true);\r\n\t\t\t\t//tmp.style.height = this._data.core.li_height + 'px';\r\n\t\t\t\tif($.inArray(obj.id, this._data.core.selected) !== -1) { tmp.className += ' jstree-wholerow-clicked'; }\r\n\t\t\t\tif(this._data.core.focused && this._data.core.focused === obj.id) { tmp.className += ' jstree-wholerow-hovered'; }\r\n\t\t\t\tobj.insertBefore(tmp, obj.childNodes[0]);\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\t// include the wholerow plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"wholerow\");\r\n\r\n\treturn $;\r\n\r\n});\r\n\ndefine('skylark-jstree/main',[\r\n    \"skylark-utils-dom/query\",\r\n    \"./tree\",\r\n    \"./plugin/changed\",\r\n    \"./plugin/checkbox\",\r\n    \"./plugin/conditionalselect\",\r\n    \"./plugin/contextmenu\",\r\n    \"./plugin/dnd\",\r\n    \"./plugin/massload\",\r\n    \"./plugin/search\",\r\n    \"./plugin/sort\",\r\n    \"./plugin/state\",\r\n    \"./plugin/treegrid\",\r\n    \"./plugin/types\",\r\n    \"./plugin/unique\",\r\n    \"./plugin/wholerow\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-jstree', ['skylark-jstree/main'], function (main) { return main; });\n\n"]}