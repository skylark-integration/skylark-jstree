{"version":3,"sources":["tree.js"],"names":["define","langx","browser","eventer","noder","geom","velm","$","sbswt","ajax","options","Xhr","request","url","camelCase","each","extend","target","deep","args","Array","prototype","slice","call","arguments","shift","length","this","forEach","arg","mixin","grep","elements","callback","filter","isArray","isEmptyObject","isFunction","isWindow","isPlainObject","inArray","makeArray","map","noop","parseJSON","window","JSON","parse","proxy","trim","type","fn","stop","jstree","instance_counter","ccp_node","ccp_mode","ccp_inst","themes_loaded","src","attr","document","version","defaults","plugins","path","indexOf","replace","idregex","root","create","el","Tree","destroy","off","reference","needle","tmp","obj","id","tagName","nodeType","ignore","closest","data","inst","_model","is_method","result","instance","method","apply","undefined","core","strings","check_callback","error","animation","multiple","themes","name","dir","dots","icons","ellipsis","stripes","variant","responsive","expand_selected_onload","worker","force_text","dblclick_toggle","loaded_state","restore_focus","keyboard","ctrl-space","e","currentTarget","trigger","enter","left","preventDefault","is_open","close_node","o","get_parent","get_node","children","focus","up","get_prev_dom","right","is_closed","open_node","_firstChild","down","get_next_dom","*","open_all","home","get_container_ul","end","element","find","last","f2","edit","WidgetBase","inherit","klassName","plugin","deco","opts","Child","_data","init","_id","_cnt","_wrk","selected","last_error","working","worker_queue","focused","opt","i","k","changed","force_full_redraw","redraw_timeout","default_state","loaded","opened","disabled","parent","parents","children_d","state","addClass","settings","ready","rtl","css","bind","original_container_html","clone","addBack","contents","nodeValue","test","remove","html","get_string","li_height","first","outerHeight","node","_create_prototype_node","load_node","keep_html","URL","revokeObjectURL","empty","teardown","_temp1","_temp2","_node","createElement","setAttribute","className","appendChild","_kbevent_to_func","keys","8","9","13","19","27","32","33","34","35","36","37","38","39","40","44","45","46","96","97","98","99","100","101","102","103","104","105","-13","112","113","114","115","116","117","118","119","120","121","122","123","144","145","16","17","18","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","107","109","110","186","187","188","189","190","191","192","219","220","221","222","111","106","173","parts","ctrlKey","push","altKey","shiftKey","which","sort","join","toLowerCase","kb","hasOwnProperty","split","unbind","removeClass","removeData","word","tout","was_click","on","selection","getSelection","sel","removeAllRanges","collapse","Date","toggle_node","activeElement","activate_node","f","r","status","setTimeout","j","concat","vakata","array_unique","action","clearTimeout","chr","String","fromCharCode","col","ind","index","v","text","RegExp","charAt","s","set_theme","set_theme_variant","mouseleave","not","mouseenter","act","hover_node","dehover_node","ev","get_container","key","a","dom","firstChild","nextSibling","_nextSibling","_previousSibling","previousSibling","as_dom","hasClass","ex","get_path","glue","ids","p","get_text","reverse","strict","offsetHeight","parentsUntil","nextAll","lastChild","parentNode","get_children_dom","is_parent","is_loaded","is_loading","loading","is_leaf","l","c","_load_nodes","array_filter","failed","_load_node","m","has_children","hidden","nodes","is_callback","force_reload","done","load_all","to_load","t","notTextOrCommentNode","d","parseHTML","x","getResponseHeader","_append_json_data","_append_html_data","reason","stringify","xhr","fail","_node_changed","cb","dat","is","par","chd","dpc","_parse_model_from_html","redraw","force_processing","w","df","t_id","t_cnt","func","rslt","add","parse_flat","ps","unshift","tid","toString","icon","li_attr","a_attr","href","original","parse_nest","cnt","mod","postMessage","Blob","Worker","createObjectURL","onmessage","terminate","attributes","_parse_model_from_flat_json","_parse_model_from_json","_redraw","fe","redraw_node","append","full","draw_children","force_render","old","last_sibling","querySelector","substr","getElementById","cloneNode","childNodes","style","backgroundImage","backgroundPosition","backgroundSize","createTextNode","innerHTML","insertBefore","scrollTop","scrollLeft","t1","t2","slideDown","display","ok","_open_to","slideUp","original_obj","_this","close_all","get","is_disabled","enable_node","disable_node","is_hidden","hide_node","skip_redraw","show_node","hide_all","show_all","last_clicked","metaKey","deselect_node","select_node","event","is_selected","deselect_all","supress_event","prevent_open","array_remove_item","select_all","old_selection","get_selected","get_top_selected","get_bottom_selected","get_state","open","scroll","top","set_state","initial_selection","refresh","skip_loading","forget_state","refresh_node","set_id","new","set_text","val","get_json","flat","get_icon","no_data","no_state","no_li_attr","no_a_attr","no_id","no_children","create_node","pos","match","check","position","rename_node","delete_node","lft","array_remove","chk","more","chc","is_multi","functions","move_node","origin","old_par","old_pos","new_par","old_ins","copy_node","is_foreign","old_parent","old_position","old_instance","new_instance","cut","copy","get_buffer","mode","can_paste","paste","clear_buffer","default_text","h1","h2","cancel","width","visibility","appendTo","body","value","class","padding","border","box-sizing","height","lineHeight","blur","stopImmediatePropagation","nv","replaceWith","keydown","click","mousedown","keyup","Math","min","keypress","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","fontVariant","letterSpacing","wordSpacing","select","one","theme_name","theme_url","theme","get_theme","variant_name","get_theme_variant","show_stripes","hide_stripes","toggle_stripes","show_dots","hide_dots","toggle_dots","show_icons","hide_icons","toggle_icons","show_ellipsis","hide_ellipsis","toggle_ellipsis","set_icon","removeAttr","hide_icon","show_icon","search","pattern","txt","fuzzy","caseSensitive","MATCH_LOCATION","location","MATCH_DISTANCE","distance","MATCH_THRESHOLD","threshold","patternLen","matchmask","pattern_alphabet","mask","match_bitapScore","accuracy","proximity","abs","isMatch","score","binMin","binMid","lastRd","start","finish","rd","charMatch","textLen","scoreThreshold","bestLoc","binMax","locations","lastIndexOf","floor","max","with_values","array","from","splice","item","b"],"mappings":"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","file":"../tree.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\t\"use strict\";\n\n\t$.ajax = $.ajax || function(options) {\n        return langx.Xhr.request(options.url,options);\n    };\n\n    $.camelCase = langx.camelCase;\n\n    $.each = langx.each;\n\n    $.extend = function(target) {\n        var deep, args = Array.prototype.slice.call(arguments, 1);\n        if (typeof target == 'boolean') {\n            deep = target\n            target = args.shift()\n        }\n        if (args.length == 0) {\n            args = [target];\n            target = this;\n        }\n        args.forEach(function(arg) {\n        \tlangx.mixin(target, arg, deep);\n        });\n        return target;\n    };\n\n    $.grep = function(elements, callback) {\n        return filter.call(elements, callback)\n    };\n\n    $.isArray = langx.isArray;\n    $.isEmptyObject = langx.isEmptyObject;\n    $.isFunction = langx.isFunction;\n    $.isWindow = langx.isWindow;\n    $.isPlainObject = langx.isPlainObject;\n\n    $.inArray = langx.inArray;\n\n    $.makeArray = langx.makeArray;\n    $.map = langx.map;\n\n    $.noop = function() {\n    };\n\n    $.parseJSON = window.JSON.parse;\n\n    $.proxy = langx.proxy;\n\n    $.trim = langx.trim;\n    $.type = langx.type;\n\n    $.fn.stop = function() {\n    \treturn this;\n    }\n\n\n\t/*!\n\t * jsTree {{VERSION}}\n\t * http://jstree.com/\n\t *\n\t * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\n\t *\n\t * Licensed same as jquery - under the terms of the MIT License\n\t *   http://www.opensource.org/licenses/mit-license.php\n\t */\n\n\t// prevent another load? maybe there is a better way?\n\tif($.jstree) {\n\t\treturn;\n\t}\n\n\t/**\n\t * ### jsTree core functionality\n\t */\n\n\t// internal variables\n\tvar instance_counter = 0,\n\t\tccp_node = false,\n\t\tccp_mode = false,\n\t\tccp_inst = false,\n\t\tthemes_loaded = [],\n\t\tsrc = $('script:last').attr('src'),\n\t\tdocument = window.document; // local variable is always faster to access then a global\n\n\t/**\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\n\t * @name $.jstree\n\t */\n\t$.jstree = {\n\t\t/**\n\t\t * specifies the jstree version in use\n\t\t * @name $.jstree.version\n\t\t */\n\t\tversion : '{{VERSION}}',\n\t\t/**\n\t\t * holds all the default options used when creating new instances\n\t\t * @name $.jstree.defaults\n\t\t */\n\t\tdefaults : {\n\t\t\t/**\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\n\t\t\t * @name $.jstree.defaults.plugins\n\t\t\t */\n\t\t\tplugins : []\n\t\t},\n\t\t/**\n\t\t * stores all loaded jstree plugins (used internally)\n\t\t * @name $.jstree.plugins\n\t\t */\n\t\tplugins : {},\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%?`]/g,\n\t\troot : '#'\n\t};\n\t\n\t/**\n\t * creates a jstree instance\n\t * @name $.jstree.create(el [, options])\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\n\t * @return {jsTree} the new instance\n\t */\n\t$.jstree.create = function (el, options) {\n\t\treturn new Tree(el,options);\n\t};\n\n\t/**\n\t * remove all traces of jstree from the DOM and destroy all instances\n\t * @name $.jstree.destroy()\n\t */\n\t$.jstree.destroy = function () {\n\t\t$('.jstree:jstree').jstree('destroy');\n\t\t$(document).off('.jstree');\n\t};\n\n\n\t/**\n\t * get a reference to an existing instance\n\t *\n\t * __Examples__\n\t *\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\n\t *\t// all of there will return the same instance\n\t *\t$.jstree.reference('tree');\n\t *\t$.jstree.reference('#tree');\n\t *\t$.jstree.reference($('#tree'));\n\t *\t$.jstree.reference(document.getElementByID('tree'));\n\t *\t$.jstree.reference('branch');\n\t *\t$.jstree.reference('#branch');\n\t *\t$.jstree.reference($('#branch'));\n\t *\t$.jstree.reference(document.getElementByID('branch'));\n\t *\n\t * @name $.jstree.reference(needle)\n\t * @param {DOMElement|jQuery|String} needle\n\t * @return {jsTree|null} the instance or `null` if not found\n\t */\n\t$.jstree.reference = function (needle) {\n\t\tvar tmp = null,\n\t\t\tobj = null;\n\t\tif(needle && needle.id && (!needle.tagName || !needle.nodeType)) { needle = needle.id; }\n\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\n\t\t}\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\n\t\t}\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\n\t\t\ttmp = obj;\n\t\t}\n\t\telse {\n\t\t\t$('.jstree').each(function () {\n\t\t\t\tvar inst = $(this).data('jstree');\n\t\t\t\tif(inst && inst._model.data[needle]) {\n\t\t\t\t\ttmp = inst;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn tmp;\n\t};\n\n\t/**\n\t * Create an instance, get an instance or invoke a command on a instance.\n\t *\n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\n\t *\n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\n\t *\n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\n\t *\n\t * In any other case - nothing is returned and chaining is not broken.\n\t *\n\t * __Examples__\n\t *\n\t *\t$('#tree1').jstree(); // creates an instance\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\n\t *\n\t * @name $().jstree([arg])\n\t * @param {String|Object} arg\n\t * @return {Mixed}\n\t */\n\t$.fn.jstree = function (arg) {\n\t\t// check for string argument\n\t\tvar is_method\t= (typeof arg === 'string'),\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\n\t\t\tresult\t\t= null;\n\t\tif(arg === true && !this.length) { return false; }\n\t\tthis.each(function () {\n\t\t\t// get the instance (if there is one) and method (if it exists)\n\t\t\tvar instance = $.jstree.reference(this),\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\n\t\t\t// if calling a method, and method is available - execute on the instance\n\t\t\tresult = is_method && method ?\n\t\t\t\tmethod.apply(instance, args) :\n\t\t\t\tnull;\n\t\t\t// if there is no instance and no method is being called - create one\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\n\t\t\t\t$.jstree.create(this, arg);\n\t\t\t}\n\t\t\t// if there is an instance and no method is called - return the instance\n\t\t\tif( (instance && !is_method) || arg === true ) {\n\t\t\t\tresult = instance || false;\n\t\t\t}\n\t\t\t// if there was a method call which returned a result - break and return the value\n\t\t\tif(result !== null && result !== undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\n\t\treturn result !== null && result !== undefined ?\n\t\t\tresult : this;\n\t};\n\n\t/**\n\t * stores all defaults for the core\n\t * @name $.jstree.defaults.core\n\t */\n\t$.jstree.defaults.core = {\n\t\t/**\n\t\t * data configuration\n\t\t *\n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\n\t\t *\n\t\t * You can also pass in a HTML string or a JSON array here.\n\t\t *\n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree.\n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\n\t\t *\n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t// AJAX\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : {\n\t\t *\t\t\t\t'url' : '/get/children/',\n\t\t *\t\t\t\t'data' : function (node) {\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\n\t\t *\t\t\t\t}\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t *\n\t\t *\t// direct data\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : [\n\t\t *\t\t\t\t'Simple root node',\n\t\t *\t\t\t\t{\n\t\t *\t\t\t\t\t'id' : 'node_2',\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\n\t\t *\t\t\t\t}\n\t\t *\t\t\t]\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t *\t// function\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : function (obj, callback) {\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.data\n\t\t */\n\t\tdata\t\t\t: false,\n\t\t/**\n\t\t * configure the various strings used throughout the tree\n\t\t *\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\n\t\t * If left as `false` no replacement is made.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'strings' : {\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.strings\n\t\t */\n\t\tstrings\t\t\t: false,\n\t\t/**\n\t\t * determines what happens when a user tries to modify the structure of the tree\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node', 'copy_node' or 'edit'\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.check_callback\n\t\t */\n\t\tcheck_callback\t: false,\n\t\t/**\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\n\t\t * @name $.jstree.defaults.core.error\n\t\t */\n\t\terror\t\t\t: $.noop,\n\t\t/**\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\n\t\t * @name $.jstree.defaults.core.animation\n\t\t */\n\t\tanimation\t\t: 200,\n\t\t/**\n\t\t * a boolean indicating if multiple nodes can be selected\n\t\t * @name $.jstree.defaults.core.multiple\n\t\t */\n\t\tmultiple\t\t: true,\n\t\t/**\n\t\t * theme configuration object\n\t\t * @name $.jstree.defaults.core.themes\n\t\t */\n\t\tthemes\t\t\t: {\n\t\t\t/**\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\n\t\t\t * @name $.jstree.defaults.core.themes.name\n\t\t\t */\n\t\t\tname\t\t\t: false,\n\t\t\t/**\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\n\t\t\t * @name $.jstree.defaults.core.themes.url\n\t\t\t */\n\t\t\turl\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\n\t\t\t * @name $.jstree.defaults.core.themes.dir\n\t\t\t */\n\t\t\tdir\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean indicating if connecting dots are shown\n\t\t\t * @name $.jstree.defaults.core.themes.dots\n\t\t\t */\n\t\t\tdots\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if node icons are shown\n\t\t\t * @name $.jstree.defaults.core.themes.icons\n\t\t\t */\n\t\t\ticons\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if node ellipsis should be shown - this only works with a fixed with on the container\n\t\t\t * @name $.jstree.defaults.core.themes.ellipsis\n\t\t\t */\n\t\t\tellipsis\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean indicating if the tree background is striped\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\n\t\t\t */\n\t\t\tstripes\t\t\t: false,\n\t\t\t/**\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\n\t\t\t * @name $.jstree.defaults.core.themes.variant\n\t\t\t */\n\t\t\tvariant\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\n\t\t\t */\n\t\t\tresponsive\t\t: false\n\t\t},\n\t\t/**\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\n\t\t */\n\t\texpand_selected_onload : true,\n\t\t/**\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\n\t\t * @name $.jstree.defaults.core.worker\n\t\t */\n\t\tworker : true,\n\t\t/**\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\n\t\t * @name $.jstree.defaults.core.force_text\n\t\t */\n\t\tforce_text : false,\n\t\t/**\n\t\t * Should the node should be toggled if the text is double clicked . Defaults to `true`\n\t\t * @name $.jstree.defaults.core.dblclick_toggle\n\t\t */\n\t\tdblclick_toggle : true,\n\t\t/**\n\t\t * Should the loaded nodes be part of the state. Defaults to `false`\n\t\t * @name $.jstree.defaults.core.loaded_state\n\t\t */\n\t\tloaded_state : false,\n\t\t/**\n\t\t * Should the last active node be focused when the tree container is blurred and the focused again. This helps working with screen readers. Defaults to `true`\n\t\t * @name $.jstree.defaults.core.restore_focus\n\t\t */\n\t\trestore_focus : true,\n\t\t/**\n\t\t * Default keyboard shortcuts (an object where each key is the button name or combo - like 'enter', 'ctrl-space', 'p', etc and the value is the function to execute in the instance's scope)\n\t\t * @name $.jstree.defaults.core.keyboard\n\t\t */\n\t\tkeyboard : {\n\t\t\t'ctrl-space': function (e) {\n\t\t\t\t// aria defines space only with Ctrl\n\t\t\t\te.type = \"click\";\n\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t},\n\t\t\t'enter': function (e) {\n\t\t\t\t// enter\n\t\t\t\te.type = \"click\";\n\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t},\n\t\t\t'left': function (e) {\n\t\t\t\t// left\n\t\t\t\te.preventDefault();\n\t\t\t\tif(this.is_open(e.currentTarget)) {\n\t\t\t\t\tthis.close_node(e.currentTarget);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar o = this.get_parent(e.currentTarget);\n\t\t\t\t\tif(o && o.id !== $.jstree.root) { this.get_node(o, true).children('.jstree-anchor').focus(); }\n\t\t\t\t}\n\t\t\t},\n\t\t\t'up': function (e) {\n\t\t\t\t// up\n\t\t\t\te.preventDefault();\n\t\t\t\tvar o = this.get_prev_dom(e.currentTarget);\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t},\n\t\t\t'right': function (e) {\n\t\t\t\t// right\n\t\t\t\te.preventDefault();\n\t\t\t\tif(this.is_closed(e.currentTarget)) {\n\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\n\t\t\t\t}\n\t\t\t\telse if (this.is_open(e.currentTarget)) {\n\t\t\t\t\tvar o = this.get_node(e.currentTarget, true).children('.jstree-children')[0];\n\t\t\t\t\tif(o) { $(this._firstChild(o)).children('.jstree-anchor').focus(); }\n\t\t\t\t}\n\t\t\t},\n\t\t\t'down': function (e) {\n\t\t\t\t// down\n\t\t\t\te.preventDefault();\n\t\t\t\tvar o = this.get_next_dom(e.currentTarget);\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t},\n\t\t\t'*': function (e) {\n\t\t\t\t// aria defines * on numpad as open_all - not very common\n\t\t\t\tthis.open_all();\n\t\t\t},\n\t\t\t'home': function (e) {\n\t\t\t\t// home\n\t\t\t\te.preventDefault();\n\t\t\t\tvar o = this._firstChild(this.get_container_ul()[0]);\n\t\t\t\tif(o) { $(o).children('.jstree-anchor').filter(':visible').focus(); }\n\t\t\t},\n\t\t\t'end': function (e) {\n\t\t\t\t// end\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.element.find('.jstree-anchor').filter(':visible').last().focus();\n\t\t\t},\n\t\t\t'f2': function (e) {\n\t\t\t\t// f2 - safe to include - if check_callback is false it will fail\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.edit(e.currentTarget);\n\t\t\t}\n\t\t}\n\t};\n\n    var Tree = sbswt.Tree = sbswt.WidgetBase.inherit({\n        klassName: \"Tree\",\n\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name plugin(deco [, opts])\n\t\t * @param  {String} deco the plugin to decorate with\n\t\t * @param  {Object} opts options for the plugin\n\t\t * @return {jsTree}\n\t\t */\n\t\tplugin : function (deco, opts) {\n\t\t\tvar Child = $.jstree.plugins[deco];\n\t\t\tif(Child) {\n\t\t\t\tthis._data[deco] = {};\n\t\t\t\tChild.prototype = this;\n\t\t\t\treturn new Child(opts, this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t * initialize the instance. Used internally.\n\t\t * @private\n\t\t * @name init(el, optons)\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\n\t\t * @param {Object} options options for this instance\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\n\t\t */\n\t\tinit : function (el, options) {\n\t\t\tthis._id = ++instance_counter;\n\t\t\tthis._cnt = 0;\n\t\t\tthis._wrk = null;\n\t\t\tthis._data = {\n\t\t\t\tcore : {\n\t\t\t\t\tthemes : {\n\t\t\t\t\t\tname : false,\n\t\t\t\t\t\tdots : false,\n\t\t\t\t\t\ticons : false,\n\t\t\t\t\t\tellipsis : false\n\t\t\t\t\t},\n\t\t\t\t\tselected : [],\n\t\t\t\t\tlast_error : {},\n\t\t\t\t\tworking : false,\n\t\t\t\t\tworker_queue : [],\n\t\t\t\t\tfocused : null\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar  opt = options,\n\t\t\t\ttmp = this;\n\t\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\n\t\t\tif(opt && opt.plugins) {\n\t\t\t\toptions.plugins = opt.plugins;\n\t\t\t}\n\t\t\t$.each(options.plugins, function (i, k) {\n\t\t\t\tif(i !== 'core') {\n\t\t\t\t\ttmp = tmp.plugin(k, options[k]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(el).data('jstree', tmp);\n\n\t\t\ttmp._model = {\n\t\t\t\tdata : {},\n\t\t\t\tchanged : [],\n\t\t\t\tforce_full_redraw : false,\n\t\t\t\tredraw_timeout : false,\n\t\t\t\tdefault_state : {\n\t\t\t\t\tloaded : true,\n\t\t\t\t\topened : false,\n\t\t\t\t\tselected : false,\n\t\t\t\t\tdisabled : false\n\t\t\t\t}\n\t\t\t};\n\t\t\ttmp._model.data[$.jstree.root] = {\n\t\t\t\tid : $.jstree.root,\n\t\t\t\tparent : null,\n\t\t\t\tparents : [],\n\t\t\t\tchildren : [],\n\t\t\t\tchildren_d : [],\n\t\t\t\tstate : { loaded : false }\n\t\t\t};\n\n\t\t\ttmp.element = $(el).addClass('jstree jstree-' + tmp._id);\n\t\t\ttmp.settings = options;\n\n\t\t\ttmp._data.core.ready = false;\n\t\t\ttmp._data.core.loaded = false;\n\t\t\ttmp._data.core.rtl = (tmp.element.css(\"direction\") === \"rtl\");\n\t\t\ttmp.element[tmp._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\n\t\t\ttmp.element.attr('role','tree');\n\t\t\tif(tmp.settings.core.multiple) {\n\t\t\t\ttmp.element.attr('aria-multiselectable', true);\n\t\t\t}\n\t\t\tif(!tmp.element.attr('tabindex')) {\n\t\t\t\ttmp.element.attr('tabindex','0');\n\t\t\t}\n\n\t\t\ttmp.bind();\n\t\t\t/**\n\t\t\t * triggered after all events are bound\n\t\t\t * @event\n\t\t\t * @name init.jstree\n\t\t\t */\n\t\t\ttmp.trigger(\"init\");\n\n\t\t\ttmp._data.core.original_container_html = tmp.element.find(\" > ul > li\").clone(true);\n\t\t\ttmp._data.core.original_container_html\n\t\t\t\t.find(\"li\").addBack()\n\t\t\t\t.contents().filter(function() {\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\n\t\t\t\t})\n\t\t\t\t.remove();\n\t\t\ttmp.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children' role='group'><\"+\"li id='j\"+tmp._id+\"_loading' class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='tree-item'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + tmp.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\ttmp.element.attr('aria-activedescendant','j' + tmp._id + '_loading');\n\t\t\ttmp._data.core.li_height = tmp.get_container_ul().children(\"li\").first().outerHeight() || 24;\n\t\t\ttmp._data.core.node = tmp._create_prototype_node();\n\t\t\t/**\n\t\t\t * triggered after the loading text is shown and before loading starts\n\t\t\t * @event\n\t\t\t * @name loading.jstree\n\t\t\t */\n\t\t\ttmp.trigger(\"loading\");\n\t\t\ttmp.load_node($.jstree.root);\n\t\t\treturn tmp;\n\t\t},\n\n\t\t/**\n\t\t * destroy an instance\n\t\t * @name destroy()\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\n\t\t */\n\t\tdestroy : function (keep_html) {\n\t\t\t/**\n\t\t\t * triggered before the tree is destroyed\n\t\t\t * @event\n\t\t\t * @name destroy.jstree\n\t\t\t */\n\t\t\ttmp.trigger(\"destroy\");\n\t\t\tif(this._wrk) {\n\t\t\t\ttry {\n\t\t\t\t\twindow.URL.revokeObjectURL(this._wrk);\n\t\t\t\t\tthis._wrk = null;\n\t\t\t\t}\n\t\t\t\tcatch (ignore) { }\n\t\t\t}\n\t\t\tif(!keep_html) { this.element.empty(); }\n\t\t\tthis.teardown();\n\t\t},\n\t\t/**\n\t\t * Create a prototype node\n\t\t * @name _create_prototype_node()\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_create_prototype_node : function () {\n\t\t\tvar _node = document.createElement('LI'), _temp1, _temp2;\n\t\t\t_node.setAttribute('role', 'treeitem');\n\t\t\t_temp1 = document.createElement('I');\n\t\t\t_temp1.className = 'jstree-icon jstree-ocl';\n\t\t\t_temp1.setAttribute('role', 'presentation');\n\t\t\t_node.appendChild(_temp1);\n\t\t\t_temp1 = document.createElement('A');\n\t\t\t_temp1.className = 'jstree-anchor';\n\t\t\t_temp1.setAttribute('href','#');\n\t\t\t_temp1.setAttribute('tabindex','-1');\n\t\t\t_temp2 = document.createElement('I');\n\t\t\t_temp2.className = 'jstree-icon jstree-themeicon';\n\t\t\t_temp2.setAttribute('role', 'presentation');\n\t\t\t_temp1.appendChild(_temp2);\n\t\t\t_node.appendChild(_temp1);\n\t\t\t_temp1 = _temp2 = null;\n\n\t\t\treturn _node;\n\t\t},\n\t\t_kbevent_to_func : function (e) {\n\t\t\tvar keys = {\n\t\t\t\t8: \"Backspace\", 9: \"Tab\", 13: \"Return\", 19: \"Pause\", 27: \"Esc\",\n\t\t\t\t32: \"Space\", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\", 36: \"Home\",\n\t\t\t\t37: \"Left\", 38: \"Up\", 39: \"Right\", 40: \"Down\", 44: \"Print\", 45: \"Insert\",\n\t\t\t\t46: \"Delete\", 96: \"Numpad0\", 97: \"Numpad1\", 98: \"Numpad2\", 99 : \"Numpad3\",\n\t\t\t\t100: \"Numpad4\", 101: \"Numpad5\", 102: \"Numpad6\", 103: \"Numpad7\",\n\t\t\t\t104: \"Numpad8\", 105: \"Numpad9\", '-13': \"NumpadEnter\", 112: \"F1\",\n\t\t\t\t113: \"F2\", 114: \"F3\", 115: \"F4\", 116: \"F5\", 117: \"F6\", 118: \"F7\",\n\t\t\t\t119: \"F8\", 120: \"F9\", 121: \"F10\", 122: \"F11\", 123: \"F12\", 144: \"Numlock\",\n\t\t\t\t145: \"Scrolllock\", 16: 'Shift', 17: 'Ctrl', 18: 'Alt',\n\t\t\t\t48: '0',  49: '1',  50: '2',  51: '3',  52: '4', 53:  '5',\n\t\t\t\t54: '6',  55: '7',  56: '8',  57: '9',  59: ';',  61: '=', 65:  'a',\n\t\t\t\t66: 'b',  67: 'c',  68: 'd',  69: 'e',  70: 'f',  71: 'g', 72:  'h',\n\t\t\t\t73: 'i',  74: 'j',  75: 'k',  76: 'l',  77: 'm',  78: 'n', 79:  'o',\n\t\t\t\t80: 'p',  81: 'q',  82: 'r',  83: 's',  84: 't',  85: 'u', 86:  'v',\n\t\t\t\t87: 'w',  88: 'x',  89: 'y',  90: 'z', 107: '+', 109: '-', 110: '.',\n\t\t\t\t186: ';', 187: '=', 188: ',', 189: '-', 190: '.', 191: '/', 192: '`',\n\t\t\t\t219: '[', 220: '\\\\',221: ']', 222: \"'\", 111: '/', 106: '*', 173: '-'\n\t\t\t};\n\t\t\tvar parts = [];\n\t\t\tif (e.ctrlKey) { parts.push('ctrl'); }\n\t\t\tif (e.altKey) { parts.push('alt'); }\n\t\t\tif (e.shiftKey) { parts.push('shift'); }\n\t\t\tparts.push(keys[e.which] || e.which);\n\t\t\tparts = parts.sort().join('-').toLowerCase();\n\n\t\t\tvar kb = this.settings.core.keyboard, i, tmp;\n\t\t\tfor (i in kb) {\n\t\t\t\tif (kb.hasOwnProperty(i)) {\n\t\t\t\t\ttmp = i;\n\t\t\t\t\tif (tmp !== '-' && tmp !== '+') {\n\t\t\t\t\t\ttmp = tmp.replace('--', '-MINUS').replace('+-', '-MINUS').replace('++', '-PLUS').replace('-+', '-PLUS');\n\t\t\t\t\t\ttmp = tmp.split(/-|\\+/).sort().join('-').replace('MINUS', '-').replace('PLUS', '+').toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tif (tmp === parts) {\n\t\t\t\t\t\treturn kb[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name teardown()\n\t\t */\n\t\tteardown : function () {\n\t\t\tthis.unbind();\n\t\t\tthis.element\n\t\t\t\t.removeClass('jstree')\n\t\t\t\t.removeData('jstree')\n\t\t\t\t.find(\"[class^='jstree']\")\n\t\t\t\t\t.addBack()\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\n\t\t\tthis.element = null;\n\t\t},\n\t\t/**\n\t\t * bind all events. Used internally.\n\t\t * @private\n\t\t * @name bind()\n\t\t */\n\t\tbind : function () {\n\t\t\tvar word = '',\n\t\t\t\ttout = null,\n\t\t\t\twas_click = 0;\n\t\t\tthis.element\n\t\t\t\t.on(\"dblclick.jstree\", function (e) {\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\n\t\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif(window.getSelection) {\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\t\t\t\t\tsel.collapse();\n\t\t\t\t\t\t\t\t} catch (ignore) { }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on(\"mousedown.jstree\", $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target === this.element[0]) {\n\t\t\t\t\t\t\te.preventDefault(); // prevent losing focus when clicking scroll arrows (FF, Chrome)\n\t\t\t\t\t\t\twas_click = +(new Date()); // ie does not allow to prevent losing focus\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mousedown.jstree\", \".jstree-ocl\", function (e) {\n\t\t\t\t\t\te.preventDefault(); // prevent any node inside from losing focus when clicking the open/close icon\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.toggle_node(e.target);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\n\t\t\t\t\t\tif(this.settings.core.dblclick_toggle) {\n\t\t\t\t\t\t\tthis.toggle_node(e.target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tif(e.currentTarget !== document.activeElement) { $(e.currentTarget).focus(); }\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\n\t\t\t\t\t\tif(this._data.core.rtl) {\n\t\t\t\t\t\t\tif(e.which === 37) { e.which = 39; }\n\t\t\t\t\t\t\telse if(e.which === 39) { e.which = 37; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar f = this._kbevent_to_func(e);\n\t\t\t\t\t\tif (f) {\n\t\t\t\t\t\t\tvar r = f.call(this, e);\n\t\t\t\t\t\t\tif (r === false || r === true) {\n\t\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif(data.status) {\n\t\t\t\t\t\t\tif(data.node.id === $.jstree.root && !this._data.core.loaded) {\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\n\t\t\t\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\n\t\t\t\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name loaded.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!this._data.core.ready) {\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function() {\n\t\t\t\t\t\t\t\t\tif(this.element && !this.get_container_ul().find('.jstree-loading').length) {\n\t\t\t\t\t\t\t\t\t\tthis._data.core.ready = true;\n\t\t\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\n\t\t\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\n\t\t\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t\t\t * @name ready.jstree\n\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\tthis.trigger(\"ready\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, this), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t// quick searching when the tree is focused\n\t\t\t\t.on('keypress.jstree', $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\n\t\t\t\t\t\tif(tout) { clearTimeout(tout); }\n\t\t\t\t\t\ttout = setTimeout(function () {\n\t\t\t\t\t\t\tword = '';\n\t\t\t\t\t\t}, 500);\n\n\t\t\t\t\t\tvar chr = String.fromCharCode(e.which).toLowerCase(),\n\t\t\t\t\t\t\tcol = this.element.find('.jstree-anchor').filter(':visible'),\n\t\t\t\t\t\t\tind = col.index(document.activeElement) || 0,\n\t\t\t\t\t\t\tend = false;\n\t\t\t\t\t\tword += chr;\n\n\t\t\t\t\t\t// match for whole word from current node down (including the current node)\n\t\t\t\t\t\tif(word.length > 1) {\n\t\t\t\t\t\t\tcol.slice(ind).each($.proxy(function (i, v) {\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\n\t\t\t\t\t\t\t\t\t$(v).focus();\n\t\t\t\t\t\t\t\t\tend = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\tif(end) { return; }\n\n\t\t\t\t\t\t\t// match for whole word from the beginning of the tree\n\t\t\t\t\t\t\tcol.slice(0, ind).each($.proxy(function (i, v) {\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\n\t\t\t\t\t\t\t\t\t$(v).focus();\n\t\t\t\t\t\t\t\t\tend = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\tif(end) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// list nodes that start with that letter (only if word consists of a single char)\n\t\t\t\t\t\tif(new RegExp('^' + chr.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '+$').test(word)) {\n\t\t\t\t\t\t\t// search for the next node starting with that letter\n\t\t\t\t\t\t\tcol.slice(ind + 1).each($.proxy(function (i, v) {\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\n\t\t\t\t\t\t\t\t\t$(v).focus();\n\t\t\t\t\t\t\t\t\tend = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\tif(end) { return; }\n\n\t\t\t\t\t\t\t// search from the beginning\n\t\t\t\t\t\t\tcol.slice(0, ind + 1).each($.proxy(function (i, v) {\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\n\t\t\t\t\t\t\t\t\t$(v).focus();\n\t\t\t\t\t\t\t\t\tend = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\tif(end) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t// THEME RELATED\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tvar s = this.settings.core.themes;\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\n\t\t\t\t\t\tthis._data.core.themes.ellipsis\t\t= s.ellipsis;\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.ellipsis ? \"show_ellipsis\" : \"hide_ellipsis\" ]();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis._data.core.focused = null;\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\n\t\t\t\t\t\tthis.element.attr('tabindex', '0');\n\t\t\t\t\t}, this))\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tvar tmp = this.get_node(e.currentTarget);\n\t\t\t\t\t\tif(tmp && tmp.id) {\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\n\t\t\t\t\t\tthis.element.attr('tabindex', '-1');\n\t\t\t\t\t}, this))\n\t\t\t\t.on('focus.jstree', $.proxy(function () {\n\t\t\t\t\t\tif(+(new Date()) - was_click > 500 && !this._data.core.focused && this.settings.core.restore_focus) {\n\t\t\t\t\t\t\twas_click = 0;\n\t\t\t\t\t\t\tvar act = this.get_node(this.element.attr('aria-activedescendant'), true);\n\t\t\t\t\t\t\tif(act) {\n\t\t\t\t\t\t\t\tact.find('> .jstree-anchor').focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name unbind()\n\t\t */\n\t\tunbind : function () {\n\t\t\tthis.element.off('.jstree');\n\t\t\t$(document).off('.jstree-' + this._id);\n\t\t},\n\t\t/**\n\t\t * trigger an event. Used internally.\n\t\t * @private\n\t\t * @name trigger(ev [, data])\n\t\t * @param  {String} ev the name of the event to trigger\n\t\t * @param  {Object} data additional data to pass with the event\n\t\t */\n\t\ttrigger : function (ev, data) {\n\t\t\tif(!data) {\n\t\t\t\tdata = {};\n\t\t\t}\n\t\t\tdata.instance = this;\n\t\t\tthis.element.trigger(ev.replace('.jstree','') + '.jstree', data);\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended instance container\n\t\t * @name get_container()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container : function () {\n\t\t\treturn this.element;\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\n\t\t * @private\n\t\t * @name get_container_ul()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container_ul : function () {\n\t\t\treturn this.element.children(\".jstree-children\").first();\n\t\t},\n\t\t/**\n\t\t * gets string replacements (localization). Used internally.\n\t\t * @private\n\t\t * @name get_string(key)\n\t\t * @param  {String} key\n\t\t * @return {String}\n\t\t */\n\t\tget_string : function (key) {\n\t\t\tvar a = this.settings.core.strings;\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\n\t\t\tif(a && a[key]) { return a[key]; }\n\t\t\treturn key;\n\t\t},\n\t\t/**\n\t\t * gets the first child of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _firstChild(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_firstChild : function (dom) {\n\t\t\tdom = dom ? dom.firstChild : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the next sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _nextSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_nextSibling : function (dom) {\n\t\t\tdom = dom ? dom.nextSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the previous sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _previousSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_previousSibling : function (dom) {\n\t\t\tdom = dom ? dom.previousSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.previousSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\n\t\t * @name get_node(obj [, as_dom])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} as_dom\n\t\t * @return {Object|jQuery}\n\t\t */\n\t\tget_node : function (obj, as_dom) {\n\t\t\tif(obj && obj.id) {\n\t\t\t\tobj = obj.id;\n\t\t\t}\n\t\t\tvar dom;\n\t\t\ttry {\n\t\t\t\tif(this._model.data[obj]) {\n\t\t\t\t\tobj = this._model.data[obj];\n\t\t\t\t}\n\t\t\t\telse if(typeof obj === \"string\" && this._model.data[obj.replace(/^#/, '')]) {\n\t\t\t\t\tobj = this._model.data[obj.replace(/^#/, '')];\n\t\t\t\t}\n\t\t\t\telse if(typeof obj === \"string\" && (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\n\t\t\t\t}\n\t\t\t\telse if((dom = $(obj, this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\n\t\t\t\t}\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\n\t\t\t\t\tobj = this._model.data[$.jstree.root];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif(as_dom) {\n\t\t\t\t\tobj = obj.id === $.jstree.root ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t} catch (ex) { return false; }\n\t\t},\n\t\t/**\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\n\t\t * @name get_path(obj [, glue, ids])\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\n\t\t * @return {mixed}\n\t\t */\n\t\tget_path : function (obj, glue, ids) {\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root || !obj.parents) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = [];\n\t\t\tp.push(ids ? obj.id : obj.text);\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\n\t\t\t}\n\t\t\tp = p.reverse().slice(1);\n\t\t\treturn glue ? p.join(glue) : p;\n\t\t},\n\t\t/**\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_next_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_next_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\n\t\t\t\t\ttmp = this._nextSibling(tmp);\n\t\t\t\t}\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = obj[0];\n\t\t\t\tdo {\n\t\t\t\t\ttmp = this._nextSibling(tmp);\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\n\t\t\t\t\ttmp = this._nextSibling(tmp);\n\t\t\t\t}\n\t\t\t\tif(tmp !== null) {\n\t\t\t\t\treturn $(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = obj[0];\n\t\t\tdo {\n\t\t\t\ttmp = this._nextSibling(tmp);\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\n\t\t\tif(tmp !== null) {\n\t\t\t\treturn $(tmp);\n\t\t\t}\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").nextAll(\".jstree-node:visible\").first();\n\t\t},\n\t\t/**\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_prev_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_prev_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\n\t\t\t\t\ttmp = this._previousSibling(tmp);\n\t\t\t\t}\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = obj[0];\n\t\t\t\tdo {\n\t\t\t\t\ttmp = this._previousSibling(tmp);\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\ttmp = obj[0];\n\t\t\tdo {\n\t\t\t\ttmp = this._previousSibling(tmp);\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\n\t\t\tif(tmp !== null) {\n\t\t\t\tobj = $(tmp);\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\n\t\t\t\t\tobj = obj.children(\".jstree-children\").first().children(\".jstree-node:visible:last\");\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\ttmp = obj[0].parentNode.parentNode;\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\n\t\t},\n\t\t/**\n\t\t * get the parent ID of a node\n\t\t * @name get_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.parent;\n\t\t},\n\t\t/**\n\t\t * get a jQuery collection of all the children of a node (node must be rendered), returns false on error\n\t\t * @name get_children_dom(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_children_dom : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\n\t\t},\n\t\t/**\n\t\t * checks if a node has children\n\t\t * @name is_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\n\t\t},\n\t\t/**\n\t\t * checks if a node is loaded (its children are available)\n\t\t * @name is_loaded(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loaded : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.loaded;\n\t\t},\n\t\t/**\n\t\t * check if a node is currently loading (fetching children)\n\t\t * @name is_loading(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loading : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.loading;\n\t\t},\n\t\t/**\n\t\t * check if a node is opened\n\t\t * @name is_open(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_open : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node is in a closed state\n\t\t * @name is_closed(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_closed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node has no children\n\t\t * @name is_leaf(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_leaf : function (obj) {\n\t\t\treturn !this.is_parent(obj);\n\t\t},\n\t\t/**\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\n\t\t * @name load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\n\t\t * @return {Boolean}\n\t\t * @trigger load_node.jstree\n\t\t */\n\t\tload_node : function (obj, callback) {\n\t\t\tvar k, l, i, j, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) {\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\n\t\t\tif(obj.state.loaded) {\n\t\t\t\tobj.state.loaded = false;\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\n\t\t\t\t\t\tc = true;\n\t\t\t\t\t}\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\n\t\t\t\t}\n\t\t\t\tif (c) {\n\t\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tobj.children = [];\n\t\t\t\tobj.children_d = [];\n\t\t\t\tif(c) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.failed = false;\n\t\t\tobj.state.loading = true;\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\").attr('aria-busy',true);\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\n\t\t\t\tobj = this._model.data[obj.id];\n\t\t\t\tobj.state.loading = false;\n\t\t\t\tobj.state.loaded = status;\n\t\t\t\tobj.state.failed = !obj.state.loaded;\n\t\t\t\tvar dom = this.get_node(obj, true), i = 0, j = 0, m = this._model.data, has_children = false;\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tif(m[obj.children[i]] && !m[obj.children[i]].state.hidden) {\n\t\t\t\t\t\thas_children = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(obj.state.loaded && dom && dom.length) {\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open jstree-leaf');\n\t\t\t\t\tif (!has_children) {\n\t\t\t\t\t\tdom.addClass('jstree-leaf');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (obj.id !== '#') {\n\t\t\t\t\t\t\tdom.addClass(obj.state.opened ? 'jstree-open' : 'jstree-closed');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\n\t\t\t\t/**\n\t\t\t\t * triggered after a node is loaded\n\t\t\t\t * @event\n\t\t\t\t * @name load_node.jstree\n\t\t\t\t * @param {Object} node the node that was loading\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\n\t\t\t\t */\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, status);\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\n\t\t * @private\n\t\t * @name _load_nodes(nodes [, callback])\n\t\t * @param  {array} nodes\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\n\t\t */\n\t\t_load_nodes : function (nodes, callback, is_callback, force_reload) {\n\t\t\tvar r = true,\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\n\t\t\t\tm = this._model.data, i, j, tmp = [];\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\tif(m[nodes[i]] && ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || (!is_callback && force_reload) )) {\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\n\t\t\t\t\t}\n\t\t\t\t\tr = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(r) {\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\t\tif(m[nodes[i]] && m[nodes[i]].state.loaded) {\n\t\t\t\t\t\ttmp.push(nodes[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(callback && !callback.done) {\n\t\t\t\t\tcallback.call(this, tmp);\n\t\t\t\t\tcallback.done = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * loads all unloaded nodes\n\t\t * @name load_all([obj, callback])\n\t\t * @param {mixed} obj the node to load recursively, omit to load all nodes in the tree\n\t\t * @param {function} callback a function to be executed once loading all the nodes is complete,\n\t\t * @trigger load_all.jstree\n\t\t */\n\t\tload_all : function (obj, callback) {\n\t\t\tif(!obj) { obj = $.jstree.root; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar to_load = [],\n\t\t\t\tm = this._model.data,\n\t\t\t\tc = m[obj.id].children_d,\n\t\t\t\ti, j;\n\t\t\tif(obj.state && !obj.state.loaded) {\n\t\t\t\tto_load.push(obj.id);\n\t\t\t}\n\t\t\tfor(i = 0, j = c.length; i < j; i++) {\n\t\t\t\tif(m[c[i]] && m[c[i]].state && !m[c[i]].state.loaded) {\n\t\t\t\t\tto_load.push(c[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(to_load.length) {\n\t\t\t\tthis._load_nodes(to_load, function () {\n\t\t\t\t\tthis.load_all(obj, callback);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t/**\n\t\t\t\t * triggered after a load_all call completes\n\t\t\t\t * @event\n\t\t\t\t * @name load_all.jstree\n\t\t\t\t * @param {Object} node the recursively loaded node\n\t\t\t\t */\n\t\t\t\tif(callback) { callback.call(this, obj); }\n\t\t\t\tthis.trigger('load_all', { \"node\" : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * handles the actual loading of a node. Used only internally.\n\t\t * @private\n\t\t * @name _load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\n\t\t * @return {Boolean}\n\t\t */\n\t\t_load_node : function (obj, callback) {\n\t\t\tvar s = this.settings.core.data, t;\n\t\t\tvar notTextOrCommentNode = function notTextOrCommentNode () {\n\t\t\t\treturn this.nodeType !== 3 && this.nodeType !== 8;\n\t\t\t};\n\t\t\t// use original HTML\n\t\t\tif(!s) {\n\t\t\t\tif(obj.id === $.jstree.root) {\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t// return callback.call(this, obj.id === $.jstree.root ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\n\t\t\t}\n\t\t\tif($.isFunction(s)) {\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\n\t\t\t\t\tif(d === false) {\n\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $($.parseHTML(d)).filter(notTextOrCommentNode) : d, function (status) {\n\t\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(typeof s === 'object') {\n\t\t\t\tif(s.url) {\n\t\t\t\t\ts = $.extend(true, {}, s);\n\t\t\t\t\tif($.isFunction(s.url)) {\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\tif($.isFunction(s.data)) {\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\treturn $.ajax(s)\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\n\t\t\t\t\t\t\t\tif((type && type.indexOf('json') !== -1) || typeof d === \"object\") {\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif((type && type.indexOf('html') !== -1) || typeof d === \"string\") {\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(d)).filter(notTextOrCommentNode), function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.fail($.proxy(function (f) {\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\n\t\t\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\tif ($.isArray(s)) {\n\t\t\t\t\tt = $.extend(true, [], s);\n\t\t\t\t} else if ($.isPlainObject(s)) {\n\t\t\t\t\tt = $.extend(true, {}, s);\n\t\t\t\t} else {\n\t\t\t\t\tt = s;\n\t\t\t\t}\n\t\t\t\tif(obj.id === $.jstree.root) {\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_json_data(obj, t) : false) );\n\t\t\t}\n\t\t\tif(typeof s === 'string') {\n\t\t\t\tif(obj.id === $.jstree.root) {\n\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(s)).filter(notTextOrCommentNode), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_html_data(obj, $(s)) : false) );\n\t\t\t}\n\t\t\treturn callback.call(this, false);\n\t\t},\n\t\t/**\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\n\t\t * @private\n\t\t * @name _node_changed(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t */\n\t\t_node_changed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n      if (obj && $.inArray(obj.id, this._model.changed) === -1) {\n\t\t\t\tthis._model.changed.push(obj.id);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * appends HTML content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_html_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the HTML string to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_html_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\n\t\t\t\tpar = dom.id,\n\t\t\t\tchd = [],\n\t\t\t\tdpc = [],\n\t\t\t\tm = this._model.data,\n\t\t\t\tp = m[par],\n\t\t\t\ts = this._data.core.selected.length,\n\t\t\t\ttmp, i, j;\n\t\t\tdat.each($.proxy(function (i, v) {\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\n\t\t\t\tif(tmp) {\n\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tp.children = chd;\n\t\t\tp.children_d = dpc;\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when new data is inserted to the tree model\n\t\t\t * @event\n\t\t\t * @name model.jstree\n\t\t\t * @param {Array} nodes an array of node IDs\n\t\t\t * @param {String} parent the parent ID of the nodes\n\t\t\t */\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\n\t\t\tif(par !== $.jstree.root) {\n\t\t\t\tthis._node_changed(par);\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\tthis.redraw(true);\n\t\t\t}\n\t\t\tif(this._data.core.selected.length !== s) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t}\n\t\t\tcb.call(this, true);\n\t\t},\n\t\t/**\n\t\t * appends JSON content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_json_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the JSON object to parse and append\n\t\t * @param  {Boolean} force_processing internal param - do not set\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_json_data : function (dom, data, cb, force_processing) {\n\t\t\tif(this.element === null) { return; }\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\t// *%$@!!!\n\t\t\tif(data.d) {\n\t\t\t\tdata = data.d;\n\t\t\t\tif(typeof data === \"string\") {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!$.isArray(data)) { data = [data]; }\n\t\t\tvar w = null,\n\t\t\t\targs = {\n\t\t\t\t\t'df'\t: this._model.default_state,\n\t\t\t\t\t'dat'\t: data,\n\t\t\t\t\t'par'\t: dom.id,\n\t\t\t\t\t'm'\t\t: this._model.data,\n\t\t\t\t\t't_id'\t: this._id,\n\t\t\t\t\t't_cnt'\t: this._cnt,\n\t\t\t\t\t'sel'\t: this._data.core.selected\n\t\t\t\t},\n\t\t\t\tfunc = function (data, undefined) {\n\t\t\t\t\tif(data.data) { data = data.data; }\n\t\t\t\t\tvar dat = data.dat,\n\t\t\t\t\t\tpar = data.par,\n\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\tdpc = [],\n\t\t\t\t\t\tadd = [],\n\t\t\t\t\t\tdf = data.df,\n\t\t\t\t\t\tt_id = data.t_id,\n\t\t\t\t\t\tt_cnt = data.t_cnt,\n\t\t\t\t\t\tm = data.m,\n\t\t\t\t\t\tp = m[par],\n\t\t\t\t\t\tsel = data.sel,\n\t\t\t\t\t\ttmp, i, j, rslt,\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\n\t\t\t\t\t\t\t\ti, j, c, e,\n\t\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\n\t\t\t\t\t\t\t\ttmp.icon = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\tm[tmp.id].original = d;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\n\t\t\t\t\t\t\t} while(m[tid]);\n\n\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\tchildren\t: [],\n\t\t\t\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\n\t\t\t\t\t\t\t\ttmp.icon = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\n\t\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\ttmp.original = d;\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\n\t\t\t\t\t\t// 1) convert to object (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tif(!dat[i].children) {\n\t\t\t\t\t\t\t\tdat[i].children = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!dat[i].state) {\n\t\t\t\t\t\t\t\tdat[i].state = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 2) populate children (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tif (!m[dat[i].parent.toString()]) {\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'parse', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Node with invalid parent', 'data' : JSON.stringify({ 'id' : dat[i].id.toString(), 'parent' : dat[i].parent.toString() }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\n\t\t\t\t\t\t\t// populate parent.children_d\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\n\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\n\t\t\t\t\t\t\tif(tmp) {\n\t\t\t\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp.children = chd;\n\t\t\t\t\t\tp.children_d = dpc;\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof window === 'undefined' || typeof window.document === 'undefined') {\n\t\t\t\t\t\tpostMessage(rslt);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn rslt;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trslt = function (rslt, worker) {\n\t\t\t\t\tif(this.element === null) { return; }\n\t\t\t\t\tthis._cnt = rslt.cnt;\n\t\t\t\t\tvar i, m = this._model.data;\n\t\t\t\t\tfor (i in m) {\n\t\t\t\t\t\tif (m.hasOwnProperty(i) && m[i].state && m[i].state.loading && rslt.mod[i]) {\n\t\t\t\t\t\t\trslt.mod[i].state.loading = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\n\n\t\t\t\t\tif(worker) {\n\t\t\t\t\t\tvar j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice();\n\t\t\t\t\t\tm = this._model.data;\n\t\t\t\t\t\t// if selection was changed while calculating in worker\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\n\n\t\t\t\t\tif(rslt.par !== $.jstree.root) {\n\t\t\t\t\t\tthis._node_changed(rslt.par);\n\t\t\t\t\t\tthis.redraw();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t\t\t}\n\t\t\t\t\tcb.call(this, true);\n\t\t\t\t};\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\n\t\t\t\ttry {\n\t\t\t\t\tif(this._wrk === null) {\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\n\t\t\t\t\t\t\tnew window.Blob(\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString()],\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif(!this._data.core.working || force_processing) {\n\t\t\t\t\t\tthis._data.core.working = true;\n\t\t\t\t\t\tw = new window.Worker(this._wrk);\n\t\t\t\t\t\tw.onmessage = $.proxy(function (e) {\n\t\t\t\t\t\t\trslt.call(this, e.data, true);\n\t\t\t\t\t\t\ttry { w.terminate(); w = null; } catch(ignore) { }\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t\tif(!args.par) {\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tw.postMessage(args);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb, true]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\trslt.call(this, func(args), false);\n\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\trslt.call(this, func(args), false);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_html(d [, p, ps])\n\t\t * @param  {jQuery} d the jQuery object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_html : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = [].concat(ps); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar c, e, m = this._model.data,\n\t\t\t\tdata = {\n\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\ttext\t\t: false,\n\t\t\t\t\ticon\t\t: true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: [],\n\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t}, i, tmp, tid;\n\t\t\tfor(i in this._model.default_state) {\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = $.vakata.attributes(d, true);\n\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\tv = $.trim(v);\n\t\t\t\tif(!v.length) { return true; }\n\t\t\t\tdata.li_attr[i] = v;\n\t\t\t\tif(i === 'id') {\n\t\t\t\t\tdata.id = v.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t\ttmp = d.children('a').first();\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\n\t\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\t\tv = $.trim(v);\n\t\t\t\t\tif(v.length) {\n\t\t\t\t\t\tdata.a_attr[i] = v;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\ttmp = d.children(\"a\").first().length ? d.children(\"a\").first().clone() : d.clone();\n\t\t\ttmp.children(\"ins, i, ul\").remove();\n\t\t\ttmp = tmp.html();\n\t\t\ttmp = $('<div />').html(tmp);\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\n\t\t\ttmp = d.data();\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\n\t\t\tif(data.data && data.data.jstree) {\n\t\t\t\tfor(i in data.data.jstree) {\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\n\t\t\tif(tmp.length) {\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\n\t\t\t}\n\t\t\tif(data.state.icon !== undefined) {\n\t\t\t\tdata.icon = data.state.icon;\n\t\t\t}\n\t\t\tif(data.icon === undefined || data.icon === null || data.icon === \"\") {\n\t\t\t\tdata.icon = true;\n\t\t\t}\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp.each($.proxy(function (i, v) {\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\n\t\t\t\t\te = this._model.data[c];\n\t\t\t\t\tdata.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(d.hasClass('jstree-closed')) {\n\t\t\t\t\tdata.state.loaded = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.li_attr['class']) {\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\n\t\t\t}\n\t\t\tif(data.a_attr['class']) {\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\n\t\t\t}\n\t\t\tm[data.id] = data;\n\t\t\tif(data.state.selected) {\n\t\t\t\tthis._data.core.selected.push(data.id);\n\t\t\t}\n\t\t\treturn data.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = d.id.toString(),\n\t\t\t\tm = this._model.data,\n\t\t\t\tdf = this._model.default_state,\n\t\t\t\ti, j, c, e,\n\t\t\t\ttmp = {\n\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\n\t\t\t\ttmp.icon = true;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tm[tmp.id] = tmp;\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\te = m[c];\n\t\t\t\ttmp.children_d.push(c);\n\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\tm[tmp.id].original = d;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\n\t\t\ttmp = {\n\t\t\t\tid\t\t\t: false,\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\tparent\t\t: p,\n\t\t\t\tparents\t\t: ps,\n\t\t\t\tchildren\t: [],\n\t\t\t\tchildren_d\t: [],\n\t\t\t\tdata\t\t: null,\n\t\t\t\tstate\t\t: { },\n\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\toriginal\t: false\n\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\n\t\t\t\ttmp.icon = true;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t}\n\t\t\tif(!tmp.id) {\n\t\t\t\ttmp.id = tid;\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\n\t\t\t\t\te = m[c];\n\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\ttmp.original = d;\n\t\t\tm[tmp.id] = tmp;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn. Used internally.\n\t\t * @private\n\t\t * @name _redraw()\n\t\t * @trigger redraw.jstree\n\t\t */\n\t\t_redraw : function () {\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data[$.jstree.root].children.concat([]) : this._model.changed.concat([]),\n\t\t\t\tf = document.createElement('UL'), tmp, i, j, fe = this._data.core.focused;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\n\t\t\t\t\tf.appendChild(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this._model.force_full_redraw) {\n\t\t\t\tf.className = this.get_container_ul()[0].className;\n\t\t\t\tf.setAttribute('role','group');\n\t\t\t\tthis.element.empty().append(f);\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\n\t\t\t}\n\t\t\tif(fe !== null) {\n\t\t\t\ttmp = this.get_node(fe, true);\n\t\t\t\tif(tmp && tmp.length && tmp.children('.jstree-anchor')[0] !== document.activeElement) {\n\t\t\t\t\ttmp.children('.jstree-anchor').focus();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.focused = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = false;\n\t\t\tthis._model.changed = [];\n\t\t\t/**\n\t\t\t * triggered after nodes are redrawn\n\t\t\t * @event\n\t\t\t * @name redraw.jstree\n\t\t\t * @param {array} nodes the redrawn nodes\n\t\t\t */\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\n\t\t * @name redraw([full])\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\n\t\t */\n\t\tredraw : function (full) {\n\t\t\tif(full) {\n\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t}\n\t\t\t//if(this._model.redraw_timeout) {\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\n\t\t\t//}\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\n\t\t\tthis._redraw();\n\t\t},\n\t\t/**\n\t\t * redraws a single node's children. Used internally.\n\t\t * @private\n\t\t * @name draw_children(node)\n\t\t * @param {mixed} node the node whose children will be redrawn\n\t\t */\n\t\tdraw_children : function (node) {\n\t\t\tvar obj = this.get_node(node),\n\t\t\t\ti = false,\n\t\t\t\tj = false,\n\t\t\t\tk = false,\n\t\t\t\td = document;\n\t\t\tif(!obj) { return false; }\n\t\t\tif(obj.id === $.jstree.root) { return this.redraw(true); }\n\t\t\tnode = this.get_node(node, true);\n\t\t\tif(!node || !node.length) { return false; } // TODO: quick toggle\n\n\t\t\tnode.children('.jstree-children').remove();\n\t\t\tnode = node[0];\n\t\t\tif(obj.children.length && obj.state.loaded) {\n\t\t\t\tk = d.createElement('UL');\n\t\t\t\tk.setAttribute('role', 'group');\n\t\t\t\tk.className = 'jstree-children';\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], true, true));\n\t\t\t\t}\n\t\t\t\tnode.appendChild(k);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * redraws a single node. Used internally.\n\t\t * @private\n\t\t * @name redraw_node(node, deep, is_callback, force_render)\n\t\t * @param {mixed} node the node to redraw\n\t\t * @param {Boolean} deep should child nodes be redrawn too\n\t\t * @param {Boolean} is_callback is this a recursion call\n\t\t * @param {Boolean} force_render should children of closed parents be drawn anyway\n\t\t */\n\t\tredraw_node : function (node, deep, is_callback, force_render) {\n\t\t\tvar obj = this.get_node(node),\n\t\t\t\tpar = false,\n\t\t\t\tind = false,\n\t\t\t\told = false,\n\t\t\t\ti = false,\n\t\t\t\tj = false,\n\t\t\t\tk = false,\n\t\t\t\tc = '',\n\t\t\t\td = document,\n\t\t\t\tm = this._model.data,\n\t\t\t\tf = false,\n\t\t\t\ts = false,\n\t\t\t\ttmp = null,\n\t\t\t\tt = 0,\n\t\t\t\tl = 0,\n\t\t\t\thas_children = false,\n\t\t\t\tlast_sibling = false;\n\t\t\tif(!obj) { return false; }\n\t\t\tif(obj.id === $.jstree.root) {  return this.redraw(true); }\n\t\t\tdeep = deep || obj.children.length === 0;\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\n\t\t\tif(!node) {\n\t\t\t\tdeep = true;\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = obj.parent !== $.jstree.root ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m[$.jstree.root].children : m[obj.parent].children);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode = $(node);\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = node.parent().parent()[0];\n\t\t\t\t\tif(par === this.element[0]) {\n\t\t\t\t\t\tpar = null;\n\t\t\t\t\t}\n\t\t\t\t\tind = node.index();\n\t\t\t\t}\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\n\t\t\t\t\tdeep = true;\n\t\t\t\t}\n\t\t\t\tif(!deep) {\n\t\t\t\t\told = node.children('.jstree-children')[0];\n\t\t\t\t}\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\n\t\t\t\tnode.remove();\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\t//node = node[0];\n\t\t\t}\n\t\t\tnode = this._data.core.node.cloneNode(true);\n\t\t\t// node is DOM, deep is boolean\n\n\t\t\tc = 'jstree-node ';\n\t\t\tfor(i in obj.li_attr) {\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\tif(i === 'id') { continue; }\n\t\t\t\t\tif(i !== 'class') {\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += obj.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!obj.a_attr.id) {\n\t\t\t\tobj.a_attr.id = obj.id + '_anchor';\n\t\t\t}\n\t\t\tnode.setAttribute('aria-selected', !!obj.state.selected);\n\t\t\tnode.setAttribute('aria-level', obj.parents.length);\n\t\t\tnode.setAttribute('aria-labelledby', obj.a_attr.id);\n\t\t\tif(obj.state.disabled) {\n\t\t\t\tnode.setAttribute('aria-disabled', true);\n\t\t\t}\n\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\tif(!m[obj.children[i]].state.hidden) {\n\t\t\t\t\thas_children = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(obj.parent !== null && m[obj.parent] && !obj.state.hidden) {\n\t\t\t\ti = $.inArray(obj.id, m[obj.parent].children);\n\t\t\t\tlast_sibling = obj.id;\n\t\t\t\tif(i !== -1) {\n\t\t\t\t\ti++;\n\t\t\t\t\tfor(j = m[obj.parent].children.length; i < j; i++) {\n\t\t\t\t\t\tif(!m[m[obj.parent].children[i]].state.hidden) {\n\t\t\t\t\t\t\tlast_sibling = m[obj.parent].children[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(last_sibling !== obj.id) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(obj.state.hidden) {\n\t\t\t\tc += ' jstree-hidden';\n\t\t\t}\n\t\t\tif (obj.state.loading) {\n\t\t\t\tc += ' jstree-loading';\n\t\t\t}\n\t\t\tif(obj.state.loaded && !has_children) {\n\t\t\t\tc += ' jstree-leaf';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\n\t\t\t}\n\t\t\tif(last_sibling === obj.id) {\n\t\t\t\tc += ' jstree-last';\n\t\t\t}\n\t\t\tnode.id = obj.id;\n\t\t\tnode.className = c;\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\n\t\t\tfor(j in obj.a_attr) {\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\n\t\t\t\t\tif(j !== 'class') {\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c.length) {\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\n\t\t\t}\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\n\t\t\t\tif(obj.icon === false) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\n\t\t\t\t}\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url(\"'+obj.icon+'\")';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(this.settings.core.force_text) {\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\n\t\t\t}\n\n\n\t\t\tif(deep && obj.children.length && (obj.state.opened || force_render) && obj.state.loaded) {\n\t\t\t\tk = d.createElement('UL');\n\t\t\t\tk.setAttribute('role', 'group');\n\t\t\t\tk.className = 'jstree-children';\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\n\t\t\t\t}\n\t\t\t\tnode.appendChild(k);\n\t\t\t}\n\t\t\tif(old) {\n\t\t\t\tnode.appendChild(old);\n\t\t\t}\n\t\t\tif(!is_callback) {\n\t\t\t\t// append back using par / ind\n\t\t\t\tif(!par) {\n\t\t\t\t\tpar = this.element[0];\n\t\t\t\t}\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\n\t\t\t\t\t\ttmp = par.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!tmp) {\n\t\t\t\t\ttmp = d.createElement('UL');\n\t\t\t\t\ttmp.setAttribute('role', 'group');\n\t\t\t\t\ttmp.className = 'jstree-children';\n\t\t\t\t\tpar.appendChild(tmp);\n\t\t\t\t}\n\t\t\t\tpar = tmp;\n\n\t\t\t\tif(ind < par.childNodes.length) {\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpar.appendChild(node);\n\t\t\t\t}\n\t\t\t\tif(f) {\n\t\t\t\t\tt = this.element[0].scrollTop;\n\t\t\t\t\tl = this.element[0].scrollLeft;\n\t\t\t\t\tnode.childNodes[1].focus();\n\t\t\t\t\tthis.element[0].scrollTop = t;\n\t\t\t\t\tthis.element[0].scrollLeft = l;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\n\t\t\t\tobj.state.opened = false;\n\t\t\t\tsetTimeout($.proxy(function () {\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\n\t\t\t\t}, this), 0);\n\t\t\t}\n\t\t\treturn node;\n\t\t},\n\t\t/**\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_node(obj [, callback, animation])\n\t\t * @param {mixed} obj the node to open\n\t\t * @param {Function} callback a function to execute once the node is opened\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\n\t\t */\n\t\topen_node : function (obj, callback, animation) {\n\t\t\tvar t1, t2, d, t;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tif(!this.is_closed(obj)) {\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, false);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!this.is_loaded(obj)) {\n\t\t\t\tif(this.is_loading(obj)) {\n\t\t\t\t\treturn setTimeout($.proxy(function () {\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\n\t\t\t\t\t}, this), 500);\n\t\t\t\t}\n\t\t\t\tthis.load_node(obj, function (o, ok) {\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\td = this.get_node(obj, true);\n\t\t\t\tt = this;\n\t\t\t\tif(d.length) {\n\t\t\t\t\tif(animation && d.children(\".jstree-children\").length) {\n\t\t\t\t\t\td.children(\".jstree-children\").stop(true, true);\n\t\t\t\t\t}\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\n\t\t\t\t\t\tthis.draw_children(obj);\n\t\t\t\t\t\t//d = this.get_node(obj, true);\n\t\t\t\t\t}\n\t\t\t\t\tif(!animation) {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\t\t\tif (t.element) {\n\t\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobj.state.opened = true;\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, true);\n\t\t\t\t}\n\t\t\t\tif(!d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name before_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\n\t\t\t\t * @event\n\t\t\t\t * @name open_node.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\n\t\t\t\tif(!animation || !d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name after_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens every parent of a node (node should be loaded)\n\t\t * @name _open_to(obj)\n\t\t * @param {mixed} obj the node to reveal\n\t\t * @private\n\t\t */\n\t\t_open_to : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = obj.parents;\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\n\t\t\t\tif(i !== $.jstree.root) {\n\t\t\t\t\tthis.open_node(p[i], false, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t},\n\t\t/**\n\t\t * closes a node, hiding its children\n\t\t * @name close_node(obj [, animation])\n\t\t * @param {mixed} obj the node to close\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger close_node.jstree, after_close.jstree\n\t\t */\n\t\tclose_node : function (obj, animation) {\n\t\t\tvar t1, t2, t, d;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.close_node(obj[t1], animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tt = this;\n\t\t\td = this.get_node(obj, true);\n\n\t\t\tobj.state.opened = false;\n\t\t\t/**\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\n\t\t\t * @event\n\t\t\t * @name close_node.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\n\t\t\tif(!d.length) {\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is closed and the animation is complete\n\t\t\t\t * @event\n\t\t\t\t * @name after_close.jstree\n\t\t\t\t * @param {Object} node the closed node\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(!animation) {\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\n\t\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\n\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\n\t\t\t\t\t\t\tif (t.element) {\n\t\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\n\t\t * @name toggle_node(obj)\n\t\t * @param {mixed} obj the node to toggle\n\t\t */\n\t\ttoggle_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.toggle_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn this.open_node(obj);\n\t\t\t}\n\t\t\tif(this.is_open(obj)) {\n\t\t\t\treturn this.close_node(obj);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_all([obj, animation, original_obj])\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\n\t\t * @trigger open_all.jstree\n\t\t */\n\t\topen_all : function (obj, animation, original_obj) {\n\t\t\tif(!obj) { obj = $.jstree.root; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\n\t\t\t}\n\t\t\toriginal_obj = original_obj || dom;\n\t\t\t_this = this;\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\n\t\t\tdom.each(function () {\n\t\t\t\t_this.open_node(\n\t\t\t\t\tthis,\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\n\t\t\t\t\tanimation || 0\n\t\t\t\t);\n\t\t\t});\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\n\t\t\t\t/**\n\t\t\t\t * triggered when an `open_all` call completes\n\t\t\t\t * @event\n\t\t\t\t * @name open_all.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * closes all nodes within a node (or the tree), revaling their children\n\t\t * @name close_all([obj, animation])\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\n\t\t * @trigger close_all.jstree\n\t\t */\n\t\tclose_all : function (obj, animation) {\n\t\t\tif(!obj) { obj = $.jstree.root; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true),\n\t\t\t\t_this = this, i, j;\n\t\t\tif(dom.length) {\n\t\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\n\t\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when an `close_all` call completes\n\t\t\t * @event\n\t\t\t * @name close_all.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * checks if a node is disabled (not selectable)\n\t\t * @name is_disabled(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_disabled : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.disabled;\n\t\t},\n\t\t/**\n\t\t * enables a node - so that it can be selected\n\t\t * @name enable_node(obj)\n\t\t * @param {mixed} obj the node to enable\n\t\t * @trigger enable_node.jstree\n\t\t */\n\t\tenable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.enable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = false;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled').attr('aria-disabled', false);\n\t\t\t/**\n\t\t\t * triggered when an node is enabled\n\t\t\t * @event\n\t\t\t * @name enable_node.jstree\n\t\t\t * @param {Object} node the enabled node\n\t\t\t */\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * disables a node - so that it can not be selected\n\t\t * @name disable_node(obj)\n\t\t * @param {mixed} obj the node to disable\n\t\t * @trigger disable_node.jstree\n\t\t */\n\t\tdisable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.disable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = true;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled').attr('aria-disabled', true);\n\t\t\t/**\n\t\t\t * triggered when an node is disabled\n\t\t\t * @event\n\t\t\t * @name disable_node.jstree\n\t\t\t * @param {Object} node the disabled node\n\t\t\t */\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * determines if a node is hidden\n\t\t * @name is_hidden(obj)\n\t\t * @param {mixed} obj the node\n\t\t */\n\t\tis_hidden : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj.state.hidden === true;\n\t\t},\n\t\t/**\n\t\t * hides a node - it is still in the structure but will not be visible\n\t\t * @name hide_node(obj)\n\t\t * @param {mixed} obj the node to hide\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\n\t\t * @trigger hide_node.jstree\n\t\t */\n\t\thide_node : function (obj, skip_redraw) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.hide_node(obj[t1], true);\n\t\t\t\t}\n\t\t\t\tif (!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!obj.state.hidden) {\n\t\t\t\tobj.state.hidden = true;\n\t\t\t\tthis._node_changed(obj.parent);\n\t\t\t\tif(!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is hidden\n\t\t\t\t * @event\n\t\t\t\t * @name hide_node.jstree\n\t\t\t\t * @param {Object} node the hidden node\n\t\t\t\t */\n\t\t\t\tthis.trigger('hide_node', { 'node' : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * shows a node\n\t\t * @name show_node(obj)\n\t\t * @param {mixed} obj the node to show\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\n\t\t * @trigger show_node.jstree\n\t\t */\n\t\tshow_node : function (obj, skip_redraw) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.show_node(obj[t1], true);\n\t\t\t\t}\n\t\t\t\tif (!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(obj.state.hidden) {\n\t\t\t\tobj.state.hidden = false;\n\t\t\t\tthis._node_changed(obj.parent);\n\t\t\t\tif(!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is shown\n\t\t\t\t * @event\n\t\t\t\t * @name show_node.jstree\n\t\t\t\t * @param {Object} node the shown node\n\t\t\t\t */\n\t\t\t\tthis.trigger('show_node', { 'node' : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * hides all nodes\n\t\t * @name hide_all()\n\t\t * @trigger hide_all.jstree\n\t\t */\n\t\thide_all : function (skip_redraw) {\n\t\t\tvar i, m = this._model.data, ids = [];\n\t\t\tfor(i in m) {\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && !m[i].state.hidden) {\n\t\t\t\t\tm[i].state.hidden = true;\n\t\t\t\t\tids.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = true;\n\t\t\tif(!skip_redraw) {\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when all nodes are hidden\n\t\t\t * @event\n\t\t\t * @name hide_all.jstree\n\t\t\t * @param {Array} nodes the IDs of all hidden nodes\n\t\t\t */\n\t\t\tthis.trigger('hide_all', { 'nodes' : ids });\n\t\t\treturn ids;\n\t\t},\n\t\t/**\n\t\t * shows all nodes\n\t\t * @name show_all()\n\t\t * @trigger show_all.jstree\n\t\t */\n\t\tshow_all : function (skip_redraw) {\n\t\t\tvar i, m = this._model.data, ids = [];\n\t\t\tfor(i in m) {\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && m[i].state.hidden) {\n\t\t\t\t\tm[i].state.hidden = false;\n\t\t\t\t\tids.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = true;\n\t\t\tif(!skip_redraw) {\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when all nodes are shown\n\t\t\t * @event\n\t\t\t * @name show_all.jstree\n\t\t\t * @param {Array} nodes the IDs of all shown nodes\n\t\t\t */\n\t\t\tthis.trigger('show_all', { 'nodes' : ids });\n\t\t\treturn ids;\n\t\t},\n\t\t/**\n\t\t * called when a node is selected by the user. Used internally.\n\t\t * @private\n\t\t * @name activate_node(obj, e)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Object} e the related event\n\t\t * @trigger activate_node.jstree, changed.jstree\n\t\t */\n\t\tactivate_node : function (obj, e) {\n\t\t\tif(this.is_disabled(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!e || typeof e !== 'object') {\n\t\t\t\te = {};\n\t\t\t}\n\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\n\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\n\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.deselect_all(true);\n\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(e.shiftKey) {\n\t\t\t\t\tvar o = this.get_node(obj).id,\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\n\t\t\t\t\t\tc = false,\n\t\t\t\t\t\ti, j;\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\n\t\t\t\t\t\tif(p[i] === o) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(p[i] === l) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!this.is_disabled(p[i]) && (c || p[i] === o || p[i] === l)) {\n\t\t\t\t\t\t\tif (!this.is_hidden(p[i])) {\n\t\t\t\t\t\t\t\tthis.select_node(p[i], true, false, e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.deselect_node(p[i], true, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : this.get_node(obj), 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!this.is_selected(obj)) {\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when an node is clicked or intercated with by the user\n\t\t\t * @event\n\t\t\t * @name activate_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {Object} event the ooriginal event (if any) which triggered the call (may be an empty object)\n\t\t\t */\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj), 'event' : e });\n\t\t},\n\t\t/**\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name hover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger hover_node.jstree\n\t\t */\n\t\thover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\n\t\t\tif(o && o.length) { this.dehover_node(o); }\n\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is hovered\n\t\t\t * @event\n\t\t\t * @name hover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); }, 0);\n\t\t},\n\t\t/**\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name dehover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger dehover_node.jstree\n\t\t */\n\t\tdehover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.children('.jstree-anchor').removeClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is no longer hovered\n\t\t\t * @event\n\t\t\t * @name dehover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * select a node\n\t\t * @name select_node(obj [, supress_event, prevent_open])\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\n\t\t * @trigger select_node.jstree, changed.jstree\n\t\t */\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.selected) {\n\t\t\t\tobj.state.selected = true;\n\t\t\t\tthis._data.core.selected.push(obj.id);\n\t\t\t\tif(!prevent_open) {\n\t\t\t\t\tdom = this._open_to(obj);\n\t\t\t\t}\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is selected\n\t\t\t\t * @event\n\t\t\t\t * @name select_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when selection changes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name changed.jstree\n\t\t\t\t\t * @param {Object} node\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\n\t\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect a node\n\t\t * @name deselect_node(obj [, supress_event])\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_node.jstree, changed.jstree\n\t\t */\n\t\tdeselect_node : function (obj, supress_event, e) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.selected) {\n\t\t\t\tobj.state.selected = false;\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is deselected\n\t\t\t\t * @event\n\t\t\t\t * @name deselect_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * select all nodes in the tree\n\t\t * @name select_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger select_all.jstree, changed.jstree\n\t\t */\n\t\tselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tthis._data.core.selected = this._model.data[$.jstree.root].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are selected\n\t\t\t * @event\n\t\t\t * @name select_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect all selected nodes\n\t\t * @name deselect_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_all.jstree, changed.jstree\n\t\t */\n\t\tdeselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.core.selected = [];\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked').parent().attr('aria-selected', false);\n\t\t\t/**\n\t\t\t * triggered when all nodes are deselected\n\t\t\t * @event\n\t\t\t * @name deselect_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * checks if a node is selected\n\t\t * @name is_selected(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_selected : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.state.selected;\n\t\t},\n\t\t/**\n\t\t * get an array of all selected nodes\n\t\t * @name get_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_selected : function (full) {\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\n\t\t},\n\t\t/**\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\n\t\t * @name get_top_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_top_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t},\n\t\t/**\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\n\t\t * @name get_bottom_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_bottom_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t},\n\t\t/**\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\n\t\t * @name get_state()\n\t\t * @private\n\t\t * @return {Object}\n\t\t */\n\t\tget_state : function () {\n\t\t\tvar state\t= {\n\t\t\t\t'core' : {\n\t\t\t\t\t'open' : [],\n\t\t\t\t\t'loaded' : [],\n\t\t\t\t\t'scroll' : {\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\n\t\t\t\t\t\t'top' : this.element.scrollTop()\n\t\t\t\t\t},\n\t\t\t\t\t/*!\n\t\t\t\t\t'themes' : {\n\t\t\t\t\t\t'name' : this.get_theme(),\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\n\t\t\t\t\t},\n\t\t\t\t\t*/\n\t\t\t\t\t'selected' : []\n\t\t\t\t}\n\t\t\t}, i;\n\t\t\tfor(i in this._model.data) {\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\n\t\t\t\t\tif(i !== $.jstree.root) {\n\t\t\t\t\t\tif(this._model.data[i].state.loaded && this.settings.core.loaded_state) {\n\t\t\t\t\t\t\tstate.core.loaded.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\n\t\t\t\t\t\t\tstate.core.open.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\n\t\t\t\t\t\t\tstate.core.selected.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state;\n\t\t},\n\t\t/**\n\t\t * sets the state of the tree. Used internally.\n\t\t * @name set_state(state [, callback])\n\t\t * @private\n\t\t * @param {Object} state the state to restore. Keep in mind this object is passed by reference and jstree will modify it.\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\n\t\t * @trigger set_state.jstree\n\t\t */\n\t\tset_state : function (state, callback) {\n\t\t\tif(state) {\n\t\t\t\tif(state.core && state.core.selected && state.core.initial_selection === undefined) {\n\t\t\t\t\tstate.core.initial_selection = this._data.core.selected.concat([]).sort().join(',');\n\t\t\t\t}\n\t\t\t\tif(state.core) {\n\t\t\t\t\tvar res, n, t, _this, i;\n\t\t\t\t\tif(state.core.loaded) {\n\t\t\t\t\t\tif(!this.settings.core.loaded_state || !$.isArray(state.core.loaded) || !state.core.loaded.length) {\n\t\t\t\t\t\t\tdelete state.core.loaded;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis._load_nodes(state.core.loaded, function (nodes) {\n\t\t\t\t\t\t\t\tdelete state.core.loaded;\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.open) {\n\t\t\t\t\t\tif(!$.isArray(state.core.open) || !state.core.open.length) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis._load_nodes(state.core.open, function (nodes) {\n\t\t\t\t\t\t\t\tthis.open_node(nodes, false, 0);\n\t\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.scroll) {\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.scroll;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.selected) {\n\t\t\t\t\t\t_this = this;\n\t\t\t\t\t\tif (state.core.initial_selection === undefined ||\n\t\t\t\t\t\t\tstate.core.initial_selection === this._data.core.selected.concat([]).sort().join(',')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.deselect_all();\n\t\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\n\t\t\t\t\t\t\t\t_this.select_node(v, false, true);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.initial_selection;\n\t\t\t\t\t\tdelete state.core.selected;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tfor(i in state) {\n\t\t\t\t\t\tif(state.hasOwnProperty(i) && i !== \"core\" && $.inArray(i, this.settings.plugins) === -1) {\n\t\t\t\t\t\t\tdelete state[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\n\t\t\t\t\t\tdelete state.core;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($.isEmptyObject(state)) {\n\t\t\t\t\tstate = null;\n\t\t\t\t\tif(callback) { callback.call(this); }\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a `set_state` call completes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name set_state.jstree\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('set_state');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t/**\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\n\t\t * @name refresh()\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\n\t\t * @trigger refresh.jstree\n\t\t */\n\t\trefresh : function (skip_loading, forget_state) {\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\n\t\t\tthis._cnt = 0;\n\t\t\tthis._model.data = {};\n\t\t\tthis._model.data[$.jstree.root] = {\n\t\t\t\tid : $.jstree.root,\n\t\t\t\tparent : null,\n\t\t\t\tparents : [],\n\t\t\t\tchildren : [],\n\t\t\t\tchildren_d : [],\n\t\t\t\tstate : { loaded : false }\n\t\t\t};\n\t\t\tthis._data.core.selected = [];\n\t\t\tthis._data.core.last_clicked = null;\n\t\t\tthis._data.core.focused = null;\n\n\t\t\tvar c = this.get_container_ul()[0].className;\n\t\t\tif(!skip_loading) {\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"' role='group'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='treeitem' id='j\"+this._id+\"_loading'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\t\tthis.element.attr('aria-activedescendant','j'+this._id+'_loading');\n\t\t\t}\n\t\t\tthis.load_node($.jstree.root, function (o, s) {\n\t\t\t\tif(s) {\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\n\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\n\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\n\t\t\t\t\t}\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered when a `refresh` call completes\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @name refresh.jstree\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.trigger('refresh');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis._data.core.state = null;\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\n\t\t * @name refresh_node(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @trigger refresh_node.jstree\n\t\t */\n\t\trefresh_node : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\n\t\t\tto_load.push(obj.id);\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { to_load.push(this.id); opened.push(this.id); });\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\n\t\t\t\tthis.open_node(opened, false, 0);\n\t\t\t\tthis.select_node(s);\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is refreshed\n\t\t\t\t * @event\n\t\t\t\t * @name refresh_node.jstree\n\t\t\t\t * @param {Object} node - the refreshed node\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\n\t\t\t\t */\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\n\t\t\t}, this), false, true);\n\t\t},\n\t\t/**\n\t\t * set (change) the ID of a node\n\t\t * @name set_id(obj, id)\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} id the new ID\n\t\t * @return {Boolean}\n\t\t * @trigger set_id.jstree\n\t\t */\n\t\tset_id : function (obj, id) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\tvar i, j, m = this._model.data, old = obj.id;\n\t\t\tid = id.toString();\n\t\t\t// update parents (replace current ID with new one in children and children_d)\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\n\t\t\t}\n\t\t\t// update children (replace current ID with new one in parent and parents)\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\tm[obj.children[i]].parent = id;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\n\t\t\t}\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\n\t\t\ti = this.get_node(obj.id, true);\n\t\t\tif(i) {\n\t\t\t\ti.attr('id', id); //.children('.jstree-anchor').attr('id', id + '_anchor').end().attr('aria-labelledby', id + '_anchor');\n\t\t\t\tif(this.element.attr('aria-activedescendant') === obj.id) {\n\t\t\t\t\tthis.element.attr('aria-activedescendant', id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete m[obj.id];\n\t\t\tobj.id = id;\n\t\t\tobj.li_attr.id = id;\n\t\t\tm[id] = obj;\n\t\t\t/**\n\t\t\t * triggered when a node id value is changed\n\t\t\t * @event\n\t\t\t * @name set_id.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} old the old id\n\t\t\t */\n\t\t\tthis.trigger('set_id',{ \"node\" : obj, \"new\" : obj.id, \"old\" : old });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the text value of a node\n\t\t * @name get_text(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @return {String}\n\t\t */\n\t\tget_text : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.text;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\n\t\t * @private\n\t\t * @name set_text(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger set_text.jstree\n\t\t */\n\t\tset_text : function (obj, val) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_text(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\tobj.text = val;\n\t\t\tif(this.get_node(obj, true).length) {\n\t\t\t\tthis.redraw_node(obj.id);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node text value is changed\n\t\t\t * @event\n\t\t\t * @name set_text.jstree\n\t\t\t * @param {Object} obj\n\t\t\t * @param {String} text the new value\n\t\t\t */\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * gets a JSON representation of a node (or the whole tree)\n\t\t * @name get_json([obj, options])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Object} options\n\t\t * @param  {Boolean} options.no_state do not return state information\n\t\t * @param  {Boolean} options.no_id do not return ID\n\t\t * @param  {Boolean} options.no_children do not include children\n\t\t * @param  {Boolean} options.no_data do not include node data\n\t\t * @param  {Boolean} options.no_li_attr do not include LI attributes\n\t\t * @param  {Boolean} options.no_a_attr do not include A attributes\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\n\t\t * @return {Object}\n\t\t */\n\t\tget_json : function (obj, options, flat) {\n\t\t\tobj = this.get_node(obj || $.jstree.root);\n\t\t\tif(!obj) { return false; }\n\t\t\tif(options && options.flat && !flat) { flat = []; }\n\t\t\tvar tmp = {\n\t\t\t\t'id' : obj.id,\n\t\t\t\t'text' : obj.text,\n\t\t\t\t'icon' : this.get_icon(obj),\n\t\t\t\t'li_attr' : $.extend(true, {}, obj.li_attr),\n\t\t\t\t'a_attr' : $.extend(true, {}, obj.a_attr),\n\t\t\t\t'state' : {},\n\t\t\t\t'data' : options && options.no_data ? false : $.extend(true, $.isArray(obj.data)?[]:{}, obj.data)\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\n\t\t\t}, i, j;\n\t\t\tif(options && options.flat) {\n\t\t\t\ttmp.parent = obj.parent;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.children = [];\n\t\t\t}\n\t\t\tif(!options || !options.no_state) {\n\t\t\t\tfor(i in obj.state) {\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete tmp.state;\n\t\t\t}\n\t\t\tif(options && options.no_li_attr) {\n\t\t\t\tdelete tmp.li_attr;\n\t\t\t}\n\t\t\tif(options && options.no_a_attr) {\n\t\t\t\tdelete tmp.a_attr;\n\t\t\t}\n\t\t\tif(options && options.no_id) {\n\t\t\t\tdelete tmp.id;\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t\t}\n\t\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\n\t\t\t\t\tdelete tmp.a_attr.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.flat && obj.id !== $.jstree.root) {\n\t\t\t\tflat.push(tmp);\n\t\t\t}\n\t\t\tif(!options || !options.no_children) {\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tif(options && options.flat) {\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn options && options.flat ? flat : (obj.id === $.jstree.root ? tmp.children : tmp);\n\t\t},\n\t\t/**\n\t\t * create a new node (do not confuse with load_node)\n\t\t * @name create_node([par, node, pos, callback, is_loaded])\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\n\t\t * @param  {Function} callback a function to be called once the node is created\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\n\t\t * @return {String}            the ID of the newly create node\n\t\t * @trigger model.jstree, create_node.jstree\n\t\t */\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\n\t\t\tif(par === null) { par = $.jstree.root; }\n\t\t\tpar = this.get_node(par);\n\t\t\tif(!par) { return false; }\n\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\n\t\t\t}\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\n\t\t\tif(typeof node === \"string\") {\n\t\t\t\tnode = { \"text\" : node };\n\t\t\t} else {\n\t\t\t\tnode = $.extend(true, {}, node);\n\t\t\t}\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\n\t\t\tvar tmp, dpc, i, j;\n\n\t\t\tif(par.id === $.jstree.root) {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\n\t\t\tif(!node.id) { node.id = true; }\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\n\n\t\t\tpar.children_d = par.children_d.concat(dpc);\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tnode = tmp;\n\t\t\ttmp = [];\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\n\t\t\t}\n\t\t\ttmp[pos] = node.id;\n\t\t\tpar.children = tmp;\n\n\t\t\tthis.redraw_node(par, true);\n\t\t\t/**\n\t\t\t * triggered when a node is created\n\t\t\t * @event\n\t\t\t * @name create_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the new node among the parent's children\n\t\t\t */\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\n\t\t\treturn node.id;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node\n\t\t * @name rename_node(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger rename_node.jstree\n\t\t */\n\t\trename_node : function (obj, val) {\n\t\t\tvar t1, t2, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.rename_node(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\told = obj.text;\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\n\t\t\t/**\n\t\t\t * triggered when a node is renamed\n\t\t\t * @event\n\t\t\t * @name rename_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} text the new value\n\t\t\t * @param {String} old the old value\n\t\t\t */\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * remove a node\n\t\t * @name delete_node(obj)\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\n\t\t * @return {Boolean}\n\t\t * @trigger delete_node.jstree, changed.jstree\n\t\t */\n\t\tdelete_node : function (obj) {\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c, top, lft;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.delete_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\tpar = this.get_node(obj.parent);\n\t\t\tpos = $.inArray(obj.id, par.children);\n\t\t\tc = false;\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(pos !== -1) {\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\n\t\t\t}\n\t\t\ttmp = obj.children_d.concat([]);\n\t\t\ttmp.push(obj.id);\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\n\t\t\t\t\tc = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (c) {\n\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\n\t\t\t\t});\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node is deleted\n\t\t\t * @event\n\t\t\t * @name delete_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t */\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\n\t\t\tif(c) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\n\t\t\t}\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tdelete this._model.data[tmp[k]];\n\t\t\t}\n\t\t\tif($.inArray(this._data.core.focused, tmp) !== -1) {\n\t\t\t\tthis._data.core.focused = null;\n\t\t\t\ttop = this.element[0].scrollTop;\n\t\t\t\tlft = this.element[0].scrollLeft;\n\t\t\t\tif(par.id === $.jstree.root) {\n\t\t\t\t\tif (this._model.data[$.jstree.root].children[0]) {\n\t\t\t\t\t\tthis.get_node(this._model.data[$.jstree.root].children[0], true).children('.jstree-anchor').focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.get_node(par, true).children('.jstree-anchor').focus();\n\t\t\t\t}\n\t\t\t\tthis.element[0].scrollTop  = top;\n\t\t\t\tthis.element[0].scrollLeft = lft;\n\t\t\t}\n\t\t\tthis.redraw_node(par, true);\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * check if an operation is premitted on the tree. Used internally.\n\t\t * @private\n\t\t * @name check(chk, obj, par, pos)\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {mixed} par the parent\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheck : function (chk, obj, par, pos, more) {\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\n\t\t\t\tchc = this.settings.core.check_callback;\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || (chk === \"move_node\" && $.inArray(obj.id, par.children) === pos) || $.inArray(par.id, obj.children_d) !== -1)) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\n\t\t\t\tif(tmp.functions[chk] === false) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t}\n\t\t\t\treturn tmp.functions[chk];\n\t\t\t}\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the last error\n\t\t * @name last_error()\n\t\t * @return {Object}\n\t\t */\n\t\tlast_error : function () {\n\t\t\treturn this._data.core.last_error;\n\t\t},\n\t\t/**\n\t\t * move a node to a new parent\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\n\t\t * @trigger move_node.jstree\n\t\t */\n\t\tmove_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true, false, origin); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tif(obj.length === 1) {\n\t\t\t\t\tobj = obj[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//obj = obj.slice();\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\t\tif((tmp = this.move_node(obj[t1], par, pos, callback, is_loaded, false, origin))) {\n\t\t\t\t\t\t\tpar = tmp;\n\t\t\t\t\t\t\tpos = \"after\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.redraw();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\n\t\t\tif(old_ins && old_ins._id) {\n\t\t\t\tobj = old_ins._model.data[obj.id];\n\t\t\t}\n\n\t\t\tif(is_multi) {\n\t\t\t\tif((tmp = this.copy_node(obj, par, pos, callback, is_loaded, false, origin))) {\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\n\t\t\t\t\treturn tmp;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//var m = this._model.data;\n\t\t\tif(par.id === $.jstree.root) {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(obj.parent === new_par.id) {\n\t\t\t\tdpc = new_par.children.concat();\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\n\t\t\t\tif(tmp !== -1) {\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\n\t\t\t\t\tif(pos > tmp) { pos--; }\n\t\t\t\t}\n\t\t\t\ttmp = [];\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\n\t\t\t\t}\n\t\t\t\ttmp[pos] = obj.id;\n\t\t\t\tnew_par.children = tmp;\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// clean old parent and up\n\t\t\t\ttmp = obj.children_d.concat();\n\t\t\t\ttmp.push(obj.id);\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tdpc = [];\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\n\t\t\t\t\t\t\tdpc.push(p[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\n\t\t\t\t}\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\n\n\t\t\t\t// insert into new parent and up\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\n\t\t\t\t}\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t\t}\n\t\t\t\tdpc[pos] = obj.id;\n\t\t\t\tnew_par.children = dpc;\n\t\t\t\tnew_par.children_d.push(obj.id);\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\n\n\t\t\t\t// update object\n\t\t\t\tobj.parent = new_par.id;\n\t\t\t\ttmp = new_par.parents.concat();\n\t\t\t\ttmp.unshift(new_par.id);\n\t\t\t\tp = obj.parents.length;\n\t\t\t\tobj.parents = tmp;\n\n\t\t\t\t// update object children\n\t\t\t\ttmp = tmp.concat();\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\n\t\t\t\t}\n\n\t\t\t\tif(old_par === $.jstree.root || new_par.id === $.jstree.root) {\n\t\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t\t}\n\t\t\t\tif(!this._model.force_full_redraw) {\n\t\t\t\t\tthis._node_changed(old_par);\n\t\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\t}\n\t\t\t\tif(!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is moved\n\t\t\t * @event\n\t\t\t * @name move_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the old position of the node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn obj.id;\n\t\t},\n\t\t/**\n\t\t * copy a node to a new parent\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\n\t\t * @trigger model.jstree copy_node.jstree\n\t\t */\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true, false, origin); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tif(obj.length === 1) {\n\t\t\t\t\tobj = obj[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//obj = obj.slice();\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\t\tif((tmp = this.copy_node(obj[t1], par, pos, callback, is_loaded, true, origin))) {\n\t\t\t\t\t\t\tpar = tmp;\n\t\t\t\t\t\t\tpos = \"after\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.redraw();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\n\t\t\tif(old_ins && old_ins._id) {\n\t\t\t\tobj = old_ins._model.data[obj.id];\n\t\t\t}\n\n\t\t\tif(par.id === $.jstree.root) {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\n\t\t\tif(!node) { return false; }\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\n\n\t\t\t// insert into new parent and up\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tdpc = [];\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t}\n\t\t\tdpc[pos] = tmp.id;\n\t\t\tnew_par.children = dpc;\n\t\t\tnew_par.children_d.push(tmp.id);\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\n\n\t\t\tif(new_par.id === $.jstree.root) {\n\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t}\n\t\t\tif(!this._model.force_full_redraw) {\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t}\n\t\t\tif(!skip_redraw) {\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\n\t\t\t}\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is copied\n\t\t\t * @event\n\t\t\t * @name copy_node.jstree\n\t\t\t * @param {Object} node the copied node\n\t\t\t * @param {Object} original the original node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the position of the original node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\n\t\t * @name cut(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger cut.jstree\n\t\t */\n\t\tcut : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'move_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for moving\n\t\t\t * @event\n\t\t\t * @name cut.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('cut', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\n\t\t * @name copy(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger copy.jstree\n\t\t */\n\t\tcopy : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'copy_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for copying\n\t\t\t * @event\n\t\t\t * @name copy.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('copy', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\n\t\t * @name get_buffer()\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\n\t\t */\n\t\tget_buffer : function () {\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\n\t\t},\n\t\t/**\n\t\t * check if there is something in the buffer to paste\n\t\t * @name can_paste()\n\t\t * @return {Boolean}\n\t\t */\n\t\tcan_paste : function () {\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\n\t\t},\n\t\t/**\n\t\t * copy or move the previously cut or copied nodes to a new parent\n\t\t * @name paste(obj [, pos])\n\t\t * @param  {mixed} obj the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\n\t\t * @trigger paste.jstree\n\t\t */\n\t\tpaste : function (obj, pos) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos, false, false, false, ccp_inst)) {\n\t\t\t\t/**\n\t\t\t\t * triggered when paste is invoked\n\t\t\t\t * @event\n\t\t\t\t * @name paste.jstree\n\t\t\t\t * @param {String} parent the ID of the receiving node\n\t\t\t\t * @param {Array} node the nodes in the buffer\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\n\t\t\t\t */\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\n\t\t\t}\n\t\t\tccp_node = false;\n\t\t\tccp_mode = false;\n\t\t\tccp_inst = false;\n\t\t},\n\t\t/**\n\t\t * clear the buffer of previously copied or cut nodes\n\t\t * @name clear_buffer()\n\t\t * @trigger clear_buffer.jstree\n\t\t */\n\t\tclear_buffer : function () {\n\t\t\tccp_node = false;\n\t\t\tccp_mode = false;\n\t\t\tccp_inst = false;\n\t\t\t/**\n\t\t\t * triggered when the copy / cut buffer is cleared\n\t\t\t * @event\n\t\t\t * @name clear_buffer.jstree\n\t\t\t */\n\t\t\tthis.trigger('clear_buffer');\n\t\t},\n\t\t/**\n\t\t * put a node in edit mode (input field to rename the node)\n\t\t * @name edit(obj [, default_text, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {String} default_text the text to populate the input with (if omitted or set to a non-string value the node's text value is used)\n\t\t * @param  {Function} callback a function to be called once the text box is blurred, it is called in the instance's scope and receives the node, a status parameter (true if the rename is successful, false otherwise) and a boolean indicating if the user cancelled the edit. You can access the node's title using .text\n\t\t */\n\t\tedit : function (obj, default_text, callback) {\n\t\t\tvar rtl, w, a, s, t, h1, h2, fn, tmp, cancel = false;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tif(!this.check(\"edit\", obj, this.get_parent(obj))) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttmp = obj;\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\n\t\t\tthis.set_text(obj, \"\");\n\t\t\tobj = this._open_to(obj);\n\t\t\ttmp.text = default_text;\n\n\t\t\trtl = this._data.core.rtl;\n\t\t\tw  = this.element.width();\n\t\t\tthis._data.core.focused = tmp.id;\n\t\t\ta  = obj.children('.jstree-anchor').focus();\n\t\t\ts  = $('<span>');\n\t\t\t/*!\n\t\t\toi = obj.children(\"i:visible\"),\n\t\t\tai = a.children(\"i:visible\"),\n\t\t\tw1 = oi.width() * oi.length,\n\t\t\tw2 = ai.width() * ai.length,\n\t\t\t*/\n\t\t\tt  = default_text;\n\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(document.body);\n\t\t\th2 = $(\"<\"+\"input />\", {\n\t\t\t\t\t\t\"value\" : t,\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\n\t\t\t\t\t\t// \"size\" : t.length,\n\t\t\t\t\t\t\"css\" : {\n\t\t\t\t\t\t\t\"padding\" : \"0\",\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"blur\" : $.proxy(function (e) {\n\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\n\t\t\t\t\t\t\t\tv = i.val(),\n\t\t\t\t\t\t\t\tf = this.settings.core.force_text,\n\t\t\t\t\t\t\t\tnv;\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\n\t\t\t\t\t\t\th1.remove();\n\t\t\t\t\t\t\ts.replaceWith(a);\n\t\t\t\t\t\t\ts.remove();\n\t\t\t\t\t\t\tt = f ? t : $('<div></div>').append($.parseHTML(t)).html();\n\t\t\t\t\t\t\tthis.set_text(obj, t);\n\t\t\t\t\t\t\tnv = !!this.rename_node(obj, f ? $('<div></div>').text(v).text() : $('<div></div>').append($.parseHTML(v)).html());\n\t\t\t\t\t\t\tif(!nv) {\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\n\t\t\t\t\t\t\tsetTimeout($.proxy(function () {\n\t\t\t\t\t\t\t\tvar node = this.get_node(tmp.id, true);\n\t\t\t\t\t\t\t\tif(node.length) {\n\t\t\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\n\t\t\t\t\t\t\t\t\tnode.children('.jstree-anchor').focus();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this), 0);\n\t\t\t\t\t\t\tif(callback) {\n\t\t\t\t\t\t\t\tcallback.call(this, tmp, nv, cancel);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\th2 = null;\n\t\t\t\t\t\t}, this),\n\t\t\t\t\t\t\"keydown\" : function (e) {\n\t\t\t\t\t\t\tvar key = e.which;\n\t\t\t\t\t\t\tif(key === 27) {\n\t\t\t\t\t\t\t\tcancel = true;\n\t\t\t\t\t\t\t\tthis.value = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"keyup\" : function (e) {\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"keypress\" : function(e) {\n\t\t\t\t\t\t\tif(e.which === 13) { return false; }\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tfn = {\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\n\t\t\t\t};\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\n\t\t\ta.replaceWith(s);\n\t\t\th1.css(fn);\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\n\t\t\t$(document).one('mousedown.jstree touchstart.jstree dnd_start.vakata', function (e) {\n\t\t\t\tif (h2 && e.target !== h2) {\n\t\t\t\t\t$(h2).blur();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * changes the theme\n\t\t * @name set_theme(theme_name [, theme_url])\n\t\t * @param {String} theme_name the name of the new theme to apply\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\n\t\t * @trigger set_theme.jstree\n\t\t */\n\t\tset_theme : function (theme_name, theme_url) {\n\t\t\tif(!theme_name) { return false; }\n\t\t\tif(theme_url === true) {\n\t\t\t\tvar dir = this.settings.core.themes.dir;\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\n\t\t\t}\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\n\t\t\t\tthemes_loaded.push(theme_url);\n\t\t\t}\n\t\t\tif(this._data.core.themes.name) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\n\t\t\t}\n\t\t\tthis._data.core.themes.name = theme_name;\n\t\t\tthis.element.addClass('jstree-' + theme_name);\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\n\t\t\t/**\n\t\t\t * triggered when a theme is set\n\t\t\t * @event\n\t\t\t * @name set_theme.jstree\n\t\t\t * @param {String} theme the new theme\n\t\t\t */\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme name\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme : function () { return this._data.core.themes.name; },\n\t\t/**\n\t\t * changes the theme variant (if the theme has variants)\n\t\t * @name set_theme_variant(variant_name)\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\n\t\t */\n\t\tset_theme_variant : function (variant_name) {\n\t\t\tif(this._data.core.themes.variant) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t\tthis._data.core.themes.variant = variant_name;\n\t\t\tif(variant_name) {\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme variant\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\n\t\t/**\n\t\t * shows a striped background on the container (if the theme supports it)\n\t\t * @name show_stripes()\n\t\t */\n\t\tshow_stripes : function () {\n\t\t\tthis._data.core.themes.stripes = true;\n\t\t\tthis.get_container_ul().addClass(\"jstree-striped\");\n\t\t\t/**\n\t\t\t * triggered when stripes are shown\n\t\t\t * @event\n\t\t\t * @name show_stripes.jstree\n\t\t\t */\n\t\t\tthis.trigger('show_stripes');\n\t\t},\n\t\t/**\n\t\t * hides the striped background on the container\n\t\t * @name hide_stripes()\n\t\t */\n\t\thide_stripes : function () {\n\t\t\tthis._data.core.themes.stripes = false;\n\t\t\tthis.get_container_ul().removeClass(\"jstree-striped\");\n\t\t\t/**\n\t\t\t * triggered when stripes are hidden\n\t\t\t * @event\n\t\t\t * @name hide_stripes.jstree\n\t\t\t */\n\t\t\tthis.trigger('hide_stripes');\n\t\t},\n\t\t/**\n\t\t * toggles the striped background on the container\n\t\t * @name toggle_stripes()\n\t\t */\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\n\t\t/**\n\t\t * shows the connecting dots (if the theme supports it)\n\t\t * @name show_dots()\n\t\t */\n\t\tshow_dots : function () {\n\t\t\tthis._data.core.themes.dots = true;\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-dots\");\n\t\t\t/**\n\t\t\t * triggered when dots are shown\n\t\t\t * @event\n\t\t\t * @name show_dots.jstree\n\t\t\t */\n\t\t\tthis.trigger('show_dots');\n\t\t},\n\t\t/**\n\t\t * hides the connecting dots\n\t\t * @name hide_dots()\n\t\t */\n\t\thide_dots : function () {\n\t\t\tthis._data.core.themes.dots = false;\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-dots\");\n\t\t\t/**\n\t\t\t * triggered when dots are hidden\n\t\t\t * @event\n\t\t\t * @name hide_dots.jstree\n\t\t\t */\n\t\t\tthis.trigger('hide_dots');\n\t\t},\n\t\t/**\n\t\t * toggles the connecting dots\n\t\t * @name toggle_dots()\n\t\t */\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\n\t\t/**\n\t\t * show the node icons\n\t\t * @name show_icons()\n\t\t */\n\t\tshow_icons : function () {\n\t\t\tthis._data.core.themes.icons = true;\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-icons\");\n\t\t\t/**\n\t\t\t * triggered when icons are shown\n\t\t\t * @event\n\t\t\t * @name show_icons.jstree\n\t\t\t */\n\t\t\tthis.trigger('show_icons');\n\t\t},\n\t\t/**\n\t\t * hide the node icons\n\t\t * @name hide_icons()\n\t\t */\n\t\thide_icons : function () {\n\t\t\tthis._data.core.themes.icons = false;\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-icons\");\n\t\t\t/**\n\t\t\t * triggered when icons are hidden\n\t\t\t * @event\n\t\t\t * @name hide_icons.jstree\n\t\t\t */\n\t\t\tthis.trigger('hide_icons');\n\t\t},\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_icons()\n\t\t */\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\n\t\t/**\n\t\t * show the node ellipsis\n\t\t * @name show_icons()\n\t\t */\n\t\tshow_ellipsis : function () {\n\t\t\tthis._data.core.themes.ellipsis = true;\n\t\t\tthis.get_container_ul().addClass(\"jstree-ellipsis\");\n\t\t\t/**\n\t\t\t * triggered when ellisis is shown\n\t\t\t * @event\n\t\t\t * @name show_ellipsis.jstree\n\t\t\t */\n\t\t\tthis.trigger('show_ellipsis');\n\t\t},\n\t\t/**\n\t\t * hide the node ellipsis\n\t\t * @name hide_ellipsis()\n\t\t */\n\t\thide_ellipsis : function () {\n\t\t\tthis._data.core.themes.ellipsis = false;\n\t\t\tthis.get_container_ul().removeClass(\"jstree-ellipsis\");\n\t\t\t/**\n\t\t\t * triggered when ellisis is hidden\n\t\t\t * @event\n\t\t\t * @name hide_ellipsis.jstree\n\t\t\t */\n\t\t\tthis.trigger('hide_ellipsis');\n\t\t},\n\t\t/**\n\t\t * toggle the node ellipsis\n\t\t * @name toggle_icons()\n\t\t */\n\t\ttoggle_ellipsis : function () { if(this._data.core.themes.ellipsis) { this.hide_ellipsis(); } else { this.show_ellipsis(); } },\n\t\t/**\n\t\t * set the node icon for a node\n\t\t * @name set_icon(obj, icon)\n\t\t * @param {mixed} obj\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t */\n\t\tset_icon : function (obj, icon) {\n\t\t\tvar t1, t2, dom, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\told = obj.icon;\n\t\t\tobj.icon = icon === true || icon === null || icon === undefined || icon === '' ? true : icon;\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\n\t\t\tif(icon === false) {\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\n\t\t\t\tthis.hide_icon(obj);\n\t\t\t}\n\t\t\telse if(icon === true || icon === null || icon === undefined || icon === '') {\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\n\t\t\t\tif(old === false) { this.show_icon(obj); }\n\t\t\t}\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\n\t\t\t\tif(old === false) { this.show_icon(obj); }\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\n\t\t\t\tif(old === false) { this.show_icon(obj); }\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the node icon for a node\n\t\t * @name get_icon(obj)\n\t\t * @param {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_icon : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.icon;\n\t\t},\n\t\t/**\n\t\t * hide the icon on an individual node\n\t\t * @name hide_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\thide_icon : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.hide_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\n\t\t\tobj.icon = false;\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * show the icon on an individual node\n\t\t * @name show_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\tshow_icon : function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.show_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\n\t\t\tif(!obj.icon) { obj.icon = true; }\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t}\n\t});\n\n\t// helpers\n\t$.vakata = {};\n\n\t$.vakata.search = function(pattern, txt, options) {\n\t\toptions = options || {};\n\t\tif(options.fuzzy !== false) {\n\t\t\toptions.fuzzy = true;\n\t\t}\n\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\n\t\tvar MATCH_LOCATION\t= options.location || 0,\n\t\t\tMATCH_DISTANCE\t= options.distance || 100,\n\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\n\t\t\tpatternLen = pattern.length;\n\t\tif(patternLen > 32) {\n\t\t\toptions.fuzzy = false;\n\t\t}\n\t\tif(options.fuzzy) {\n\t\t\tvar matchmask = 1 << (patternLen - 1);\n\t\t\tvar pattern_alphabet = (function () {\n\t\t\t\tvar mask = {},\n\t\t\t\t\ti = 0;\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tmask[pattern.charAt(i)] = 0;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\n\t\t\t\t}\n\t\t\t\treturn mask;\n\t\t\t})();\n\t\t\tvar match_bitapScore = function (e, x) {\n\t\t\t\tvar accuracy = e / patternLen,\n\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\n\t\t\t\tif(!MATCH_DISTANCE) {\n\t\t\t\t\treturn proximity ? 1.0 : accuracy;\n\t\t\t\t}\n\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\n\t\t\t};\n\t\t}\n\t\tvar search = function (text) {\n\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\n\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: true,\n\t\t\t\t\tscore: 0\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!options.fuzzy) {\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: false,\n\t\t\t\t\tscore: 1\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar i, j,\n\t\t\t\ttextLen = text.length,\n\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\n\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\n\t\t\t\tbinMin, binMid,\n\t\t\t\tbinMax = patternLen + textLen,\n\t\t\t\tlastRd, start, finish, rd, charMatch,\n\t\t\t\tscore = 1,\n\t\t\t\tlocations = [];\n\t\t\tif (bestLoc != -1) {\n\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\n\t\t\t\tif (bestLoc != -1) {\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbestLoc = -1;\n\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\tbinMin = 0;\n\t\t\t\tbinMid = binMax;\n\t\t\t\twhile (binMin < binMid) {\n\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\n\t\t\t\t\t\tbinMin = binMid;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\t}\n\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\n\t\t\t\t}\n\t\t\t\tbinMax = binMid;\n\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\n\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\n\t\t\t\trd = Array(finish + 2);\n\t\t\t\trd[finish + 1] = (1 << i) - 1;\n\t\t\t\tfor (j = finish; j >= start; j--) {\n\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\n\t\t\t\t\t}\n\t\t\t\t\tif (rd[j] & matchmask) {\n\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\n\t\t\t\t\t\tif (score <= scoreThreshold) {\n\t\t\t\t\t\t\tscoreThreshold = score;\n\t\t\t\t\t\t\tbestLoc = j - 1;\n\t\t\t\t\t\t\tlocations.push(bestLoc);\n\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\n\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlastRd = rd;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tisMatch: bestLoc >= 0,\n\t\t\t\tscore: score\n\t\t\t};\n\t\t};\n\t\treturn txt === true ? { 'search' : search } : search(txt);\n\t};\n\n\t// collect attributes\n\t$.vakata.attributes = function(node, with_values) {\n\t\tnode = $(node)[0];\n\t\tvar attr = with_values ? {} : [];\n\t\tif(node && node.attributes) {\n\t\t\t$.each(node.attributes, function (i, v) {\n\t\t\t\tif($.inArray(v.name.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\n\t\t\t\tif(v.value !== null && $.trim(v.value) !== '') {\n\t\t\t\t\tif(with_values) { attr[v.name] = v.value; }\n\t\t\t\t\telse { attr.push(v.name); }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn attr;\n\t};\n\t$.vakata.array_unique = function(array) {\n\t\tvar a = [], i, j, l, o = {};\n\t\tfor(i = 0, l = array.length; i < l; i++) {\n\t\t\tif(o[array[i]] === undefined) {\n\t\t\t\ta.push(array[i]);\n\t\t\t\to[array[i]] = true;\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove = function(array, from) {\n\t\tarray.splice(from, 1);\n\t\treturn array;\n\t\t//var rest = array.slice((to || from) + 1 || array.length);\n\t\t//array.length = from < 0 ? array.length + from : from;\n\t\t//array.push.apply(array, rest);\n\t\t//return array;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove_item = function(array, item) {\n\t\tvar tmp = $.inArray(item, array);\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\n\t};\n\t$.vakata.array_filter = function(c,a,b,d,e) {\n\t\tif (c.filter) {\n\t\t\treturn c.filter(a, b);\n\t\t}\n\t\td=[];\n\t\tfor (e in c) {\n\t\t\tif (~~e+''===e+'' && e>=0 && a.call(b,c[e],+e,c)) {\n\t\t\t\td.push(c[e]);\n\t\t\t}\n\t\t}\n\t\treturn d;\n\t};\n\n\n\treturn Tree;\n\n});\n"]}