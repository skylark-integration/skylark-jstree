{"version":3,"sources":["skylark-ui-datatree-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","maybeAddPx","cssNumber","classRE","classReCache","RegExp","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","style","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","dom","isIE","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","cssPropName","support","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","$","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","special","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","el","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","dragHandle","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","e1","over","dropped","manager","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","dropzone","droppedCallback","enterdCount","types","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","createObjectURL","_delegator","domNode","HTMLElement","VisualElement","batch","action","widgets","defineWidgetClass","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isShiftHeld","isKey","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","WidgetBase","extend","parseJSON","jstree","instance_counter","ccp_node","ccp_mode","ccp_inst","themes_loaded","version","plugins","idregex","Tree","destroy","reference","needle","ignore","inst","_model","is_method","instance","core","strings","check_callback","animation","themes","dir","dots","icons","ellipsis","stripes","variant","responsive","expand_selected_onload","worker","force_text","dblclick_toggle","loaded_state","restore_focus","keyboard","ctrl-space","is_open","close_node","get_parent","get_node","get_prev_dom","is_closed","open_node","_firstChild","get_next_dom","open_all","get_container_ul","f2","edit","plugin","deco","opts","Child","_data","_id","_cnt","_wrk","last_error","working","worker_queue","focused","opt","k","force_full_redraw","redraw_timeout","default_state","opened","children_d","settings","rtl","bind","original_container_html","get_string","li_height","outerHeight","_create_prototype_node","load_node","keep_html","revokeObjectURL","teardown","_temp1","_temp2","_node","_kbevent_to_func","8","9","13","19","27","32","33","34","35","36","37","38","39","40","44","45","46","96","97","98","99","100","101","102","103","104","105","-13","112","113","114","115","116","117","118","119","120","121","122","123","144","145","16","17","18","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","107","109","110","186","187","188","189","190","191","192","219","220","221","222","111","106","173","which","kb","unbind","word","tout","was_click","selection","getSelection","removeAllRanges","collapse","toggle_node","activate_node","r","vakata","array_unique","chr","fromCharCode","col","ind","set_theme","set_theme_variant","act","hover_node","dehover_node","ev","get_container","_nextSibling","_previousSibling","as_dom","ex","get_path","glue","ids","get_text","strict","get_children_dom","is_parent","is_loaded","is_loading","loading","is_leaf","c","_load_nodes","array_filter","failed","_load_node","has_children","is_callback","force_reload","load_all","to_load","notTextOrCommentNode","parseHTML","_append_json_data","_append_html_data","_node_changed","dat","par","chd","dpc","_parse_model_from_html","redraw","force_processing","w","df","t_id","t_cnt","rslt","parse_flat","ps","tid","icon","li_attr","a_attr","parse_nest","cnt","mod","postMessage","Worker","onmessage","terminate","_parse_model_from_flat_json","_parse_model_from_json","_redraw","fe","redraw_node","full","draw_children","force_render","last_sibling","substr","backgroundImage","backgroundPosition","backgroundSize","t1","t2","ok","_open_to","original_obj","_this","close_all","is_disabled","enable_node","disable_node","is_hidden","hide_node","skip_redraw","show_node","hide_all","show_all","last_clicked","deselect_node","select_node","is_selected","deselect_all","supress_event","prevent_open","array_remove_item","select_all","old_selection","get_selected","get_top_selected","get_bottom_selected","get_state","set_state","initial_selection","refresh","skip_loading","forget_state","refresh_node","set_id","new","set_text","get_json","flat","get_icon","no_data","no_state","no_li_attr","no_a_attr","no_id","no_children","create_node","rename_node","delete_node","lft","array_remove","chk","more","chc","is_multi","functions","move_node","old_par","old_pos","new_par","old_ins","copy_node","is_foreign","old_parent","old_position","old_instance","new_instance","get_buffer","mode","can_paste","clear_buffer","default_text","h1","h2","cancel","padding","border","box-sizing","lineHeight","min","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","fontVariant","letterSpacing","wordSpacing","theme_name","theme_url","theme","get_theme","variant_name","get_theme_variant","show_stripes","hide_stripes","toggle_stripes","show_dots","hide_dots","toggle_dots","show_icons","hide_icons","toggle_icons","show_ellipsis","hide_ellipsis","toggle_ellipsis","set_icon","hide_icon","show_icon","search","fuzzy","caseSensitive","MATCH_LOCATION","MATCH_DISTANCE","distance","MATCH_THRESHOLD","threshold","patternLen","matchmask","pattern_alphabet","mask","match_bitapScore","accuracy","proximity","abs","score","binMin","binMid","lastRd","rd","charMatch","textLen","scoreThreshold","bestLoc","binMax","locations","lastIndexOf","floor","with_values","deselected","_i","three_state","whole_node","keep_selected_style","cascade","tie_selection","cascade_to_disabled","cascade_to_hidden","uto","_undetermined","cur","selectedIds","_cascade_new_checked_state","temp","undetermined","allIds","get_undetermined","tt","tmp2","checkbox_disabled","show_checkboxes","checkboxes","hide_checkboxes","toggle_checkboxes","is_undetermined","disable_checkbox","enable_checkbox","is_checked","uncheck_node","check_node","checkedState","selectedChildIds","selectedNodeIds","selectedChildrenIds","get_checked_descendants","childId","check_all","uncheck_all","get_checked","get_top_checked","get_bottom_checked","res","conditionalselect","right_to_left","popup","Menu","_options","hide_onmouseleave","_show_submenu","_execute","_parse","_trigger","event_name","position_x","position_y","_disabled","sep","separator_before","_class","title","label","shortcut_label","submenu","separator_after","xl","outerWidth","h","dw","dh","is_visible","menu","show_at_node","new_node","rename","ccp","ey","last_ts","cto","show_contextmenu","changedTouches","clientX","clientY","_show_contextmenu","open_timeout","is_draggable","check_while_dragging","always_copy","inside_pos","drag_selection","touch","large_drop_target","large_drag_target","use_html5","drg","mlt","helper","lastmv","laster","lastev","opento","marker","isDifferentNode","pr","ip","tm","is_copy","pn","ins","ref","rel","z","_clean","strip","vakata_dnd","is_down","is_drag","helper_w","init_x","init_y","scroll_l","scroll_t","scroll_e","scroll_i","is_touch","scroll_speed","scroll_proximity","helper_left","helper_top","threshold_touch","_scroll","init_only","elementFromPoint","unselectable","onselectstart","touchAction","msTouchAction","MozUserSelect","wh","ww","dt","dl","ht","hl","massload","toLoad","case_sensitive","show_only_matches","show_only_matches_children","close_opened_onclear","search_leaves_only","search_callback","opn","som","smc","hdn","skip_async","inside","clear_search","lastRequest","ii","ttl","preserve_loaded","save_state","restore_state","st","sec","storage","clear_state","localStorage","setItem","getItem","BLANKRE","IDREGEX","escapeId","NODE_DATA_ATTR","COL_DATA_ATTR","SEARCHCLASS","SPECIAL_TITLE","styled","MINCOLWIDTH","generateCellId","tree","getIds","findDataCell","cellId","isClickedSep","toResize","oldMouseX","newMouseX","htmlstripre","copyData","fromtree","totree","recurse","findLastClosedNode","renderATitle","grid","getCellData","_guid","s4","substring","_initialize","_initialized","styles","gs","_gridSettings","treeClass","columnWidth","defaultConf","*display","*+display","isThemeroller","themeroller","treeWidthDiff","resizable","stateful","indent","sortOrder","sortAsc","caseInsensitive","fixedHeader","gridcontextmenu","treecol","gridcols","cols","columnSearch","_edit","ceil","rootid","msie","appVersion","gridWrapper","midWrapper","defaultSort","bigger","colrefs","caseInsensitiveSort","localeCompare","nodeA","nodeB","valueA","valueB","sortable","axis","searchColumn","searchObj","validatedSearchObj","columnIndex","column","columnValue","searchSettings","omniSearchCallback","searchValue","_detachColumns","_prepare_grid","_reattachColumns","removeNodes","_hideOrShowTree","_hide_grid","_prepare_headers","q","anchorHeight","_hover_node","nodesToShow","endTime","startTime","holdingCells","cells","_domManipulation","newtree","oldtree","gw","gridparent","_clean_grid","cl","ccl","puller","coluuid","defaultWidth","classAdd","hasHeaders","conf","borPadWidth","totalWidth","headerClass","columnClass","minWidth","maxWidth","bound","currentTree","colNum","isNaN","oldPrevHeaderInner","oldPrevColWidth","newPrevColWidth","clickedSep","newWidth","symbol","rootNode","mw","oldNodes","_hideOrShowNode","lenj","getHoldingCells","hc","grid_hide_column","grid_show_column","img","wcl","valClass","wideValClass","span","paddingleft","gridCellName","gridCellParentId","gridCellParent","gridCellPrev","gridCellPrevId","gridCellNext","gridCellNextId","gridCellChild","gridCellChildId","tmpWidth","highlightSearch","isClicked","closed","objData","cellClickHandler","sourceName","cellRightClickHandler","hoverInHandler","jsTreeInstance","hoverOutHandler","lid","peers","rendered","cellClass","wideCellClass","images","valueClass","valueClassPrefix","wideValueClass","wideValueClassPrefix","toRen","overflow-y","default","_delete_ids","get_rules","max_children","valid_children","max_depth","get_type","rules","set_type","old_type","old_icon","unique","trim_whitespace","duplicate","counter","wholerow","main"],"mappings":"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qC,EAAAnhC,QAAA1L,MAKA+kB,EAAApZ,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAsiB,GAGAlJ,EAAApZ,UACA,YACA,aACAg4B,GAIA5e,EAAApZ,UACA,MACA,KACA,MACA,YACA,WACA6lB,GAGAzM,EAAApZ,UACA,SACA,YACA6/B,GAGAzmB,EAAApZ,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA8gB,GAEA1H,EAAAiB,KAAA,SAAAjX,GACA,MAAA,SAAAA,EACAjQ,KAAAsmB,KAEAtmB,KAAAsmB,KAAAU,WAAA/W,IAKAgW,EAAApZ,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAqxB,GAIAjY,EAAApZ,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAuwB,GAGAnX,EAAApZ,UACA,YACA,aACAg4B,GAIA5e,EAAApZ,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAiX,GAGAmC,EAAApZ,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAiR,GAEAnf,EAAAsnB,KAAAA,IAGAzoB,OAAA,yBACA,YACA,UACA,UACA,UACA,WACA,SACA,YACA,UACA,UACA,SAAAmB,EAAAsL,EAAA6Z,EAAAqL,EAAArR,EAAAsf,EAAA1K,EAAAhf,EAAAuS,GAgFA,QAAAioB,KACA,MAAAA,GAuKA,QAAAC,GAAArnC,EAAA/J,EAAAkI,IAtPA,GAAAmpC,GAAA,iBAkFAC,GAjFAtsC,MAAAkD,UAAAoC,MAiFA4C,EAAA6F,QAAAhL,SACA2H,KAAA,SAAA1B,EAAAg3B,GAEA,GAAA93B,EAAA5E,WAAA0F,GAAA,CACA,GACAA,GAAAg3B,CACAA,GAAAh3B,EAEAd,EAAA5E,WAAA08B,GACA/hC,KAAA+hC,GAAAA,EAEA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","file":"../skylark-ui-datatree-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        marginSize : marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector);\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.dragSource,\r\n             dragHandle : draggable.dragHandle\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.dragSource);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          dragHandle : draggable.dragHandle,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n        \r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        var e1 = eventer.create(\"dndStarted\",{\r\n          elm : e.elm,\r\n          dragSource : e.dragSource,\r\n          dragHandle : e.dragHandle,\r\n          ghost : e.ghost,\r\n          transfer : e.transfer\r\n        });\r\n\r\n        this.trigger(e1);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"dndEnded\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self.params = langx.clone(params);\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            var params = self.params;\r\n            if (params.handle) {\r\n              self.dragHandle = finder.closest(e.target,params.handle);\r\n              if (!self.dragHandle) {\r\n                return;\r\n              }\r\n            }\r\n            if (params.source) {\r\n                self.dragSource = finder.closest(e.target,params.source);\r\n            } else {\r\n                self.dragSource = self.elm;\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.attr(self.dragSource, \"draggable\", 'true');\r\n            } \r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              //datax.attr(self.dragSource, \"draggable\", 'false');\r\n              self.dragSource = null;\r\n              self.dragHandle = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.attr(self.dragSource, \"draggable\", 'false');\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"dndStarted\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"dndEnded\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(options,el) {\r\n\t    \t//for supporting init(el,options)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\n/**\n * skylark-ui-swt - The skylark standard widget tookit\n * @author Hudaokeji, Inc.\n * @version v0.9.2.beta\n * @link https://github.com/skylarkui/skylark-ui-swt/\n * @license MIT\n */\ndefine('skylark-ui-swt/sbswt',[\n  \"skylark-utils/skylark\",\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/query\",\n  \"skylark-utils/widgets\"\n],function(skylark,langx,browser,eventer,noder,geom,$,widgets){\n\tvar ui = skylark.ui = skylark.ui || {}, \n\t\tsbswt = ui.sbswt = {};\n\n/*---------------------------------------------------------------------------------*/\n\t/*\n\t * Fuel UX utilities.js\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\n\n\n\tlangx.mixin(sbswt, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n/*---------------------------------------------------------------------------------*/\n\n\tvar WidgetBase = widgets.Widget.inherit({\n        klassName: \"WidgetBase\",\n    });\n\n\n\tlangx.mixin(sbswt, {\n\t\tWidgetBase : WidgetBase\n\t});\n\n\treturn sbswt;\n});\n\ndefine('skylark-ui-datatree/tree',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\t\"use strict\";\n\n\t$.ajax = $.ajax || function(options) {\n        return langx.Xhr.request(options.url,options);\n    };\n\n    $.camelCase = langx.camelCase;\n\n    $.each = langx.each;\n\n    $.extend = function(target) {\n        var deep, args = Array.prototype.slice.call(arguments, 1);\n        if (typeof target == 'boolean') {\n            deep = target\n            target = args.shift()\n        }\n        if (args.length == 0) {\n            args = [target];\n            target = this;\n        }\n        args.forEach(function(arg) {\n        \tlangx.mixin(target, arg, deep);\n        });\n        return target;\n    };\n\n    $.grep = function(elements, callback) {\n        return filter.call(elements, callback)\n    };\n\n    $.isArray = langx.isArray;\n    $.isEmptyObject = langx.isEmptyObject;\n    $.isFunction = langx.isFunction;\n    $.isWindow = langx.isWindow;\n    $.isPlainObject = langx.isPlainObject;\n\n    $.inArray = langx.inArray;\n\n    $.makeArray = langx.makeArray;\n    $.map = langx.map;\n\n    $.noop = function() {\n    };\n\n    $.parseJSON = window.JSON.parse;\n\n    $.proxy = langx.proxy;\n\n    $.trim = langx.trim;\n    $.type = langx.type;\n\n    $.fn.stop = function() {\n    \treturn this;\n    }\n\n\n\t/*!\n\t * jsTree {{VERSION}}\n\t * http://jstree.com/\n\t *\n\t * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\n\t *\n\t * Licensed same as jquery - under the terms of the MIT License\n\t *   http://www.opensource.org/licenses/mit-license.php\n\t */\n\n\t// prevent another load? maybe there is a better way?\n\tif($.jstree) {\n\t\treturn;\n\t}\n\n\t/**\n\t * ### jsTree core functionality\n\t */\n\n\t// internal variables\n\tvar instance_counter = 0,\n\t\tccp_node = false,\n\t\tccp_mode = false,\n\t\tccp_inst = false,\n\t\tthemes_loaded = [],\n\t\tsrc = $('script:last').attr('src'),\n\t\tdocument = window.document; // local variable is always faster to access then a global\n\n\t/**\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\n\t * @name $.jstree\n\t */\n\t$.jstree = {\n\t\t/**\n\t\t * specifies the jstree version in use\n\t\t * @name $.jstree.version\n\t\t */\n\t\tversion : '{{VERSION}}',\n\t\t/**\n\t\t * holds all the default options used when creating new instances\n\t\t * @name $.jstree.defaults\n\t\t */\n\t\tdefaults : {\n\t\t\t/**\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\n\t\t\t * @name $.jstree.defaults.plugins\n\t\t\t */\n\t\t\tplugins : []\n\t\t},\n\t\t/**\n\t\t * stores all loaded jstree plugins (used internally)\n\t\t * @name $.jstree.plugins\n\t\t */\n\t\tplugins : {},\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%?`]/g,\n\t\troot : '#'\n\t};\n\t\n\t/**\n\t * creates a jstree instance\n\t * @name $.jstree.create(el [, options])\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\n\t * @return {jsTree} the new instance\n\t */\n\t$.jstree.create = function (el, options) {\n\t\treturn new Tree(el,options);\n\t};\n\n\t/**\n\t * remove all traces of jstree from the DOM and destroy all instances\n\t * @name $.jstree.destroy()\n\t */\n\t$.jstree.destroy = function () {\n\t\t$('.jstree:jstree').jstree('destroy');\n\t\t$(document).off('.jstree');\n\t};\n\n\n\t/**\n\t * get a reference to an existing instance\n\t *\n\t * __Examples__\n\t *\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\n\t *\t// all of there will return the same instance\n\t *\t$.jstree.reference('tree');\n\t *\t$.jstree.reference('#tree');\n\t *\t$.jstree.reference($('#tree'));\n\t *\t$.jstree.reference(document.getElementByID('tree'));\n\t *\t$.jstree.reference('branch');\n\t *\t$.jstree.reference('#branch');\n\t *\t$.jstree.reference($('#branch'));\n\t *\t$.jstree.reference(document.getElementByID('branch'));\n\t *\n\t * @name $.jstree.reference(needle)\n\t * @param {DOMElement|jQuery|String} needle\n\t * @return {jsTree|null} the instance or `null` if not found\n\t */\n\t$.jstree.reference = function (needle) {\n\t\tvar tmp = null,\n\t\t\tobj = null;\n\t\tif(needle && needle.id && (!needle.tagName || !needle.nodeType)) { needle = needle.id; }\n\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\n\t\t}\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\n\t\t}\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\n\t\t\ttmp = obj;\n\t\t}\n\t\telse {\n\t\t\t$('.jstree').each(function () {\n\t\t\t\tvar inst = $(this).data('jstree');\n\t\t\t\tif(inst && inst._model.data[needle]) {\n\t\t\t\t\ttmp = inst;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn tmp;\n\t};\n\n\t/**\n\t * Create an instance, get an instance or invoke a command on a instance.\n\t *\n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\n\t *\n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\n\t *\n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\n\t *\n\t * In any other case - nothing is returned and chaining is not broken.\n\t *\n\t * __Examples__\n\t *\n\t *\t$('#tree1').jstree(); // creates an instance\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\n\t *\n\t * @name $().jstree([arg])\n\t * @param {String|Object} arg\n\t * @return {Mixed}\n\t */\n\t$.fn.jstree = function (arg) {\n\t\t// check for string argument\n\t\tvar is_method\t= (typeof arg === 'string'),\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\n\t\t\tresult\t\t= null;\n\t\tif(arg === true && !this.length) { return false; }\n\t\tthis.each(function () {\n\t\t\t// get the instance (if there is one) and method (if it exists)\n\t\t\tvar instance = $.jstree.reference(this),\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\n\t\t\t// if calling a method, and method is available - execute on the instance\n\t\t\tresult = is_method && method ?\n\t\t\t\tmethod.apply(instance, args) :\n\t\t\t\tnull;\n\t\t\t// if there is no instance and no method is being called - create one\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\n\t\t\t\t$.jstree.create(this, arg);\n\t\t\t}\n\t\t\t// if there is an instance and no method is called - return the instance\n\t\t\tif( (instance && !is_method) || arg === true ) {\n\t\t\t\tresult = instance || false;\n\t\t\t}\n\t\t\t// if there was a method call which returned a result - break and return the value\n\t\t\tif(result !== null && result !== undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\n\t\treturn result !== null && result !== undefined ?\n\t\t\tresult : this;\n\t};\n\n\t/**\n\t * stores all defaults for the core\n\t * @name $.jstree.defaults.core\n\t */\n\t$.jstree.defaults.core = {\n\t\t/**\n\t\t * data configuration\n\t\t *\n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\n\t\t *\n\t\t * You can also pass in a HTML string or a JSON array here.\n\t\t *\n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree.\n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\n\t\t *\n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t// AJAX\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : {\n\t\t *\t\t\t\t'url' : '/get/children/',\n\t\t *\t\t\t\t'data' : function (node) {\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\n\t\t *\t\t\t\t}\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t *\n\t\t *\t// direct data\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : [\n\t\t *\t\t\t\t'Simple root node',\n\t\t *\t\t\t\t{\n\t\t *\t\t\t\t\t'id' : 'node_2',\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\n\t\t *\t\t\t\t}\n\t\t *\t\t\t]\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t *\t// function\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : function (obj, callback) {\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.data\n\t\t */\n\t\tdata\t\t\t: false,\n\t\t/**\n\t\t * configure the various strings used throughout the tree\n\t\t *\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\n\t\t * If left as `false` no replacement is made.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'strings' : {\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.strings\n\t\t */\n\t\tstrings\t\t\t: false,\n\t\t/**\n\t\t * determines what happens when a user tries to modify the structure of the tree\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node', 'copy_node' or 'edit'\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.check_callback\n\t\t */\n\t\tcheck_callback\t: false,\n\t\t/**\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\n\t\t * @name $.jstree.defaults.core.error\n\t\t */\n\t\terror\t\t\t: $.noop,\n\t\t/**\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\n\t\t * @name $.jstree.defaults.core.animation\n\t\t */\n\t\tanimation\t\t: 200,\n\t\t/**\n\t\t * a boolean indicating if multiple nodes can be selected\n\t\t * @name $.jstree.defaults.core.multiple\n\t\t */\n\t\tmultiple\t\t: true,\n\t\t/**\n\t\t * theme configuration object\n\t\t * @name $.jstree.defaults.core.themes\n\t\t */\n\t\tthemes\t\t\t: {\n\t\t\t/**\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\n\t\t\t * @name $.jstree.defaults.core.themes.name\n\t\t\t */\n\t\t\tname\t\t\t: false,\n\t\t\t/**\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\n\t\t\t * @name $.jstree.defaults.core.themes.url\n\t\t\t */\n\t\t\turl\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\n\t\t\t * @name $.jstree.defaults.core.themes.dir\n\t\t\t */\n\t\t\tdir\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean indicating if connecting dots are shown\n\t\t\t * @name $.jstree.defaults.core.themes.dots\n\t\t\t */\n\t\t\tdots\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if node icons are shown\n\t\t\t * @name $.jstree.defaults.core.themes.icons\n\t\t\t */\n\t\t\ticons\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if node ellipsis should be shown - this only works with a fixed with on the container\n\t\t\t * @name $.jstree.defaults.core.themes.ellipsis\n\t\t\t */\n\t\t\tellipsis\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean indicating if the tree background is striped\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\n\t\t\t */\n\t\t\tstripes\t\t\t: false,\n\t\t\t/**\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\n\t\t\t * @name $.jstree.defaults.core.themes.variant\n\t\t\t */\n\t\t\tvariant\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\n\t\t\t */\n\t\t\tresponsive\t\t: false\n\t\t},\n\t\t/**\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\n\t\t */\n\t\texpand_selected_onload : true,\n\t\t/**\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\n\t\t * @name $.jstree.defaults.core.worker\n\t\t */\n\t\tworker : true,\n\t\t/**\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\n\t\t * @name $.jstree.defaults.core.force_text\n\t\t */\n\t\tforce_text : false,\n\t\t/**\n\t\t * Should the node should be toggled if the text is double clicked . Defaults to `true`\n\t\t * @name $.jstree.defaults.core.dblclick_toggle\n\t\t */\n\t\tdblclick_toggle : true,\n\t\t/**\n\t\t * Should the loaded nodes be part of the state. Defaults to `false`\n\t\t * @name $.jstree.defaults.core.loaded_state\n\t\t */\n\t\tloaded_state : false,\n\t\t/**\n\t\t * Should the last active node be focused when the tree container is blurred and the focused again. This helps working with screen readers. Defaults to `true`\n\t\t * @name $.jstree.defaults.core.restore_focus\n\t\t */\n\t\trestore_focus : true,\n\t\t/**\n\t\t * Default keyboard shortcuts (an object where each key is the button name or combo - like 'enter', 'ctrl-space', 'p', etc and the value is the function to execute in the instance's scope)\n\t\t * @name $.jstree.defaults.core.keyboard\n\t\t */\n\t\tkeyboard : {\n\t\t\t'ctrl-space': function (e) {\n\t\t\t\t// aria defines space only with Ctrl\n\t\t\t\te.type = \"click\";\n\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t},\n\t\t\t'enter': function (e) {\n\t\t\t\t// enter\n\t\t\t\te.type = \"click\";\n\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t},\n\t\t\t'left': function (e) {\n\t\t\t\t// left\n\t\t\t\te.preventDefault();\n\t\t\t\tif(this.is_open(e.currentTarget)) {\n\t\t\t\t\tthis.close_node(e.currentTarget);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar o = this.get_parent(e.currentTarget);\n\t\t\t\t\tif(o && o.id !== $.jstree.root) { this.get_node(o, true).children('.jstree-anchor').focus(); }\n\t\t\t\t}\n\t\t\t},\n\t\t\t'up': function (e) {\n\t\t\t\t// up\n\t\t\t\te.preventDefault();\n\t\t\t\tvar o = this.get_prev_dom(e.currentTarget);\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t},\n\t\t\t'right': function (e) {\n\t\t\t\t// right\n\t\t\t\te.preventDefault();\n\t\t\t\tif(this.is_closed(e.currentTarget)) {\n\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\n\t\t\t\t}\n\t\t\t\telse if (this.is_open(e.currentTarget)) {\n\t\t\t\t\tvar o = this.get_node(e.currentTarget, true).children('.jstree-children')[0];\n\t\t\t\t\tif(o) { $(this._firstChild(o)).children('.jstree-anchor').focus(); }\n\t\t\t\t}\n\t\t\t},\n\t\t\t'down': function (e) {\n\t\t\t\t// down\n\t\t\t\te.preventDefault();\n\t\t\t\tvar o = this.get_next_dom(e.currentTarget);\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t},\n\t\t\t'*': function (e) {\n\t\t\t\t// aria defines * on numpad as open_all - not very common\n\t\t\t\tthis.open_all();\n\t\t\t},\n\t\t\t'home': function (e) {\n\t\t\t\t// home\n\t\t\t\te.preventDefault();\n\t\t\t\tvar o = this._firstChild(this.get_container_ul()[0]);\n\t\t\t\tif(o) { $(o).children('.jstree-anchor').filter(':visible').focus(); }\n\t\t\t},\n\t\t\t'end': function (e) {\n\t\t\t\t// end\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.element.find('.jstree-anchor').filter(':visible').last().focus();\n\t\t\t},\n\t\t\t'f2': function (e) {\n\t\t\t\t// f2 - safe to include - if check_callback is false it will fail\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.edit(e.currentTarget);\n\t\t\t}\n\t\t}\n\t};\n\n    var Tree = sbswt.Tree = sbswt.WidgetBase.inherit({\n        klassName: \"Tree\",\n\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name plugin(deco [, opts])\n\t\t * @param  {String} deco the plugin to decorate with\n\t\t * @param  {Object} opts options for the plugin\n\t\t * @return {jsTree}\n\t\t */\n\t\tplugin : function (deco, opts) {\n\t\t\tvar Child = $.jstree.plugins[deco];\n\t\t\tif(Child) {\n\t\t\t\tthis._data[deco] = {};\n\t\t\t\tChild.prototype = this;\n\t\t\t\treturn new Child(opts, this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t * initialize the instance. Used internally.\n\t\t * @private\n\t\t * @name init(el, optons)\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\n\t\t * @param {Object} options options for this instance\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\n\t\t */\n\t\tinit : function (el, options) {\n\t\t\tthis._id = ++instance_counter;\n\t\t\tthis._cnt = 0;\n\t\t\tthis._wrk = null;\n\t\t\tthis._data = {\n\t\t\t\tcore : {\n\t\t\t\t\tthemes : {\n\t\t\t\t\t\tname : false,\n\t\t\t\t\t\tdots : false,\n\t\t\t\t\t\ticons : false,\n\t\t\t\t\t\tellipsis : false\n\t\t\t\t\t},\n\t\t\t\t\tselected : [],\n\t\t\t\t\tlast_error : {},\n\t\t\t\t\tworking : false,\n\t\t\t\t\tworker_queue : [],\n\t\t\t\t\tfocused : null\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar  opt = options,\n\t\t\t\ttmp = this;\n\t\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\n\t\t\tif(opt && opt.plugins) {\n\t\t\t\toptions.plugins = opt.plugins;\n\t\t\t}\n\t\t\t$.each(options.plugins, function (i, k) {\n\t\t\t\tif(i !== 'core') {\n\t\t\t\t\ttmp = tmp.plugin(k, options[k]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(el).data('jstree', tmp);\n\n\t\t\ttmp._model = {\n\t\t\t\tdata : {},\n\t\t\t\tchanged : [],\n\t\t\t\tforce_full_redraw : false,\n\t\t\t\tredraw_timeout : false,\n\t\t\t\tdefault_state : {\n\t\t\t\t\tloaded : true,\n\t\t\t\t\topened : false,\n\t\t\t\t\tselected : false,\n\t\t\t\t\tdisabled : false\n\t\t\t\t}\n\t\t\t};\n\t\t\ttmp._model.data[$.jstree.root] = {\n\t\t\t\tid : $.jstree.root,\n\t\t\t\tparent : null,\n\t\t\t\tparents : [],\n\t\t\t\tchildren : [],\n\t\t\t\tchildren_d : [],\n\t\t\t\tstate : { loaded : false }\n\t\t\t};\n\n\t\t\ttmp.element = $(el).addClass('jstree jstree-' + tmp._id);\n\t\t\ttmp.settings = options;\n\n\t\t\ttmp._data.core.ready = false;\n\t\t\ttmp._data.core.loaded = false;\n\t\t\ttmp._data.core.rtl = (tmp.element.css(\"direction\") === \"rtl\");\n\t\t\ttmp.element[tmp._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\n\t\t\ttmp.element.attr('role','tree');\n\t\t\tif(tmp.settings.core.multiple) {\n\t\t\t\ttmp.element.attr('aria-multiselectable', true);\n\t\t\t}\n\t\t\tif(!tmp.element.attr('tabindex')) {\n\t\t\t\ttmp.element.attr('tabindex','0');\n\t\t\t}\n\n\t\t\ttmp.bind();\n\t\t\t/**\n\t\t\t * triggered after all events are bound\n\t\t\t * @event\n\t\t\t * @name init.jstree\n\t\t\t */\n\t\t\ttmp.trigger(\"init\");\n\n\t\t\ttmp._data.core.original_container_html = tmp.element.find(\" > ul > li\").clone(true);\n\t\t\ttmp._data.core.original_container_html\n\t\t\t\t.find(\"li\").addBack()\n\t\t\t\t.contents().filter(function() {\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\n\t\t\t\t})\n\t\t\t\t.remove();\n\t\t\ttmp.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children' role='group'><\"+\"li id='j\"+tmp._id+\"_loading' class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='tree-item'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + tmp.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\ttmp.element.attr('aria-activedescendant','j' + tmp._id + '_loading');\n\t\t\ttmp._data.core.li_height = tmp.get_container_ul().children(\"li\").first().outerHeight() || 24;\n\t\t\ttmp._data.core.node = tmp._create_prototype_node();\n\t\t\t/**\n\t\t\t * triggered after the loading text is shown and before loading starts\n\t\t\t * @event\n\t\t\t * @name loading.jstree\n\t\t\t */\n\t\t\ttmp.trigger(\"loading\");\n\t\t\ttmp.load_node($.jstree.root);\n\t\t\treturn tmp;\n\t\t},\n\n\t\t/**\n\t\t * destroy an instance\n\t\t * @name destroy()\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\n\t\t */\n\t\tdestroy : function (keep_html) {\n\t\t\t/**\n\t\t\t * triggered before the tree is destroyed\n\t\t\t * @event\n\t\t\t * @name destroy.jstree\n\t\t\t */\n\t\t\ttmp.trigger(\"destroy\");\n\t\t\tif(this._wrk) {\n\t\t\t\ttry {\n\t\t\t\t\twindow.URL.revokeObjectURL(this._wrk);\n\t\t\t\t\tthis._wrk = null;\n\t\t\t\t}\n\t\t\t\tcatch (ignore) { }\n\t\t\t}\n\t\t\tif(!keep_html) { this.element.empty(); }\n\t\t\tthis.teardown();\n\t\t},\n\t\t/**\n\t\t * Create a prototype node\n\t\t * @name _create_prototype_node()\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_create_prototype_node : function () {\n\t\t\tvar _node = document.createElement('LI'), _temp1, _temp2;\n\t\t\t_node.setAttribute('role', 'treeitem');\n\t\t\t_temp1 = document.createElement('I');\n\t\t\t_temp1.className = 'jstree-icon jstree-ocl';\n\t\t\t_temp1.setAttribute('role', 'presentation');\n\t\t\t_node.appendChild(_temp1);\n\t\t\t_temp1 = document.createElement('A');\n\t\t\t_temp1.className = 'jstree-anchor';\n\t\t\t_temp1.setAttribute('href','#');\n\t\t\t_temp1.setAttribute('tabindex','-1');\n\t\t\t_temp2 = document.createElement('I');\n\t\t\t_temp2.className = 'jstree-icon jstree-themeicon';\n\t\t\t_temp2.setAttribute('role', 'presentation');\n\t\t\t_temp1.appendChild(_temp2);\n\t\t\t_node.appendChild(_temp1);\n\t\t\t_temp1 = _temp2 = null;\n\n\t\t\treturn _node;\n\t\t},\n\t\t_kbevent_to_func : function (e) {\n\t\t\tvar keys = {\n\t\t\t\t8: \"Backspace\", 9: \"Tab\", 13: \"Return\", 19: \"Pause\", 27: \"Esc\",\n\t\t\t\t32: \"Space\", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\", 36: \"Home\",\n\t\t\t\t37: \"Left\", 38: \"Up\", 39: \"Right\", 40: \"Down\", 44: \"Print\", 45: \"Insert\",\n\t\t\t\t46: \"Delete\", 96: \"Numpad0\", 97: \"Numpad1\", 98: \"Numpad2\", 99 : \"Numpad3\",\n\t\t\t\t100: \"Numpad4\", 101: \"Numpad5\", 102: \"Numpad6\", 103: \"Numpad7\",\n\t\t\t\t104: \"Numpad8\", 105: \"Numpad9\", '-13': \"NumpadEnter\", 112: \"F1\",\n\t\t\t\t113: \"F2\", 114: \"F3\", 115: \"F4\", 116: \"F5\", 117: \"F6\", 118: \"F7\",\n\t\t\t\t119: \"F8\", 120: \"F9\", 121: \"F10\", 122: \"F11\", 123: \"F12\", 144: \"Numlock\",\n\t\t\t\t145: \"Scrolllock\", 16: 'Shift', 17: 'Ctrl', 18: 'Alt',\n\t\t\t\t48: '0',  49: '1',  50: '2',  51: '3',  52: '4', 53:  '5',\n\t\t\t\t54: '6',  55: '7',  56: '8',  57: '9',  59: ';',  61: '=', 65:  'a',\n\t\t\t\t66: 'b',  67: 'c',  68: 'd',  69: 'e',  70: 'f',  71: 'g', 72:  'h',\n\t\t\t\t73: 'i',  74: 'j',  75: 'k',  76: 'l',  77: 'm',  78: 'n', 79:  'o',\n\t\t\t\t80: 'p',  81: 'q',  82: 'r',  83: 's',  84: 't',  85: 'u', 86:  'v',\n\t\t\t\t87: 'w',  88: 'x',  89: 'y',  90: 'z', 107: '+', 109: '-', 110: '.',\n\t\t\t\t186: ';', 187: '=', 188: ',', 189: '-', 190: '.', 191: '/', 192: '`',\n\t\t\t\t219: '[', 220: '\\\\',221: ']', 222: \"'\", 111: '/', 106: '*', 173: '-'\n\t\t\t};\n\t\t\tvar parts = [];\n\t\t\tif (e.ctrlKey) { parts.push('ctrl'); }\n\t\t\tif (e.altKey) { parts.push('alt'); }\n\t\t\tif (e.shiftKey) { parts.push('shift'); }\n\t\t\tparts.push(keys[e.which] || e.which);\n\t\t\tparts = parts.sort().join('-').toLowerCase();\n\n\t\t\tvar kb = this.settings.core.keyboard, i, tmp;\n\t\t\tfor (i in kb) {\n\t\t\t\tif (kb.hasOwnProperty(i)) {\n\t\t\t\t\ttmp = i;\n\t\t\t\t\tif (tmp !== '-' && tmp !== '+') {\n\t\t\t\t\t\ttmp = tmp.replace('--', '-MINUS').replace('+-', '-MINUS').replace('++', '-PLUS').replace('-+', '-PLUS');\n\t\t\t\t\t\ttmp = tmp.split(/-|\\+/).sort().join('-').replace('MINUS', '-').replace('PLUS', '+').toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tif (tmp === parts) {\n\t\t\t\t\t\treturn kb[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name teardown()\n\t\t */\n\t\tteardown : function () {\n\t\t\tthis.unbind();\n\t\t\tthis.element\n\t\t\t\t.removeClass('jstree')\n\t\t\t\t.removeData('jstree')\n\t\t\t\t.find(\"[class^='jstree']\")\n\t\t\t\t\t.addBack()\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\n\t\t\tthis.element = null;\n\t\t},\n\t\t/**\n\t\t * bind all events. Used internally.\n\t\t * @private\n\t\t * @name bind()\n\t\t */\n\t\tbind : function () {\n\t\t\tvar word = '',\n\t\t\t\ttout = null,\n\t\t\t\twas_click = 0;\n\t\t\tthis.element\n\t\t\t\t.on(\"dblclick.jstree\", function (e) {\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\n\t\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif(window.getSelection) {\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\t\t\t\t\tsel.collapse();\n\t\t\t\t\t\t\t\t} catch (ignore) { }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on(\"mousedown.jstree\", $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target === this.element[0]) {\n\t\t\t\t\t\t\te.preventDefault(); // prevent losing focus when clicking scroll arrows (FF, Chrome)\n\t\t\t\t\t\t\twas_click = +(new Date()); // ie does not allow to prevent losing focus\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mousedown.jstree\", \".jstree-ocl\", function (e) {\n\t\t\t\t\t\te.preventDefault(); // prevent any node inside from losing focus when clicking the open/close icon\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.toggle_node(e.target);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\n\t\t\t\t\t\tif(this.settings.core.dblclick_toggle) {\n\t\t\t\t\t\t\tthis.toggle_node(e.target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tif(e.currentTarget !== document.activeElement) { $(e.currentTarget).focus(); }\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\n\t\t\t\t\t\tif(this._data.core.rtl) {\n\t\t\t\t\t\t\tif(e.which === 37) { e.which = 39; }\n\t\t\t\t\t\t\telse if(e.which === 39) { e.which = 37; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar f = this._kbevent_to_func(e);\n\t\t\t\t\t\tif (f) {\n\t\t\t\t\t\t\tvar r = f.call(this, e);\n\t\t\t\t\t\t\tif (r === false || r === true) {\n\t\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif(data.status) {\n\t\t\t\t\t\t\tif(data.node.id === $.jstree.root && !this._data.core.loaded) {\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\n\t\t\t\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\n\t\t\t\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name loaded.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!this._data.core.ready) {\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function() {\n\t\t\t\t\t\t\t\t\tif(this.element && !this.get_container_ul().find('.jstree-loading').length) {\n\t\t\t\t\t\t\t\t\t\tthis._data.core.ready = true;\n\t\t\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\n\t\t\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\n\t\t\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t\t\t * @name ready.jstree\n\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\tthis.trigger(\"ready\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, this), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t// quick searching when the tree is focused\n\t\t\t\t.on('keypress.jstree', $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\n\t\t\t\t\t\tif(tout) { clearTimeout(tout); }\n\t\t\t\t\t\ttout = setTimeout(function () {\n\t\t\t\t\t\t\tword = '';\n\t\t\t\t\t\t}, 500);\n\n\t\t\t\t\t\tvar chr = String.fromCharCode(e.which).toLowerCase(),\n\t\t\t\t\t\t\tcol = this.element.find('.jstree-anchor').filter(':visible'),\n\t\t\t\t\t\t\tind = col.index(document.activeElement) || 0,\n\t\t\t\t\t\t\tend = false;\n\t\t\t\t\t\tword += chr;\n\n\t\t\t\t\t\t// match for whole word from current node down (including the current node)\n\t\t\t\t\t\tif(word.length > 1) {\n\t\t\t\t\t\t\tcol.slice(ind).each($.proxy(function (i, v) {\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\n\t\t\t\t\t\t\t\t\t$(v).focus();\n\t\t\t\t\t\t\t\t\tend = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\tif(end) { return; }\n\n\t\t\t\t\t\t\t// match for whole word from the beginning of the tree\n\t\t\t\t\t\t\tcol.slice(0, ind).each($.proxy(function (i, v) {\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\n\t\t\t\t\t\t\t\t\t$(v).focus();\n\t\t\t\t\t\t\t\t\tend = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\tif(end) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// list nodes that start with that letter (only if word consists of a single char)\n\t\t\t\t\t\tif(new RegExp('^' + chr.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '+$').test(word)) {\n\t\t\t\t\t\t\t// search for the next node starting with that letter\n\t\t\t\t\t\t\tcol.slice(ind + 1).each($.proxy(function (i, v) {\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\n\t\t\t\t\t\t\t\t\t$(v).focus();\n\t\t\t\t\t\t\t\t\tend = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\tif(end) { return; }\n\n\t\t\t\t\t\t\t// search from the beginning\n\t\t\t\t\t\t\tcol.slice(0, ind + 1).each($.proxy(function (i, v) {\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\n\t\t\t\t\t\t\t\t\t$(v).focus();\n\t\t\t\t\t\t\t\t\tend = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\tif(end) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t// THEME RELATED\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tvar s = this.settings.core.themes;\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\n\t\t\t\t\t\tthis._data.core.themes.ellipsis\t\t= s.ellipsis;\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.ellipsis ? \"show_ellipsis\" : \"hide_ellipsis\" ]();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis._data.core.focused = null;\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\n\t\t\t\t\t\tthis.element.attr('tabindex', '0');\n\t\t\t\t\t}, this))\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tvar tmp = this.get_node(e.currentTarget);\n\t\t\t\t\t\tif(tmp && tmp.id) {\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\n\t\t\t\t\t\tthis.element.attr('tabindex', '-1');\n\t\t\t\t\t}, this))\n\t\t\t\t.on('focus.jstree', $.proxy(function () {\n\t\t\t\t\t\tif(+(new Date()) - was_click > 500 && !this._data.core.focused && this.settings.core.restore_focus) {\n\t\t\t\t\t\t\twas_click = 0;\n\t\t\t\t\t\t\tvar act = this.get_node(this.element.attr('aria-activedescendant'), true);\n\t\t\t\t\t\t\tif(act) {\n\t\t\t\t\t\t\t\tact.find('> .jstree-anchor').focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name unbind()\n\t\t */\n\t\tunbind : function () {\n\t\t\tthis.element.off('.jstree');\n\t\t\t$(document).off('.jstree-' + this._id);\n\t\t},\n\t\t/**\n\t\t * trigger an event. Used internally.\n\t\t * @private\n\t\t * @name trigger(ev [, data])\n\t\t * @param  {String} ev the name of the event to trigger\n\t\t * @param  {Object} data additional data to pass with the event\n\t\t */\n\t\ttrigger : function (ev, data) {\n\t\t\tif(!data) {\n\t\t\t\tdata = {};\n\t\t\t}\n\t\t\tdata.instance = this;\n\t\t\tthis.element.trigger(ev.replace('.jstree','') + '.jstree', data);\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended instance container\n\t\t * @name get_container()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container : function () {\n\t\t\treturn this.element;\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\n\t\t * @private\n\t\t * @name get_container_ul()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container_ul : function () {\n\t\t\treturn this.element.children(\".jstree-children\").first();\n\t\t},\n\t\t/**\n\t\t * gets string replacements (localization). Used internally.\n\t\t * @private\n\t\t * @name get_string(key)\n\t\t * @param  {String} key\n\t\t * @return {String}\n\t\t */\n\t\tget_string : function (key) {\n\t\t\tvar a = this.settings.core.strings;\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\n\t\t\tif(a && a[key]) { return a[key]; }\n\t\t\treturn key;\n\t\t},\n\t\t/**\n\t\t * gets the first child of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _firstChild(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_firstChild : function (dom) {\n\t\t\tdom = dom ? dom.firstChild : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the next sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _nextSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_nextSibling : function (dom) {\n\t\t\tdom = dom ? dom.nextSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the previous sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _previousSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_previousSibling : function (dom) {\n\t\t\tdom = dom ? dom.previousSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.previousSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\n\t\t * @name get_node(obj [, as_dom])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} as_dom\n\t\t * @return {Object|jQuery}\n\t\t */\n\t\tget_node : function (obj, as_dom) {\n\t\t\tif(obj && obj.id) {\n\t\t\t\tobj = obj.id;\n\t\t\t}\n\t\t\tvar dom;\n\t\t\ttry {\n\t\t\t\tif(this._model.data[obj]) {\n\t\t\t\t\tobj = this._model.data[obj];\n\t\t\t\t}\n\t\t\t\telse if(typeof obj === \"string\" && this._model.data[obj.replace(/^#/, '')]) {\n\t\t\t\t\tobj = this._model.data[obj.replace(/^#/, '')];\n\t\t\t\t}\n\t\t\t\telse if(typeof obj === \"string\" && (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\n\t\t\t\t}\n\t\t\t\telse if((dom = $(obj, this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\n\t\t\t\t}\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\n\t\t\t\t\tobj = this._model.data[$.jstree.root];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif(as_dom) {\n\t\t\t\t\tobj = obj.id === $.jstree.root ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t} catch (ex) { return false; }\n\t\t},\n\t\t/**\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\n\t\t * @name get_path(obj [, glue, ids])\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\n\t\t * @return {mixed}\n\t\t */\n\t\tget_path : function (obj, glue, ids) {\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root || !obj.parents) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = [];\n\t\t\tp.push(ids ? obj.id : obj.text);\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\n\t\t\t}\n\t\t\tp = p.reverse().slice(1);\n\t\t\treturn glue ? p.join(glue) : p;\n\t\t},\n\t\t/**\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_next_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_next_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\n\t\t\t\t\ttmp = this._nextSibling(tmp);\n\t\t\t\t}\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = obj[0];\n\t\t\t\tdo {\n\t\t\t\t\ttmp = this._nextSibling(tmp);\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\n\t\t\t\t\ttmp = this._nextSibling(tmp);\n\t\t\t\t}\n\t\t\t\tif(tmp !== null) {\n\t\t\t\t\treturn $(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = obj[0];\n\t\t\tdo {\n\t\t\t\ttmp = this._nextSibling(tmp);\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\n\t\t\tif(tmp !== null) {\n\t\t\t\treturn $(tmp);\n\t\t\t}\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").nextAll(\".jstree-node:visible\").first();\n\t\t},\n\t\t/**\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_prev_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_prev_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\n\t\t\t\t\ttmp = this._previousSibling(tmp);\n\t\t\t\t}\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = obj[0];\n\t\t\t\tdo {\n\t\t\t\t\ttmp = this._previousSibling(tmp);\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\ttmp = obj[0];\n\t\t\tdo {\n\t\t\t\ttmp = this._previousSibling(tmp);\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\n\t\t\tif(tmp !== null) {\n\t\t\t\tobj = $(tmp);\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\n\t\t\t\t\tobj = obj.children(\".jstree-children\").first().children(\".jstree-node:visible:last\");\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\ttmp = obj[0].parentNode.parentNode;\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\n\t\t},\n\t\t/**\n\t\t * get the parent ID of a node\n\t\t * @name get_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.parent;\n\t\t},\n\t\t/**\n\t\t * get a jQuery collection of all the children of a node (node must be rendered), returns false on error\n\t\t * @name get_children_dom(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_children_dom : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\n\t\t},\n\t\t/**\n\t\t * checks if a node has children\n\t\t * @name is_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\n\t\t},\n\t\t/**\n\t\t * checks if a node is loaded (its children are available)\n\t\t * @name is_loaded(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loaded : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.loaded;\n\t\t},\n\t\t/**\n\t\t * check if a node is currently loading (fetching children)\n\t\t * @name is_loading(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loading : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.loading;\n\t\t},\n\t\t/**\n\t\t * check if a node is opened\n\t\t * @name is_open(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_open : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node is in a closed state\n\t\t * @name is_closed(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_closed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node has no children\n\t\t * @name is_leaf(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_leaf : function (obj) {\n\t\t\treturn !this.is_parent(obj);\n\t\t},\n\t\t/**\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\n\t\t * @name load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\n\t\t * @return {Boolean}\n\t\t * @trigger load_node.jstree\n\t\t */\n\t\tload_node : function (obj, callback) {\n\t\t\tvar k, l, i, j, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) {\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\n\t\t\tif(obj.state.loaded) {\n\t\t\t\tobj.state.loaded = false;\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\n\t\t\t\t\t\tc = true;\n\t\t\t\t\t}\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\n\t\t\t\t}\n\t\t\t\tif (c) {\n\t\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tobj.children = [];\n\t\t\t\tobj.children_d = [];\n\t\t\t\tif(c) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.failed = false;\n\t\t\tobj.state.loading = true;\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\").attr('aria-busy',true);\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\n\t\t\t\tobj = this._model.data[obj.id];\n\t\t\t\tobj.state.loading = false;\n\t\t\t\tobj.state.loaded = status;\n\t\t\t\tobj.state.failed = !obj.state.loaded;\n\t\t\t\tvar dom = this.get_node(obj, true), i = 0, j = 0, m = this._model.data, has_children = false;\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tif(m[obj.children[i]] && !m[obj.children[i]].state.hidden) {\n\t\t\t\t\t\thas_children = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(obj.state.loaded && dom && dom.length) {\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open jstree-leaf');\n\t\t\t\t\tif (!has_children) {\n\t\t\t\t\t\tdom.addClass('jstree-leaf');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (obj.id !== '#') {\n\t\t\t\t\t\t\tdom.addClass(obj.state.opened ? 'jstree-open' : 'jstree-closed');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\n\t\t\t\t/**\n\t\t\t\t * triggered after a node is loaded\n\t\t\t\t * @event\n\t\t\t\t * @name load_node.jstree\n\t\t\t\t * @param {Object} node the node that was loading\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\n\t\t\t\t */\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, status);\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\n\t\t * @private\n\t\t * @name _load_nodes(nodes [, callback])\n\t\t * @param  {array} nodes\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\n\t\t */\n\t\t_load_nodes : function (nodes, callback, is_callback, force_reload) {\n\t\t\tvar r = true,\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\n\t\t\t\tm = this._model.data, i, j, tmp = [];\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\tif(m[nodes[i]] && ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || (!is_callback && force_reload) )) {\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\n\t\t\t\t\t}\n\t\t\t\t\tr = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(r) {\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\t\tif(m[nodes[i]] && m[nodes[i]].state.loaded) {\n\t\t\t\t\t\ttmp.push(nodes[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(callback && !callback.done) {\n\t\t\t\t\tcallback.call(this, tmp);\n\t\t\t\t\tcallback.done = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * loads all unloaded nodes\n\t\t * @name load_all([obj, callback])\n\t\t * @param {mixed} obj the node to load recursively, omit to load all nodes in the tree\n\t\t * @param {function} callback a function to be executed once loading all the nodes is complete,\n\t\t * @trigger load_all.jstree\n\t\t */\n\t\tload_all : function (obj, callback) {\n\t\t\tif(!obj) { obj = $.jstree.root; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar to_load = [],\n\t\t\t\tm = this._model.data,\n\t\t\t\tc = m[obj.id].children_d,\n\t\t\t\ti, j;\n\t\t\tif(obj.state && !obj.state.loaded) {\n\t\t\t\tto_load.push(obj.id);\n\t\t\t}\n\t\t\tfor(i = 0, j = c.length; i < j; i++) {\n\t\t\t\tif(m[c[i]] && m[c[i]].state && !m[c[i]].state.loaded) {\n\t\t\t\t\tto_load.push(c[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(to_load.length) {\n\t\t\t\tthis._load_nodes(to_load, function () {\n\t\t\t\t\tthis.load_all(obj, callback);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t/**\n\t\t\t\t * triggered after a load_all call completes\n\t\t\t\t * @event\n\t\t\t\t * @name load_all.jstree\n\t\t\t\t * @param {Object} node the recursively loaded node\n\t\t\t\t */\n\t\t\t\tif(callback) { callback.call(this, obj); }\n\t\t\t\tthis.trigger('load_all', { \"node\" : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * handles the actual loading of a node. Used only internally.\n\t\t * @private\n\t\t * @name _load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\n\t\t * @return {Boolean}\n\t\t */\n\t\t_load_node : function (obj, callback) {\n\t\t\tvar s = this.settings.core.data, t;\n\t\t\tvar notTextOrCommentNode = function notTextOrCommentNode () {\n\t\t\t\treturn this.nodeType !== 3 && this.nodeType !== 8;\n\t\t\t};\n\t\t\t// use original HTML\n\t\t\tif(!s) {\n\t\t\t\tif(obj.id === $.jstree.root) {\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t// return callback.call(this, obj.id === $.jstree.root ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\n\t\t\t}\n\t\t\tif($.isFunction(s)) {\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\n\t\t\t\t\tif(d === false) {\n\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $($.parseHTML(d)).filter(notTextOrCommentNode) : d, function (status) {\n\t\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(typeof s === 'object') {\n\t\t\t\tif(s.url) {\n\t\t\t\t\ts = $.extend(true, {}, s);\n\t\t\t\t\tif($.isFunction(s.url)) {\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\tif($.isFunction(s.data)) {\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\treturn $.ajax(s)\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\n\t\t\t\t\t\t\t\tif((type && type.indexOf('json') !== -1) || typeof d === \"object\") {\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif((type && type.indexOf('html') !== -1) || typeof d === \"string\") {\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(d)).filter(notTextOrCommentNode), function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.fail($.proxy(function (f) {\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\n\t\t\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\tif ($.isArray(s)) {\n\t\t\t\t\tt = $.extend(true, [], s);\n\t\t\t\t} else if ($.isPlainObject(s)) {\n\t\t\t\t\tt = $.extend(true, {}, s);\n\t\t\t\t} else {\n\t\t\t\t\tt = s;\n\t\t\t\t}\n\t\t\t\tif(obj.id === $.jstree.root) {\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_json_data(obj, t) : false) );\n\t\t\t}\n\t\t\tif(typeof s === 'string') {\n\t\t\t\tif(obj.id === $.jstree.root) {\n\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(s)).filter(notTextOrCommentNode), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_html_data(obj, $(s)) : false) );\n\t\t\t}\n\t\t\treturn callback.call(this, false);\n\t\t},\n\t\t/**\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\n\t\t * @private\n\t\t * @name _node_changed(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t */\n\t\t_node_changed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n      if (obj && $.inArray(obj.id, this._model.changed) === -1) {\n\t\t\t\tthis._model.changed.push(obj.id);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * appends HTML content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_html_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the HTML string to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_html_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\n\t\t\t\tpar = dom.id,\n\t\t\t\tchd = [],\n\t\t\t\tdpc = [],\n\t\t\t\tm = this._model.data,\n\t\t\t\tp = m[par],\n\t\t\t\ts = this._data.core.selected.length,\n\t\t\t\ttmp, i, j;\n\t\t\tdat.each($.proxy(function (i, v) {\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\n\t\t\t\tif(tmp) {\n\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tp.children = chd;\n\t\t\tp.children_d = dpc;\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when new data is inserted to the tree model\n\t\t\t * @event\n\t\t\t * @name model.jstree\n\t\t\t * @param {Array} nodes an array of node IDs\n\t\t\t * @param {String} parent the parent ID of the nodes\n\t\t\t */\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\n\t\t\tif(par !== $.jstree.root) {\n\t\t\t\tthis._node_changed(par);\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\tthis.redraw(true);\n\t\t\t}\n\t\t\tif(this._data.core.selected.length !== s) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t}\n\t\t\tcb.call(this, true);\n\t\t},\n\t\t/**\n\t\t * appends JSON content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_json_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the JSON object to parse and append\n\t\t * @param  {Boolean} force_processing internal param - do not set\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_json_data : function (dom, data, cb, force_processing) {\n\t\t\tif(this.element === null) { return; }\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\t// *%$@!!!\n\t\t\tif(data.d) {\n\t\t\t\tdata = data.d;\n\t\t\t\tif(typeof data === \"string\") {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!$.isArray(data)) { data = [data]; }\n\t\t\tvar w = null,\n\t\t\t\targs = {\n\t\t\t\t\t'df'\t: this._model.default_state,\n\t\t\t\t\t'dat'\t: data,\n\t\t\t\t\t'par'\t: dom.id,\n\t\t\t\t\t'm'\t\t: this._model.data,\n\t\t\t\t\t't_id'\t: this._id,\n\t\t\t\t\t't_cnt'\t: this._cnt,\n\t\t\t\t\t'sel'\t: this._data.core.selected\n\t\t\t\t},\n\t\t\t\tfunc = function (data, undefined) {\n\t\t\t\t\tif(data.data) { data = data.data; }\n\t\t\t\t\tvar dat = data.dat,\n\t\t\t\t\t\tpar = data.par,\n\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\tdpc = [],\n\t\t\t\t\t\tadd = [],\n\t\t\t\t\t\tdf = data.df,\n\t\t\t\t\t\tt_id = data.t_id,\n\t\t\t\t\t\tt_cnt = data.t_cnt,\n\t\t\t\t\t\tm = data.m,\n\t\t\t\t\t\tp = m[par],\n\t\t\t\t\t\tsel = data.sel,\n\t\t\t\t\t\ttmp, i, j, rslt,\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\n\t\t\t\t\t\t\t\ti, j, c, e,\n\t\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\n\t\t\t\t\t\t\t\ttmp.icon = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\tm[tmp.id].original = d;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\n\t\t\t\t\t\t\t} while(m[tid]);\n\n\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\tchildren\t: [],\n\t\t\t\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\n\t\t\t\t\t\t\t\ttmp.icon = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\n\t\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\ttmp.original = d;\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\n\t\t\t\t\t\t// 1) convert to object (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tif(!dat[i].children) {\n\t\t\t\t\t\t\t\tdat[i].children = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!dat[i].state) {\n\t\t\t\t\t\t\t\tdat[i].state = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 2) populate children (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tif (!m[dat[i].parent.toString()]) {\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'parse', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Node with invalid parent', 'data' : JSON.stringify({ 'id' : dat[i].id.toString(), 'parent' : dat[i].parent.toString() }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\n\t\t\t\t\t\t\t// populate parent.children_d\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\n\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\n\t\t\t\t\t\t\tif(tmp) {\n\t\t\t\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp.children = chd;\n\t\t\t\t\t\tp.children_d = dpc;\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof window === 'undefined' || typeof window.document === 'undefined') {\n\t\t\t\t\t\tpostMessage(rslt);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn rslt;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trslt = function (rslt, worker) {\n\t\t\t\t\tif(this.element === null) { return; }\n\t\t\t\t\tthis._cnt = rslt.cnt;\n\t\t\t\t\tvar i, m = this._model.data;\n\t\t\t\t\tfor (i in m) {\n\t\t\t\t\t\tif (m.hasOwnProperty(i) && m[i].state && m[i].state.loading && rslt.mod[i]) {\n\t\t\t\t\t\t\trslt.mod[i].state.loading = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\n\n\t\t\t\t\tif(worker) {\n\t\t\t\t\t\tvar j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice();\n\t\t\t\t\t\tm = this._model.data;\n\t\t\t\t\t\t// if selection was changed while calculating in worker\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\n\n\t\t\t\t\tif(rslt.par !== $.jstree.root) {\n\t\t\t\t\t\tthis._node_changed(rslt.par);\n\t\t\t\t\t\tthis.redraw();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t\t\t}\n\t\t\t\t\tcb.call(this, true);\n\t\t\t\t};\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\n\t\t\t\ttry {\n\t\t\t\t\tif(this._wrk === null) {\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\n\t\t\t\t\t\t\tnew window.Blob(\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString()],\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif(!this._data.core.working || force_processing) {\n\t\t\t\t\t\tthis._data.core.working = true;\n\t\t\t\t\t\tw = new window.Worker(this._wrk);\n\t\t\t\t\t\tw.onmessage = $.proxy(function (e) {\n\t\t\t\t\t\t\trslt.call(this, e.data, true);\n\t\t\t\t\t\t\ttry { w.terminate(); w = null; } catch(ignore) { }\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t\tif(!args.par) {\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tw.postMessage(args);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb, true]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\trslt.call(this, func(args), false);\n\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\trslt.call(this, func(args), false);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_html(d [, p, ps])\n\t\t * @param  {jQuery} d the jQuery object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_html : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = [].concat(ps); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar c, e, m = this._model.data,\n\t\t\t\tdata = {\n\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\ttext\t\t: false,\n\t\t\t\t\ticon\t\t: true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: [],\n\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t}, i, tmp, tid;\n\t\t\tfor(i in this._model.default_state) {\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = $.vakata.attributes(d, true);\n\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\tv = $.trim(v);\n\t\t\t\tif(!v.length) { return true; }\n\t\t\t\tdata.li_attr[i] = v;\n\t\t\t\tif(i === 'id') {\n\t\t\t\t\tdata.id = v.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t\ttmp = d.children('a').first();\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\n\t\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\t\tv = $.trim(v);\n\t\t\t\t\tif(v.length) {\n\t\t\t\t\t\tdata.a_attr[i] = v;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\ttmp = d.children(\"a\").first().length ? d.children(\"a\").first().clone() : d.clone();\n\t\t\ttmp.children(\"ins, i, ul\").remove();\n\t\t\ttmp = tmp.html();\n\t\t\ttmp = $('<div />').html(tmp);\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\n\t\t\ttmp = d.data();\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\n\t\t\tif(data.data && data.data.jstree) {\n\t\t\t\tfor(i in data.data.jstree) {\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\n\t\t\tif(tmp.length) {\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\n\t\t\t}\n\t\t\tif(data.state.icon !== undefined) {\n\t\t\t\tdata.icon = data.state.icon;\n\t\t\t}\n\t\t\tif(data.icon === undefined || data.icon === null || data.icon === \"\") {\n\t\t\t\tdata.icon = true;\n\t\t\t}\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp.each($.proxy(function (i, v) {\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\n\t\t\t\t\te = this._model.data[c];\n\t\t\t\t\tdata.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(d.hasClass('jstree-closed')) {\n\t\t\t\t\tdata.state.loaded = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.li_attr['class']) {\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\n\t\t\t}\n\t\t\tif(data.a_attr['class']) {\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\n\t\t\t}\n\t\t\tm[data.id] = data;\n\t\t\tif(data.state.selected) {\n\t\t\t\tthis._data.core.selected.push(data.id);\n\t\t\t}\n\t\t\treturn data.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = d.id.toString(),\n\t\t\t\tm = this._model.data,\n\t\t\t\tdf = this._model.default_state,\n\t\t\t\ti, j, c, e,\n\t\t\t\ttmp = {\n\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\n\t\t\t\ttmp.icon = true;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tm[tmp.id] = tmp;\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\te = m[c];\n\t\t\t\ttmp.children_d.push(c);\n\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\tm[tmp.id].original = d;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\n\t\t\ttmp = {\n\t\t\t\tid\t\t\t: false,\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\tparent\t\t: p,\n\t\t\t\tparents\t\t: ps,\n\t\t\t\tchildren\t: [],\n\t\t\t\tchildren_d\t: [],\n\t\t\t\tdata\t\t: null,\n\t\t\t\tstate\t\t: { },\n\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\toriginal\t: false\n\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\n\t\t\t\ttmp.icon = true;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t}\n\t\t\tif(!tmp.id) {\n\t\t\t\ttmp.id = tid;\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\n\t\t\t\t\te = m[c];\n\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\ttmp.original = d;\n\t\t\tm[tmp.id] = tmp;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn. Used internally.\n\t\t * @private\n\t\t * @name _redraw()\n\t\t * @trigger redraw.jstree\n\t\t */\n\t\t_redraw : function () {\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data[$.jstree.root].children.concat([]) : this._model.changed.concat([]),\n\t\t\t\tf = document.createElement('UL'), tmp, i, j, fe = this._data.core.focused;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\n\t\t\t\t\tf.appendChild(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this._model.force_full_redraw) {\n\t\t\t\tf.className = this.get_container_ul()[0].className;\n\t\t\t\tf.setAttribute('role','group');\n\t\t\t\tthis.element.empty().append(f);\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\n\t\t\t}\n\t\t\tif(fe !== null) {\n\t\t\t\ttmp = this.get_node(fe, true);\n\t\t\t\tif(tmp && tmp.length && tmp.children('.jstree-anchor')[0] !== document.activeElement) {\n\t\t\t\t\ttmp.children('.jstree-anchor').focus();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.focused = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = false;\n\t\t\tthis._model.changed = [];\n\t\t\t/**\n\t\t\t * triggered after nodes are redrawn\n\t\t\t * @event\n\t\t\t * @name redraw.jstree\n\t\t\t * @param {array} nodes the redrawn nodes\n\t\t\t */\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\n\t\t * @name redraw([full])\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\n\t\t */\n\t\tredraw : function (full) {\n\t\t\tif(full) {\n\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t}\n\t\t\t//if(this._model.redraw_timeout) {\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\n\t\t\t//}\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\n\t\t\tthis._redraw();\n\t\t},\n\t\t/**\n\t\t * redraws a single node's children. Used internally.\n\t\t * @private\n\t\t * @name draw_children(node)\n\t\t * @param {mixed} node the node whose children will be redrawn\n\t\t */\n\t\tdraw_children : function (node) {\n\t\t\tvar obj = this.get_node(node),\n\t\t\t\ti = false,\n\t\t\t\tj = false,\n\t\t\t\tk = false,\n\t\t\t\td = document;\n\t\t\tif(!obj) { return false; }\n\t\t\tif(obj.id === $.jstree.root) { return this.redraw(true); }\n\t\t\tnode = this.get_node(node, true);\n\t\t\tif(!node || !node.length) { return false; } // TODO: quick toggle\n\n\t\t\tnode.children('.jstree-children').remove();\n\t\t\tnode = node[0];\n\t\t\tif(obj.children.length && obj.state.loaded) {\n\t\t\t\tk = d.createElement('UL');\n\t\t\t\tk.setAttribute('role', 'group');\n\t\t\t\tk.className = 'jstree-children';\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], true, true));\n\t\t\t\t}\n\t\t\t\tnode.appendChild(k);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * redraws a single node. Used internally.\n\t\t * @private\n\t\t * @name redraw_node(node, deep, is_callback, force_render)\n\t\t * @param {mixed} node the node to redraw\n\t\t * @param {Boolean} deep should child nodes be redrawn too\n\t\t * @param {Boolean} is_callback is this a recursion call\n\t\t * @param {Boolean} force_render should children of closed parents be drawn anyway\n\t\t */\n\t\tredraw_node : function (node, deep, is_callback, force_render) {\n\t\t\tvar obj = this.get_node(node),\n\t\t\t\tpar = false,\n\t\t\t\tind = false,\n\t\t\t\told = false,\n\t\t\t\ti = false,\n\t\t\t\tj = false,\n\t\t\t\tk = false,\n\t\t\t\tc = '',\n\t\t\t\td = document,\n\t\t\t\tm = this._model.data,\n\t\t\t\tf = false,\n\t\t\t\ts = false,\n\t\t\t\ttmp = null,\n\t\t\t\tt = 0,\n\t\t\t\tl = 0,\n\t\t\t\thas_children = false,\n\t\t\t\tlast_sibling = false;\n\t\t\tif(!obj) { return false; }\n\t\t\tif(obj.id === $.jstree.root) {  return this.redraw(true); }\n\t\t\tdeep = deep || obj.children.length === 0;\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\n\t\t\tif(!node) {\n\t\t\t\tdeep = true;\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = obj.parent !== $.jstree.root ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m[$.jstree.root].children : m[obj.parent].children);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode = $(node);\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = node.parent().parent()[0];\n\t\t\t\t\tif(par === this.element[0]) {\n\t\t\t\t\t\tpar = null;\n\t\t\t\t\t}\n\t\t\t\t\tind = node.index();\n\t\t\t\t}\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\n\t\t\t\t\tdeep = true;\n\t\t\t\t}\n\t\t\t\tif(!deep) {\n\t\t\t\t\told = node.children('.jstree-children')[0];\n\t\t\t\t}\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\n\t\t\t\tnode.remove();\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\t//node = node[0];\n\t\t\t}\n\t\t\tnode = this._data.core.node.cloneNode(true);\n\t\t\t// node is DOM, deep is boolean\n\n\t\t\tc = 'jstree-node ';\n\t\t\tfor(i in obj.li_attr) {\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\tif(i === 'id') { continue; }\n\t\t\t\t\tif(i !== 'class') {\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += obj.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!obj.a_attr.id) {\n\t\t\t\tobj.a_attr.id = obj.id + '_anchor';\n\t\t\t}\n\t\t\tnode.setAttribute('aria-selected', !!obj.state.selected);\n\t\t\tnode.setAttribute('aria-level', obj.parents.length);\n\t\t\tnode.setAttribute('aria-labelledby', obj.a_attr.id);\n\t\t\tif(obj.state.disabled) {\n\t\t\t\tnode.setAttribute('aria-disabled', true);\n\t\t\t}\n\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\tif(!m[obj.children[i]].state.hidden) {\n\t\t\t\t\thas_children = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(obj.parent !== null && m[obj.parent] && !obj.state.hidden) {\n\t\t\t\ti = $.inArray(obj.id, m[obj.parent].children);\n\t\t\t\tlast_sibling = obj.id;\n\t\t\t\tif(i !== -1) {\n\t\t\t\t\ti++;\n\t\t\t\t\tfor(j = m[obj.parent].children.length; i < j; i++) {\n\t\t\t\t\t\tif(!m[m[obj.parent].children[i]].state.hidden) {\n\t\t\t\t\t\t\tlast_sibling = m[obj.parent].children[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(last_sibling !== obj.id) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(obj.state.hidden) {\n\t\t\t\tc += ' jstree-hidden';\n\t\t\t}\n\t\t\tif (obj.state.loading) {\n\t\t\t\tc += ' jstree-loading';\n\t\t\t}\n\t\t\tif(obj.state.loaded && !has_children) {\n\t\t\t\tc += ' jstree-leaf';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\n\t\t\t}\n\t\t\tif(last_sibling === obj.id) {\n\t\t\t\tc += ' jstree-last';\n\t\t\t}\n\t\t\tnode.id = obj.id;\n\t\t\tnode.className = c;\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\n\t\t\tfor(j in obj.a_attr) {\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\n\t\t\t\t\tif(j !== 'class') {\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c.length) {\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\n\t\t\t}\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\n\t\t\t\tif(obj.icon === false) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\n\t\t\t\t}\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url(\"'+obj.icon+'\")';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(this.settings.core.force_text) {\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\n\t\t\t}\n\n\n\t\t\tif(deep && obj.children.length && (obj.state.opened || force_render) && obj.state.loaded) {\n\t\t\t\tk = d.createElement('UL');\n\t\t\t\tk.setAttribute('role', 'group');\n\t\t\t\tk.className = 'jstree-children';\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\n\t\t\t\t}\n\t\t\t\tnode.appendChild(k);\n\t\t\t}\n\t\t\tif(old) {\n\t\t\t\tnode.appendChild(old);\n\t\t\t}\n\t\t\tif(!is_callback) {\n\t\t\t\t// append back using par / ind\n\t\t\t\tif(!par) {\n\t\t\t\t\tpar = this.element[0];\n\t\t\t\t}\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\n\t\t\t\t\t\ttmp = par.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!tmp) {\n\t\t\t\t\ttmp = d.createElement('UL');\n\t\t\t\t\ttmp.setAttribute('role', 'group');\n\t\t\t\t\ttmp.className = 'jstree-children';\n\t\t\t\t\tpar.appendChild(tmp);\n\t\t\t\t}\n\t\t\t\tpar = tmp;\n\n\t\t\t\tif(ind < par.childNodes.length) {\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpar.appendChild(node);\n\t\t\t\t}\n\t\t\t\tif(f) {\n\t\t\t\t\tt = this.element[0].scrollTop;\n\t\t\t\t\tl = this.element[0].scrollLeft;\n\t\t\t\t\tnode.childNodes[1].focus();\n\t\t\t\t\tthis.element[0].scrollTop = t;\n\t\t\t\t\tthis.element[0].scrollLeft = l;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\n\t\t\t\tobj.state.opened = false;\n\t\t\t\tsetTimeout($.proxy(function () {\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\n\t\t\t\t}, this), 0);\n\t\t\t}\n\t\t\treturn node;\n\t\t},\n\t\t/**\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_node(obj [, callback, animation])\n\t\t * @param {mixed} obj the node to open\n\t\t * @param {Function} callback a function to execute once the node is opened\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\n\t\t */\n\t\topen_node : function (obj, callback, animation) {\n\t\t\tvar t1, t2, d, t;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tif(!this.is_closed(obj)) {\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, false);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!this.is_loaded(obj)) {\n\t\t\t\tif(this.is_loading(obj)) {\n\t\t\t\t\treturn setTimeout($.proxy(function () {\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\n\t\t\t\t\t}, this), 500);\n\t\t\t\t}\n\t\t\t\tthis.load_node(obj, function (o, ok) {\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\td = this.get_node(obj, true);\n\t\t\t\tt = this;\n\t\t\t\tif(d.length) {\n\t\t\t\t\tif(animation && d.children(\".jstree-children\").length) {\n\t\t\t\t\t\td.children(\".jstree-children\").stop(true, true);\n\t\t\t\t\t}\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\n\t\t\t\t\t\tthis.draw_children(obj);\n\t\t\t\t\t\t//d = this.get_node(obj, true);\n\t\t\t\t\t}\n\t\t\t\t\tif(!animation) {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\t\t\tif (t.element) {\n\t\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobj.state.opened = true;\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, true);\n\t\t\t\t}\n\t\t\t\tif(!d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name before_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\n\t\t\t\t * @event\n\t\t\t\t * @name open_node.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\n\t\t\t\tif(!animation || !d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name after_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens every parent of a node (node should be loaded)\n\t\t * @name _open_to(obj)\n\t\t * @param {mixed} obj the node to reveal\n\t\t * @private\n\t\t */\n\t\t_open_to : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = obj.parents;\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\n\t\t\t\tif(i !== $.jstree.root) {\n\t\t\t\t\tthis.open_node(p[i], false, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t},\n\t\t/**\n\t\t * closes a node, hiding its children\n\t\t * @name close_node(obj [, animation])\n\t\t * @param {mixed} obj the node to close\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger close_node.jstree, after_close.jstree\n\t\t */\n\t\tclose_node : function (obj, animation) {\n\t\t\tvar t1, t2, t, d;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.close_node(obj[t1], animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tt = this;\n\t\t\td = this.get_node(obj, true);\n\n\t\t\tobj.state.opened = false;\n\t\t\t/**\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\n\t\t\t * @event\n\t\t\t * @name close_node.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\n\t\t\tif(!d.length) {\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is closed and the animation is complete\n\t\t\t\t * @event\n\t\t\t\t * @name after_close.jstree\n\t\t\t\t * @param {Object} node the closed node\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(!animation) {\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\n\t\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\n\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\n\t\t\t\t\t\t\tif (t.element) {\n\t\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\n\t\t * @name toggle_node(obj)\n\t\t * @param {mixed} obj the node to toggle\n\t\t */\n\t\ttoggle_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.toggle_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn this.open_node(obj);\n\t\t\t}\n\t\t\tif(this.is_open(obj)) {\n\t\t\t\treturn this.close_node(obj);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_all([obj, animation, original_obj])\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\n\t\t * @trigger open_all.jstree\n\t\t */\n\t\topen_all : function (obj, animation, original_obj) {\n\t\t\tif(!obj) { obj = $.jstree.root; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\n\t\t\t}\n\t\t\toriginal_obj = original_obj || dom;\n\t\t\t_this = this;\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\n\t\t\tdom.each(function () {\n\t\t\t\t_this.open_node(\n\t\t\t\t\tthis,\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\n\t\t\t\t\tanimation || 0\n\t\t\t\t);\n\t\t\t});\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\n\t\t\t\t/**\n\t\t\t\t * triggered when an `open_all` call completes\n\t\t\t\t * @event\n\t\t\t\t * @name open_all.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * closes all nodes within a node (or the tree), revaling their children\n\t\t * @name close_all([obj, animation])\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\n\t\t * @trigger close_all.jstree\n\t\t */\n\t\tclose_all : function (obj, animation) {\n\t\t\tif(!obj) { obj = $.jstree.root; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true),\n\t\t\t\t_this = this, i, j;\n\t\t\tif(dom.length) {\n\t\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\n\t\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when an `close_all` call completes\n\t\t\t * @event\n\t\t\t * @name close_all.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * checks if a node is disabled (not selectable)\n\t\t * @name is_disabled(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_disabled : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.disabled;\n\t\t},\n\t\t/**\n\t\t * enables a node - so that it can be selected\n\t\t * @name enable_node(obj)\n\t\t * @param {mixed} obj the node to enable\n\t\t * @trigger enable_node.jstree\n\t\t */\n\t\tenable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.enable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = false;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled').attr('aria-disabled', false);\n\t\t\t/**\n\t\t\t * triggered when an node is enabled\n\t\t\t * @event\n\t\t\t * @name enable_node.jstree\n\t\t\t * @param {Object} node the enabled node\n\t\t\t */\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * disables a node - so that it can not be selected\n\t\t * @name disable_node(obj)\n\t\t * @param {mixed} obj the node to disable\n\t\t * @trigger disable_node.jstree\n\t\t */\n\t\tdisable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.disable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = true;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled').attr('aria-disabled', true);\n\t\t\t/**\n\t\t\t * triggered when an node is disabled\n\t\t\t * @event\n\t\t\t * @name disable_node.jstree\n\t\t\t * @param {Object} node the disabled node\n\t\t\t */\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * determines if a node is hidden\n\t\t * @name is_hidden(obj)\n\t\t * @param {mixed} obj the node\n\t\t */\n\t\tis_hidden : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj.state.hidden === true;\n\t\t},\n\t\t/**\n\t\t * hides a node - it is still in the structure but will not be visible\n\t\t * @name hide_node(obj)\n\t\t * @param {mixed} obj the node to hide\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\n\t\t * @trigger hide_node.jstree\n\t\t */\n\t\thide_node : function (obj, skip_redraw) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.hide_node(obj[t1], true);\n\t\t\t\t}\n\t\t\t\tif (!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!obj.state.hidden) {\n\t\t\t\tobj.state.hidden = true;\n\t\t\t\tthis._node_changed(obj.parent);\n\t\t\t\tif(!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is hidden\n\t\t\t\t * @event\n\t\t\t\t * @name hide_node.jstree\n\t\t\t\t * @param {Object} node the hidden node\n\t\t\t\t */\n\t\t\t\tthis.trigger('hide_node', { 'node' : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * shows a node\n\t\t * @name show_node(obj)\n\t\t * @param {mixed} obj the node to show\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\n\t\t * @trigger show_node.jstree\n\t\t */\n\t\tshow_node : function (obj, skip_redraw) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.show_node(obj[t1], true);\n\t\t\t\t}\n\t\t\t\tif (!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(obj.state.hidden) {\n\t\t\t\tobj.state.hidden = false;\n\t\t\t\tthis._node_changed(obj.parent);\n\t\t\t\tif(!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is shown\n\t\t\t\t * @event\n\t\t\t\t * @name show_node.jstree\n\t\t\t\t * @param {Object} node the shown node\n\t\t\t\t */\n\t\t\t\tthis.trigger('show_node', { 'node' : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * hides all nodes\n\t\t * @name hide_all()\n\t\t * @trigger hide_all.jstree\n\t\t */\n\t\thide_all : function (skip_redraw) {\n\t\t\tvar i, m = this._model.data, ids = [];\n\t\t\tfor(i in m) {\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && !m[i].state.hidden) {\n\t\t\t\t\tm[i].state.hidden = true;\n\t\t\t\t\tids.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = true;\n\t\t\tif(!skip_redraw) {\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when all nodes are hidden\n\t\t\t * @event\n\t\t\t * @name hide_all.jstree\n\t\t\t * @param {Array} nodes the IDs of all hidden nodes\n\t\t\t */\n\t\t\tthis.trigger('hide_all', { 'nodes' : ids });\n\t\t\treturn ids;\n\t\t},\n\t\t/**\n\t\t * shows all nodes\n\t\t * @name show_all()\n\t\t * @trigger show_all.jstree\n\t\t */\n\t\tshow_all : function (skip_redraw) {\n\t\t\tvar i, m = this._model.data, ids = [];\n\t\t\tfor(i in m) {\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && m[i].state.hidden) {\n\t\t\t\t\tm[i].state.hidden = false;\n\t\t\t\t\tids.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = true;\n\t\t\tif(!skip_redraw) {\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when all nodes are shown\n\t\t\t * @event\n\t\t\t * @name show_all.jstree\n\t\t\t * @param {Array} nodes the IDs of all shown nodes\n\t\t\t */\n\t\t\tthis.trigger('show_all', { 'nodes' : ids });\n\t\t\treturn ids;\n\t\t},\n\t\t/**\n\t\t * called when a node is selected by the user. Used internally.\n\t\t * @private\n\t\t * @name activate_node(obj, e)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Object} e the related event\n\t\t * @trigger activate_node.jstree, changed.jstree\n\t\t */\n\t\tactivate_node : function (obj, e) {\n\t\t\tif(this.is_disabled(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!e || typeof e !== 'object') {\n\t\t\t\te = {};\n\t\t\t}\n\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\n\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\n\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.deselect_all(true);\n\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(e.shiftKey) {\n\t\t\t\t\tvar o = this.get_node(obj).id,\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\n\t\t\t\t\t\tc = false,\n\t\t\t\t\t\ti, j;\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\n\t\t\t\t\t\tif(p[i] === o) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(p[i] === l) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!this.is_disabled(p[i]) && (c || p[i] === o || p[i] === l)) {\n\t\t\t\t\t\t\tif (!this.is_hidden(p[i])) {\n\t\t\t\t\t\t\t\tthis.select_node(p[i], true, false, e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.deselect_node(p[i], true, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : this.get_node(obj), 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!this.is_selected(obj)) {\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when an node is clicked or intercated with by the user\n\t\t\t * @event\n\t\t\t * @name activate_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {Object} event the ooriginal event (if any) which triggered the call (may be an empty object)\n\t\t\t */\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj), 'event' : e });\n\t\t},\n\t\t/**\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name hover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger hover_node.jstree\n\t\t */\n\t\thover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\n\t\t\tif(o && o.length) { this.dehover_node(o); }\n\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is hovered\n\t\t\t * @event\n\t\t\t * @name hover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); }, 0);\n\t\t},\n\t\t/**\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name dehover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger dehover_node.jstree\n\t\t */\n\t\tdehover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.children('.jstree-anchor').removeClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is no longer hovered\n\t\t\t * @event\n\t\t\t * @name dehover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * select a node\n\t\t * @name select_node(obj [, supress_event, prevent_open])\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\n\t\t * @trigger select_node.jstree, changed.jstree\n\t\t */\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.selected) {\n\t\t\t\tobj.state.selected = true;\n\t\t\t\tthis._data.core.selected.push(obj.id);\n\t\t\t\tif(!prevent_open) {\n\t\t\t\t\tdom = this._open_to(obj);\n\t\t\t\t}\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is selected\n\t\t\t\t * @event\n\t\t\t\t * @name select_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when selection changes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name changed.jstree\n\t\t\t\t\t * @param {Object} node\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\n\t\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect a node\n\t\t * @name deselect_node(obj [, supress_event])\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_node.jstree, changed.jstree\n\t\t */\n\t\tdeselect_node : function (obj, supress_event, e) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.selected) {\n\t\t\t\tobj.state.selected = false;\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is deselected\n\t\t\t\t * @event\n\t\t\t\t * @name deselect_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * select all nodes in the tree\n\t\t * @name select_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger select_all.jstree, changed.jstree\n\t\t */\n\t\tselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tthis._data.core.selected = this._model.data[$.jstree.root].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are selected\n\t\t\t * @event\n\t\t\t * @name select_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect all selected nodes\n\t\t * @name deselect_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_all.jstree, changed.jstree\n\t\t */\n\t\tdeselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.core.selected = [];\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked').parent().attr('aria-selected', false);\n\t\t\t/**\n\t\t\t * triggered when all nodes are deselected\n\t\t\t * @event\n\t\t\t * @name deselect_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * checks if a node is selected\n\t\t * @name is_selected(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_selected : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.state.selected;\n\t\t},\n\t\t/**\n\t\t * get an array of all selected nodes\n\t\t * @name get_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_selected : function (full) {\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\n\t\t},\n\t\t/**\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\n\t\t * @name get_top_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_top_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t},\n\t\t/**\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\n\t\t * @name get_bottom_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_bottom_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t},\n\t\t/**\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\n\t\t * @name get_state()\n\t\t * @private\n\t\t * @return {Object}\n\t\t */\n\t\tget_state : function () {\n\t\t\tvar state\t= {\n\t\t\t\t'core' : {\n\t\t\t\t\t'open' : [],\n\t\t\t\t\t'loaded' : [],\n\t\t\t\t\t'scroll' : {\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\n\t\t\t\t\t\t'top' : this.element.scrollTop()\n\t\t\t\t\t},\n\t\t\t\t\t/*!\n\t\t\t\t\t'themes' : {\n\t\t\t\t\t\t'name' : this.get_theme(),\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\n\t\t\t\t\t},\n\t\t\t\t\t*/\n\t\t\t\t\t'selected' : []\n\t\t\t\t}\n\t\t\t}, i;\n\t\t\tfor(i in this._model.data) {\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\n\t\t\t\t\tif(i !== $.jstree.root) {\n\t\t\t\t\t\tif(this._model.data[i].state.loaded && this.settings.core.loaded_state) {\n\t\t\t\t\t\t\tstate.core.loaded.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\n\t\t\t\t\t\t\tstate.core.open.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\n\t\t\t\t\t\t\tstate.core.selected.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state;\n\t\t},\n\t\t/**\n\t\t * sets the state of the tree. Used internally.\n\t\t * @name set_state(state [, callback])\n\t\t * @private\n\t\t * @param {Object} state the state to restore. Keep in mind this object is passed by reference and jstree will modify it.\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\n\t\t * @trigger set_state.jstree\n\t\t */\n\t\tset_state : function (state, callback) {\n\t\t\tif(state) {\n\t\t\t\tif(state.core && state.core.selected && state.core.initial_selection === undefined) {\n\t\t\t\t\tstate.core.initial_selection = this._data.core.selected.concat([]).sort().join(',');\n\t\t\t\t}\n\t\t\t\tif(state.core) {\n\t\t\t\t\tvar res, n, t, _this, i;\n\t\t\t\t\tif(state.core.loaded) {\n\t\t\t\t\t\tif(!this.settings.core.loaded_state || !$.isArray(state.core.loaded) || !state.core.loaded.length) {\n\t\t\t\t\t\t\tdelete state.core.loaded;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis._load_nodes(state.core.loaded, function (nodes) {\n\t\t\t\t\t\t\t\tdelete state.core.loaded;\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.open) {\n\t\t\t\t\t\tif(!$.isArray(state.core.open) || !state.core.open.length) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis._load_nodes(state.core.open, function (nodes) {\n\t\t\t\t\t\t\t\tthis.open_node(nodes, false, 0);\n\t\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.scroll) {\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.scroll;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.selected) {\n\t\t\t\t\t\t_this = this;\n\t\t\t\t\t\tif (state.core.initial_selection === undefined ||\n\t\t\t\t\t\t\tstate.core.initial_selection === this._data.core.selected.concat([]).sort().join(',')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.deselect_all();\n\t\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\n\t\t\t\t\t\t\t\t_this.select_node(v, false, true);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.initial_selection;\n\t\t\t\t\t\tdelete state.core.selected;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tfor(i in state) {\n\t\t\t\t\t\tif(state.hasOwnProperty(i) && i !== \"core\" && $.inArray(i, this.settings.plugins) === -1) {\n\t\t\t\t\t\t\tdelete state[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\n\t\t\t\t\t\tdelete state.core;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($.isEmptyObject(state)) {\n\t\t\t\t\tstate = null;\n\t\t\t\t\tif(callback) { callback.call(this); }\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a `set_state` call completes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name set_state.jstree\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('set_state');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t/**\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\n\t\t * @name refresh()\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\n\t\t * @trigger refresh.jstree\n\t\t */\n\t\trefresh : function (skip_loading, forget_state) {\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\n\t\t\tthis._cnt = 0;\n\t\t\tthis._model.data = {};\n\t\t\tthis._model.data[$.jstree.root] = {\n\t\t\t\tid : $.jstree.root,\n\t\t\t\tparent : null,\n\t\t\t\tparents : [],\n\t\t\t\tchildren : [],\n\t\t\t\tchildren_d : [],\n\t\t\t\tstate : { loaded : false }\n\t\t\t};\n\t\t\tthis._data.core.selected = [];\n\t\t\tthis._data.core.last_clicked = null;\n\t\t\tthis._data.core.focused = null;\n\n\t\t\tvar c = this.get_container_ul()[0].className;\n\t\t\tif(!skip_loading) {\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"' role='group'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='treeitem' id='j\"+this._id+\"_loading'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\t\tthis.element.attr('aria-activedescendant','j'+this._id+'_loading');\n\t\t\t}\n\t\t\tthis.load_node($.jstree.root, function (o, s) {\n\t\t\t\tif(s) {\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\n\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\n\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\n\t\t\t\t\t}\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered when a `refresh` call completes\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @name refresh.jstree\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.trigger('refresh');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis._data.core.state = null;\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\n\t\t * @name refresh_node(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @trigger refresh_node.jstree\n\t\t */\n\t\trefresh_node : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\n\t\t\tto_load.push(obj.id);\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { to_load.push(this.id); opened.push(this.id); });\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\n\t\t\t\tthis.open_node(opened, false, 0);\n\t\t\t\tthis.select_node(s);\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is refreshed\n\t\t\t\t * @event\n\t\t\t\t * @name refresh_node.jstree\n\t\t\t\t * @param {Object} node - the refreshed node\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\n\t\t\t\t */\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\n\t\t\t}, this), false, true);\n\t\t},\n\t\t/**\n\t\t * set (change) the ID of a node\n\t\t * @name set_id(obj, id)\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} id the new ID\n\t\t * @return {Boolean}\n\t\t * @trigger set_id.jstree\n\t\t */\n\t\tset_id : function (obj, id) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\tvar i, j, m = this._model.data, old = obj.id;\n\t\t\tid = id.toString();\n\t\t\t// update parents (replace current ID with new one in children and children_d)\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\n\t\t\t}\n\t\t\t// update children (replace current ID with new one in parent and parents)\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\tm[obj.children[i]].parent = id;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\n\t\t\t}\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\n\t\t\ti = this.get_node(obj.id, true);\n\t\t\tif(i) {\n\t\t\t\ti.attr('id', id); //.children('.jstree-anchor').attr('id', id + '_anchor').end().attr('aria-labelledby', id + '_anchor');\n\t\t\t\tif(this.element.attr('aria-activedescendant') === obj.id) {\n\t\t\t\t\tthis.element.attr('aria-activedescendant', id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete m[obj.id];\n\t\t\tobj.id = id;\n\t\t\tobj.li_attr.id = id;\n\t\t\tm[id] = obj;\n\t\t\t/**\n\t\t\t * triggered when a node id value is changed\n\t\t\t * @event\n\t\t\t * @name set_id.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} old the old id\n\t\t\t */\n\t\t\tthis.trigger('set_id',{ \"node\" : obj, \"new\" : obj.id, \"old\" : old });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the text value of a node\n\t\t * @name get_text(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @return {String}\n\t\t */\n\t\tget_text : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.text;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\n\t\t * @private\n\t\t * @name set_text(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger set_text.jstree\n\t\t */\n\t\tset_text : function (obj, val) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_text(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\tobj.text = val;\n\t\t\tif(this.get_node(obj, true).length) {\n\t\t\t\tthis.redraw_node(obj.id);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node text value is changed\n\t\t\t * @event\n\t\t\t * @name set_text.jstree\n\t\t\t * @param {Object} obj\n\t\t\t * @param {String} text the new value\n\t\t\t */\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * gets a JSON representation of a node (or the whole tree)\n\t\t * @name get_json([obj, options])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Object} options\n\t\t * @param  {Boolean} options.no_state do not return state information\n\t\t * @param  {Boolean} options.no_id do not return ID\n\t\t * @param  {Boolean} options.no_children do not include children\n\t\t * @param  {Boolean} options.no_data do not include node data\n\t\t * @param  {Boolean} options.no_li_attr do not include LI attributes\n\t\t * @param  {Boolean} options.no_a_attr do not include A attributes\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\n\t\t * @return {Object}\n\t\t */\n\t\tget_json : function (obj, options, flat) {\n\t\t\tobj = this.get_node(obj || $.jstree.root);\n\t\t\tif(!obj) { return false; }\n\t\t\tif(options && options.flat && !flat) { flat = []; }\n\t\t\tvar tmp = {\n\t\t\t\t'id' : obj.id,\n\t\t\t\t'text' : obj.text,\n\t\t\t\t'icon' : this.get_icon(obj),\n\t\t\t\t'li_attr' : $.extend(true, {}, obj.li_attr),\n\t\t\t\t'a_attr' : $.extend(true, {}, obj.a_attr),\n\t\t\t\t'state' : {},\n\t\t\t\t'data' : options && options.no_data ? false : $.extend(true, $.isArray(obj.data)?[]:{}, obj.data)\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\n\t\t\t}, i, j;\n\t\t\tif(options && options.flat) {\n\t\t\t\ttmp.parent = obj.parent;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.children = [];\n\t\t\t}\n\t\t\tif(!options || !options.no_state) {\n\t\t\t\tfor(i in obj.state) {\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete tmp.state;\n\t\t\t}\n\t\t\tif(options && options.no_li_attr) {\n\t\t\t\tdelete tmp.li_attr;\n\t\t\t}\n\t\t\tif(options && options.no_a_attr) {\n\t\t\t\tdelete tmp.a_attr;\n\t\t\t}\n\t\t\tif(options && options.no_id) {\n\t\t\t\tdelete tmp.id;\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t\t}\n\t\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\n\t\t\t\t\tdelete tmp.a_attr.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.flat && obj.id !== $.jstree.root) {\n\t\t\t\tflat.push(tmp);\n\t\t\t}\n\t\t\tif(!options || !options.no_children) {\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tif(options && options.flat) {\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn options && options.flat ? flat : (obj.id === $.jstree.root ? tmp.children : tmp);\n\t\t},\n\t\t/**\n\t\t * create a new node (do not confuse with load_node)\n\t\t * @name create_node([par, node, pos, callback, is_loaded])\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\n\t\t * @param  {Function} callback a function to be called once the node is created\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\n\t\t * @return {String}            the ID of the newly create node\n\t\t * @trigger model.jstree, create_node.jstree\n\t\t */\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\n\t\t\tif(par === null) { par = $.jstree.root; }\n\t\t\tpar = this.get_node(par);\n\t\t\tif(!par) { return false; }\n\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\n\t\t\t}\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\n\t\t\tif(typeof node === \"string\") {\n\t\t\t\tnode = { \"text\" : node };\n\t\t\t} else {\n\t\t\t\tnode = $.extend(true, {}, node);\n\t\t\t}\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\n\t\t\tvar tmp, dpc, i, j;\n\n\t\t\tif(par.id === $.jstree.root) {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\n\t\t\tif(!node.id) { node.id = true; }\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\n\n\t\t\tpar.children_d = par.children_d.concat(dpc);\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tnode = tmp;\n\t\t\ttmp = [];\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\n\t\t\t}\n\t\t\ttmp[pos] = node.id;\n\t\t\tpar.children = tmp;\n\n\t\t\tthis.redraw_node(par, true);\n\t\t\t/**\n\t\t\t * triggered when a node is created\n\t\t\t * @event\n\t\t\t * @name create_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the new node among the parent's children\n\t\t\t */\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\n\t\t\treturn node.id;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node\n\t\t * @name rename_node(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger rename_node.jstree\n\t\t */\n\t\trename_node : function (obj, val) {\n\t\t\tvar t1, t2, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.rename_node(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\told = obj.text;\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\n\t\t\t/**\n\t\t\t * triggered when a node is renamed\n\t\t\t * @event\n\t\t\t * @name rename_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} text the new value\n\t\t\t * @param {String} old the old value\n\t\t\t */\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * remove a node\n\t\t * @name delete_node(obj)\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\n\t\t * @return {Boolean}\n\t\t * @trigger delete_node.jstree, changed.jstree\n\t\t */\n\t\tdelete_node : function (obj) {\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c, top, lft;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.delete_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\tpar = this.get_node(obj.parent);\n\t\t\tpos = $.inArray(obj.id, par.children);\n\t\t\tc = false;\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(pos !== -1) {\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\n\t\t\t}\n\t\t\ttmp = obj.children_d.concat([]);\n\t\t\ttmp.push(obj.id);\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\n\t\t\t\t\tc = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (c) {\n\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\n\t\t\t\t});\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node is deleted\n\t\t\t * @event\n\t\t\t * @name delete_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t */\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\n\t\t\tif(c) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\n\t\t\t}\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tdelete this._model.data[tmp[k]];\n\t\t\t}\n\t\t\tif($.inArray(this._data.core.focused, tmp) !== -1) {\n\t\t\t\tthis._data.core.focused = null;\n\t\t\t\ttop = this.element[0].scrollTop;\n\t\t\t\tlft = this.element[0].scrollLeft;\n\t\t\t\tif(par.id === $.jstree.root) {\n\t\t\t\t\tif (this._model.data[$.jstree.root].children[0]) {\n\t\t\t\t\t\tthis.get_node(this._model.data[$.jstree.root].children[0], true).children('.jstree-anchor').focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.get_node(par, true).children('.jstree-anchor').focus();\n\t\t\t\t}\n\t\t\t\tthis.element[0].scrollTop  = top;\n\t\t\t\tthis.element[0].scrollLeft = lft;\n\t\t\t}\n\t\t\tthis.redraw_node(par, true);\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * check if an operation is premitted on the tree. Used internally.\n\t\t * @private\n\t\t * @name check(chk, obj, par, pos)\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {mixed} par the parent\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheck : function (chk, obj, par, pos, more) {\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\n\t\t\t\tchc = this.settings.core.check_callback;\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || (chk === \"move_node\" && $.inArray(obj.id, par.children) === pos) || $.inArray(par.id, obj.children_d) !== -1)) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\n\t\t\t\tif(tmp.functions[chk] === false) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t}\n\t\t\t\treturn tmp.functions[chk];\n\t\t\t}\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the last error\n\t\t * @name last_error()\n\t\t * @return {Object}\n\t\t */\n\t\tlast_error : function () {\n\t\t\treturn this._data.core.last_error;\n\t\t},\n\t\t/**\n\t\t * move a node to a new parent\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\n\t\t * @trigger move_node.jstree\n\t\t */\n\t\tmove_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true, false, origin); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tif(obj.length === 1) {\n\t\t\t\t\tobj = obj[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//obj = obj.slice();\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\t\tif((tmp = this.move_node(obj[t1], par, pos, callback, is_loaded, false, origin))) {\n\t\t\t\t\t\t\tpar = tmp;\n\t\t\t\t\t\t\tpos = \"after\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.redraw();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\n\t\t\tif(old_ins && old_ins._id) {\n\t\t\t\tobj = old_ins._model.data[obj.id];\n\t\t\t}\n\n\t\t\tif(is_multi) {\n\t\t\t\tif((tmp = this.copy_node(obj, par, pos, callback, is_loaded, false, origin))) {\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\n\t\t\t\t\treturn tmp;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//var m = this._model.data;\n\t\t\tif(par.id === $.jstree.root) {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(obj.parent === new_par.id) {\n\t\t\t\tdpc = new_par.children.concat();\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\n\t\t\t\tif(tmp !== -1) {\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\n\t\t\t\t\tif(pos > tmp) { pos--; }\n\t\t\t\t}\n\t\t\t\ttmp = [];\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\n\t\t\t\t}\n\t\t\t\ttmp[pos] = obj.id;\n\t\t\t\tnew_par.children = tmp;\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// clean old parent and up\n\t\t\t\ttmp = obj.children_d.concat();\n\t\t\t\ttmp.push(obj.id);\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tdpc = [];\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\n\t\t\t\t\t\t\tdpc.push(p[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\n\t\t\t\t}\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\n\n\t\t\t\t// insert into new parent and up\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\n\t\t\t\t}\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t\t}\n\t\t\t\tdpc[pos] = obj.id;\n\t\t\t\tnew_par.children = dpc;\n\t\t\t\tnew_par.children_d.push(obj.id);\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\n\n\t\t\t\t// update object\n\t\t\t\tobj.parent = new_par.id;\n\t\t\t\ttmp = new_par.parents.concat();\n\t\t\t\ttmp.unshift(new_par.id);\n\t\t\t\tp = obj.parents.length;\n\t\t\t\tobj.parents = tmp;\n\n\t\t\t\t// update object children\n\t\t\t\ttmp = tmp.concat();\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\n\t\t\t\t}\n\n\t\t\t\tif(old_par === $.jstree.root || new_par.id === $.jstree.root) {\n\t\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t\t}\n\t\t\t\tif(!this._model.force_full_redraw) {\n\t\t\t\t\tthis._node_changed(old_par);\n\t\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\t}\n\t\t\t\tif(!skip_redraw) {\n\t\t\t\t\tthis.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is moved\n\t\t\t * @event\n\t\t\t * @name move_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the old position of the node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn obj.id;\n\t\t},\n\t\t/**\n\t\t * copy a node to a new parent\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\n\t\t * @trigger model.jstree copy_node.jstree\n\t\t */\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true, false, origin); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tif(obj.length === 1) {\n\t\t\t\t\tobj = obj[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//obj = obj.slice();\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\t\tif((tmp = this.copy_node(obj[t1], par, pos, callback, is_loaded, true, origin))) {\n\t\t\t\t\t\t\tpar = tmp;\n\t\t\t\t\t\t\tpos = \"after\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.redraw();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\n\t\t\tif(old_ins && old_ins._id) {\n\t\t\t\tobj = old_ins._model.data[obj.id];\n\t\t\t}\n\n\t\t\tif(par.id === $.jstree.root) {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\n\t\t\tif(!node) { return false; }\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\n\n\t\t\t// insert into new parent and up\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tdpc = [];\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t}\n\t\t\tdpc[pos] = tmp.id;\n\t\t\tnew_par.children = dpc;\n\t\t\tnew_par.children_d.push(tmp.id);\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\n\n\t\t\tif(new_par.id === $.jstree.root) {\n\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t}\n\t\t\tif(!this._model.force_full_redraw) {\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t}\n\t\t\tif(!skip_redraw) {\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\n\t\t\t}\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is copied\n\t\t\t * @event\n\t\t\t * @name copy_node.jstree\n\t\t\t * @param {Object} node the copied node\n\t\t\t * @param {Object} original the original node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the position of the original node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\n\t\t * @name cut(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger cut.jstree\n\t\t */\n\t\tcut : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'move_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for moving\n\t\t\t * @event\n\t\t\t * @name cut.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('cut', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\n\t\t * @name copy(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger copy.jstree\n\t\t */\n\t\tcopy : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'copy_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for copying\n\t\t\t * @event\n\t\t\t * @name copy.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('copy', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\n\t\t * @name get_buffer()\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\n\t\t */\n\t\tget_buffer : function () {\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\n\t\t},\n\t\t/**\n\t\t * check if there is something in the buffer to paste\n\t\t * @name can_paste()\n\t\t * @return {Boolean}\n\t\t */\n\t\tcan_paste : function () {\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\n\t\t},\n\t\t/**\n\t\t * copy or move the previously cut or copied nodes to a new parent\n\t\t * @name paste(obj [, pos])\n\t\t * @param  {mixed} obj the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\n\t\t * @trigger paste.jstree\n\t\t */\n\t\tpaste : function (obj, pos) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos, false, false, false, ccp_inst)) {\n\t\t\t\t/**\n\t\t\t\t * triggered when paste is invoked\n\t\t\t\t * @event\n\t\t\t\t * @name paste.jstree\n\t\t\t\t * @param {String} parent the ID of the receiving node\n\t\t\t\t * @param {Array} node the nodes in the buffer\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\n\t\t\t\t */\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\n\t\t\t}\n\t\t\tccp_node = false;\n\t\t\tccp_mode = false;\n\t\t\tccp_inst = false;\n\t\t},\n\t\t/**\n\t\t * clear the buffer of previously copied or cut nodes\n\t\t * @name clear_buffer()\n\t\t * @trigger clear_buffer.jstree\n\t\t */\n\t\tclear_buffer : function () {\n\t\t\tccp_node = false;\n\t\t\tccp_mode = false;\n\t\t\tccp_inst = false;\n\t\t\t/**\n\t\t\t * triggered when the copy / cut buffer is cleared\n\t\t\t * @event\n\t\t\t * @name clear_buffer.jstree\n\t\t\t */\n\t\t\tthis.trigger('clear_buffer');\n\t\t},\n\t\t/**\n\t\t * put a node in edit mode (input field to rename the node)\n\t\t * @name edit(obj [, default_text, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {String} default_text the text to populate the input with (if omitted or set to a non-string value the node's text value is used)\n\t\t * @param  {Function} callback a function to be called once the text box is blurred, it is called in the instance's scope and receives the node, a status parameter (true if the rename is successful, false otherwise) and a boolean indicating if the user cancelled the edit. You can access the node's title using .text\n\t\t */\n\t\tedit : function (obj, default_text, callback) {\n\t\t\tvar rtl, w, a, s, t, h1, h2, fn, tmp, cancel = false;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tif(!this.check(\"edit\", obj, this.get_parent(obj))) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttmp = obj;\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\n\t\t\tthis.set_text(obj, \"\");\n\t\t\tobj = this._open_to(obj);\n\t\t\ttmp.text = default_text;\n\n\t\t\trtl = this._data.core.rtl;\n\t\t\tw  = this.element.width();\n\t\t\tthis._data.core.focused = tmp.id;\n\t\t\ta  = obj.children('.jstree-anchor').focus();\n\t\t\ts  = $('<span>');\n\t\t\t/*!\n\t\t\toi = obj.children(\"i:visible\"),\n\t\t\tai = a.children(\"i:visible\"),\n\t\t\tw1 = oi.width() * oi.length,\n\t\t\tw2 = ai.width() * ai.length,\n\t\t\t*/\n\t\t\tt  = default_text;\n\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(document.body);\n\t\t\th2 = $(\"<\"+\"input />\", {\n\t\t\t\t\t\t\"value\" : t,\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\n\t\t\t\t\t\t// \"size\" : t.length,\n\t\t\t\t\t\t\"css\" : {\n\t\t\t\t\t\t\t\"padding\" : \"0\",\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"blur\" : $.proxy(function (e) {\n\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\n\t\t\t\t\t\t\t\tv = i.val(),\n\t\t\t\t\t\t\t\tf = this.settings.core.force_text,\n\t\t\t\t\t\t\t\tnv;\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\n\t\t\t\t\t\t\th1.remove();\n\t\t\t\t\t\t\ts.replaceWith(a);\n\t\t\t\t\t\t\ts.remove();\n\t\t\t\t\t\t\tt = f ? t : $('<div></div>').append($.parseHTML(t)).html();\n\t\t\t\t\t\t\tthis.set_text(obj, t);\n\t\t\t\t\t\t\tnv = !!this.rename_node(obj, f ? $('<div></div>').text(v).text() : $('<div></div>').append($.parseHTML(v)).html());\n\t\t\t\t\t\t\tif(!nv) {\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\n\t\t\t\t\t\t\tsetTimeout($.proxy(function () {\n\t\t\t\t\t\t\t\tvar node = this.get_node(tmp.id, true);\n\t\t\t\t\t\t\t\tif(node.length) {\n\t\t\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\n\t\t\t\t\t\t\t\t\tnode.children('.jstree-anchor').focus();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, this), 0);\n\t\t\t\t\t\t\tif(callback) {\n\t\t\t\t\t\t\t\tcallback.call(this, tmp, nv, cancel);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\th2 = null;\n\t\t\t\t\t\t}, this),\n\t\t\t\t\t\t\"keydown\" : function (e) {\n\t\t\t\t\t\t\tvar key = e.which;\n\t\t\t\t\t\t\tif(key === 27) {\n\t\t\t\t\t\t\t\tcancel = true;\n\t\t\t\t\t\t\t\tthis.value = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"keyup\" : function (e) {\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"keypress\" : function(e) {\n\t\t\t\t\t\t\tif(e.which === 13) { return false; }\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tfn = {\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\n\t\t\t\t};\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\n\t\t\ta.replaceWith(s);\n\t\t\th1.css(fn);\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\n\t\t\t$(document).one('mousedown.jstree touchstart.jstree dnd_start.vakata', function (e) {\n\t\t\t\tif (h2 && e.target !== h2) {\n\t\t\t\t\t$(h2).blur();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * changes the theme\n\t\t * @name set_theme(theme_name [, theme_url])\n\t\t * @param {String} theme_name the name of the new theme to apply\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\n\t\t * @trigger set_theme.jstree\n\t\t */\n\t\tset_theme : function (theme_name, theme_url) {\n\t\t\tif(!theme_name) { return false; }\n\t\t\tif(theme_url === true) {\n\t\t\t\tvar dir = this.settings.core.themes.dir;\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\n\t\t\t}\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\n\t\t\t\tthemes_loaded.push(theme_url);\n\t\t\t}\n\t\t\tif(this._data.core.themes.name) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\n\t\t\t}\n\t\t\tthis._data.core.themes.name = theme_name;\n\t\t\tthis.element.addClass('jstree-' + theme_name);\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\n\t\t\t/**\n\t\t\t * triggered when a theme is set\n\t\t\t * @event\n\t\t\t * @name set_theme.jstree\n\t\t\t * @param {String} theme the new theme\n\t\t\t */\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme name\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme : function () { return this._data.core.themes.name; },\n\t\t/**\n\t\t * changes the theme variant (if the theme has variants)\n\t\t * @name set_theme_variant(variant_name)\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\n\t\t */\n\t\tset_theme_variant : function (variant_name) {\n\t\t\tif(this._data.core.themes.variant) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t\tthis._data.core.themes.variant = variant_name;\n\t\t\tif(variant_name) {\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme variant\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\n\t\t/**\n\t\t * shows a striped background on the container (if the theme supports it)\n\t\t * @name show_stripes()\n\t\t */\n\t\tshow_stripes : function () {\n\t\t\tthis._data.core.themes.stripes = true;\n\t\t\tthis.get_container_ul().addClass(\"jstree-striped\");\n\t\t\t/**\n\t\t\t * triggered when stripes are shown\n\t\t\t * @event\n\t\t\t * @name show_stripes.jstree\n\t\t\t */\n\t\t\tthis.trigger('show_stripes');\n\t\t},\n\t\t/**\n\t\t * hides the striped background on the container\n\t\t * @name hide_stripes()\n\t\t */\n\t\thide_stripes : function () {\n\t\t\tthis._data.core.themes.stripes = false;\n\t\t\tthis.get_container_ul().removeClass(\"jstree-striped\");\n\t\t\t/**\n\t\t\t * triggered when stripes are hidden\n\t\t\t * @event\n\t\t\t * @name hide_stripes.jstree\n\t\t\t */\n\t\t\tthis.trigger('hide_stripes');\n\t\t},\n\t\t/**\n\t\t * toggles the striped background on the container\n\t\t * @name toggle_stripes()\n\t\t */\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\n\t\t/**\n\t\t * shows the connecting dots (if the theme supports it)\n\t\t * @name show_dots()\n\t\t */\n\t\tshow_dots : function () {\n\t\t\tthis._data.core.themes.dots = true;\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-dots\");\n\t\t\t/**\n\t\t\t * triggered when dots are shown\n\t\t\t * @event\n\t\t\t * @name show_dots.jstree\n\t\t\t */\n\t\t\tthis.trigger('show_dots');\n\t\t},\n\t\t/**\n\t\t * hides the connecting dots\n\t\t * @name hide_dots()\n\t\t */\n\t\thide_dots : function () {\n\t\t\tthis._data.core.themes.dots = false;\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-dots\");\n\t\t\t/**\n\t\t\t * triggered when dots are hidden\n\t\t\t * @event\n\t\t\t * @name hide_dots.jstree\n\t\t\t */\n\t\t\tthis.trigger('hide_dots');\n\t\t},\n\t\t/**\n\t\t * toggles the connecting dots\n\t\t * @name toggle_dots()\n\t\t */\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\n\t\t/**\n\t\t * show the node icons\n\t\t * @name show_icons()\n\t\t */\n\t\tshow_icons : function () {\n\t\t\tthis._data.core.themes.icons = true;\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-icons\");\n\t\t\t/**\n\t\t\t * triggered when icons are shown\n\t\t\t * @event\n\t\t\t * @name show_icons.jstree\n\t\t\t */\n\t\t\tthis.trigger('show_icons');\n\t\t},\n\t\t/**\n\t\t * hide the node icons\n\t\t * @name hide_icons()\n\t\t */\n\t\thide_icons : function () {\n\t\t\tthis._data.core.themes.icons = false;\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-icons\");\n\t\t\t/**\n\t\t\t * triggered when icons are hidden\n\t\t\t * @event\n\t\t\t * @name hide_icons.jstree\n\t\t\t */\n\t\t\tthis.trigger('hide_icons');\n\t\t},\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_icons()\n\t\t */\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\n\t\t/**\n\t\t * show the node ellipsis\n\t\t * @name show_icons()\n\t\t */\n\t\tshow_ellipsis : function () {\n\t\t\tthis._data.core.themes.ellipsis = true;\n\t\t\tthis.get_container_ul().addClass(\"jstree-ellipsis\");\n\t\t\t/**\n\t\t\t * triggered when ellisis is shown\n\t\t\t * @event\n\t\t\t * @name show_ellipsis.jstree\n\t\t\t */\n\t\t\tthis.trigger('show_ellipsis');\n\t\t},\n\t\t/**\n\t\t * hide the node ellipsis\n\t\t * @name hide_ellipsis()\n\t\t */\n\t\thide_ellipsis : function () {\n\t\t\tthis._data.core.themes.ellipsis = false;\n\t\t\tthis.get_container_ul().removeClass(\"jstree-ellipsis\");\n\t\t\t/**\n\t\t\t * triggered when ellisis is hidden\n\t\t\t * @event\n\t\t\t * @name hide_ellipsis.jstree\n\t\t\t */\n\t\t\tthis.trigger('hide_ellipsis');\n\t\t},\n\t\t/**\n\t\t * toggle the node ellipsis\n\t\t * @name toggle_icons()\n\t\t */\n\t\ttoggle_ellipsis : function () { if(this._data.core.themes.ellipsis) { this.hide_ellipsis(); } else { this.show_ellipsis(); } },\n\t\t/**\n\t\t * set the node icon for a node\n\t\t * @name set_icon(obj, icon)\n\t\t * @param {mixed} obj\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t */\n\t\tset_icon : function (obj, icon) {\n\t\t\tvar t1, t2, dom, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\told = obj.icon;\n\t\t\tobj.icon = icon === true || icon === null || icon === undefined || icon === '' ? true : icon;\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\n\t\t\tif(icon === false) {\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\n\t\t\t\tthis.hide_icon(obj);\n\t\t\t}\n\t\t\telse if(icon === true || icon === null || icon === undefined || icon === '') {\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\n\t\t\t\tif(old === false) { this.show_icon(obj); }\n\t\t\t}\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\n\t\t\t\tif(old === false) { this.show_icon(obj); }\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\n\t\t\t\tif(old === false) { this.show_icon(obj); }\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the node icon for a node\n\t\t * @name get_icon(obj)\n\t\t * @param {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_icon : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.icon;\n\t\t},\n\t\t/**\n\t\t * hide the icon on an individual node\n\t\t * @name hide_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\thide_icon : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.hide_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\n\t\t\tobj.icon = false;\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * show the icon on an individual node\n\t\t * @name show_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\tshow_icon : function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.show_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\n\t\t\tif(!obj.icon) { obj.icon = true; }\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t}\n\t});\n\n\t// helpers\n\t$.vakata = {};\n\n\t$.vakata.search = function(pattern, txt, options) {\n\t\toptions = options || {};\n\t\tif(options.fuzzy !== false) {\n\t\t\toptions.fuzzy = true;\n\t\t}\n\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\n\t\tvar MATCH_LOCATION\t= options.location || 0,\n\t\t\tMATCH_DISTANCE\t= options.distance || 100,\n\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\n\t\t\tpatternLen = pattern.length;\n\t\tif(patternLen > 32) {\n\t\t\toptions.fuzzy = false;\n\t\t}\n\t\tif(options.fuzzy) {\n\t\t\tvar matchmask = 1 << (patternLen - 1);\n\t\t\tvar pattern_alphabet = (function () {\n\t\t\t\tvar mask = {},\n\t\t\t\t\ti = 0;\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tmask[pattern.charAt(i)] = 0;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\n\t\t\t\t}\n\t\t\t\treturn mask;\n\t\t\t})();\n\t\t\tvar match_bitapScore = function (e, x) {\n\t\t\t\tvar accuracy = e / patternLen,\n\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\n\t\t\t\tif(!MATCH_DISTANCE) {\n\t\t\t\t\treturn proximity ? 1.0 : accuracy;\n\t\t\t\t}\n\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\n\t\t\t};\n\t\t}\n\t\tvar search = function (text) {\n\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\n\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: true,\n\t\t\t\t\tscore: 0\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!options.fuzzy) {\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: false,\n\t\t\t\t\tscore: 1\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar i, j,\n\t\t\t\ttextLen = text.length,\n\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\n\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\n\t\t\t\tbinMin, binMid,\n\t\t\t\tbinMax = patternLen + textLen,\n\t\t\t\tlastRd, start, finish, rd, charMatch,\n\t\t\t\tscore = 1,\n\t\t\t\tlocations = [];\n\t\t\tif (bestLoc != -1) {\n\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\n\t\t\t\tif (bestLoc != -1) {\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbestLoc = -1;\n\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\tbinMin = 0;\n\t\t\t\tbinMid = binMax;\n\t\t\t\twhile (binMin < binMid) {\n\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\n\t\t\t\t\t\tbinMin = binMid;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\t}\n\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\n\t\t\t\t}\n\t\t\t\tbinMax = binMid;\n\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\n\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\n\t\t\t\trd = Array(finish + 2);\n\t\t\t\trd[finish + 1] = (1 << i) - 1;\n\t\t\t\tfor (j = finish; j >= start; j--) {\n\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\n\t\t\t\t\t}\n\t\t\t\t\tif (rd[j] & matchmask) {\n\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\n\t\t\t\t\t\tif (score <= scoreThreshold) {\n\t\t\t\t\t\t\tscoreThreshold = score;\n\t\t\t\t\t\t\tbestLoc = j - 1;\n\t\t\t\t\t\t\tlocations.push(bestLoc);\n\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\n\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlastRd = rd;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tisMatch: bestLoc >= 0,\n\t\t\t\tscore: score\n\t\t\t};\n\t\t};\n\t\treturn txt === true ? { 'search' : search } : search(txt);\n\t};\n\n\t// collect attributes\n\t$.vakata.attributes = function(node, with_values) {\n\t\tnode = $(node)[0];\n\t\tvar attr = with_values ? {} : [];\n\t\tif(node && node.attributes) {\n\t\t\t$.each(node.attributes, function (i, v) {\n\t\t\t\tif($.inArray(v.name.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\n\t\t\t\tif(v.value !== null && $.trim(v.value) !== '') {\n\t\t\t\t\tif(with_values) { attr[v.name] = v.value; }\n\t\t\t\t\telse { attr.push(v.name); }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn attr;\n\t};\n\t$.vakata.array_unique = function(array) {\n\t\tvar a = [], i, j, l, o = {};\n\t\tfor(i = 0, l = array.length; i < l; i++) {\n\t\t\tif(o[array[i]] === undefined) {\n\t\t\t\ta.push(array[i]);\n\t\t\t\to[array[i]] = true;\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove = function(array, from) {\n\t\tarray.splice(from, 1);\n\t\treturn array;\n\t\t//var rest = array.slice((to || from) + 1 || array.length);\n\t\t//array.length = from < 0 ? array.length + from : from;\n\t\t//array.push.apply(array, rest);\n\t\t//return array;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove_item = function(array, item) {\n\t\tvar tmp = $.inArray(item, array);\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\n\t};\n\t$.vakata.array_filter = function(c,a,b,d,e) {\n\t\tif (c.filter) {\n\t\t\treturn c.filter(a, b);\n\t\t}\n\t\td=[];\n\t\tfor (e in c) {\n\t\t\tif (~~e+''===e+'' && e>=0 && a.call(b,c[e],+e,c)) {\n\t\t\t\td.push(c[e]);\n\t\t\t}\n\t\t}\n\t\treturn d;\n\t};\n\n\n\treturn Tree;\n\n});\n\ndefine('skylark-ui-datatree/plugin/changed',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\t\"use strict\";\n\n\tif($.jstree.plugins.changed) { return; }\n\n\t$.jstree.plugins.changed = function (options, parent) {\n\t\tvar last = [];\n\t\tthis.trigger = function (ev, data) {\n\t\t\tvar i, j;\n\t\t\tif(!data) {\n\t\t\t\tdata = {};\n\t\t\t}\n\t\t\tif(ev.replace('.jstree','') === 'changed') {\n\t\t\t\tdata.changed = { selected : [], deselected : [] };\n\t\t\t\tvar tmp = {};\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\n\t\t\t\t\ttmp[last[i]] = 1;\n\t\t\t\t}\n\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\n\t\t\t\t\tif(!tmp[data.selected[i]]) {\n\t\t\t\t\t\tdata.changed.selected.push(data.selected[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp[data.selected[i]] = 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\n\t\t\t\t\tif(tmp[last[i]] === 1) {\n\t\t\t\t\t\tdata.changed.deselected.push(last[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlast = data.selected.slice();\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when selection changes (the \"changed\" plugin enhances the original event with more data)\n\t\t\t * @event\n\t\t\t * @name changed.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {Object} action the action that caused the selection to change\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @param {Object} changed an object containing two properties `selected` and `deselected` - both arrays of node IDs, which were selected or deselected since the last changed event\n\t\t\t * @param {Object} event the event (if any) that triggered this changed event\n\t\t\t * @plugin changed\n\t\t\t */\n\t\t\tparent.trigger.call(this, ev, data);\n\t\t};\n\t\tthis.refresh = function (skip_loading, forget_state) {\n\t\t\tlast = [];\n\t\t\treturn parent.refresh.apply(this, arguments);\n\t\t};\n\t};\n\n\treturn $;\n});\ndefine('skylark-ui-datatree/plugin/checkbox',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\t\"use strict\";\n\n\tif($.jstree.plugins.checkbox) { return; }\n\n\tvar _i = document.createElement('I');\n\t_i.className = 'jstree-icon jstree-checkbox';\n\t_i.setAttribute('role', 'presentation');\n\t/**\n\t * stores all defaults for the checkbox plugin\n\t * @name $.jstree.defaults.checkbox\n\t * @plugin checkbox\n\t */\n\t$.jstree.defaults.checkbox = {\n\t\t/**\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.visible\n\t\t * @plugin checkbox\n\t\t */\n\t\tvisible\t\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.three_state\n\t\t * @plugin checkbox\n\t\t */\n\t\tthree_state\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.whole_node\n\t\t * @plugin checkbox\n\t\t */\n\t\twhole_node\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\n\t\t * @plugin checkbox\n\t\t */\n\t\tkeep_selected_style\t: true,\n\t\t/**\n\t\t * This setting controls how cascading and undetermined nodes are applied.\n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used.\n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\n\t\t * @name $.jstree.defaults.checkbox.cascade\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade\t\t\t\t: '',\n\t\t/**\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing.\n\t\t * @name $.jstree.defaults.checkbox.tie_selection\n\t\t * @plugin checkbox\n\t\t */\n\t\ttie_selection\t\t: true,\n\n\t\t/**\n\t\t * This setting controls if cascading down affects disabled checkboxes\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_disabled\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade_to_disabled : true,\n\n\t\t/**\n\t\t * This setting controls if cascading down affects hidden checkboxes\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_hidden\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade_to_hidden : true\n\t};\n\t$.jstree.plugins.checkbox = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis._data.checkbox.uto = false;\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tif(this.settings.checkbox.three_state) {\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\n\t\t\t}\n\t\t\tthis.element\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\n\t\t\t\t\t}, this));\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {\n\t\t\t\t\t\t\t// only if undetermined is in setting\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(!this.settings.checkbox.tie_selection) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\ti, j;\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = m[dpc[i]].state.checked || (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar self = this,\n\t\t\t\t\t\t\t\tobj = data.node,\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\n\t\t\t\t\t\t\t\tsel = {}, cur = this._data[ t ? 'core' : 'checkbox' ].selected;\n\n\t\t\t\t\t\t\tfor (i = 0, j = cur.length; i < j; i++) {\n\t\t\t\t\t\t\t\tsel[cur[i]] = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, true);\n\t\t\t\t\t\t\t\tvar temp = obj.children_d.concat(obj.id);\n\t\t\t\t\t\t\t\tfor (i = 0, j = temp.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tif (selectedIds.indexOf(temp[i]) > -1) {\n\t\t\t\t\t\t\t\t\t\tsel[temp[i]] = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tdelete sel[temp[i]];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\twhile(par && par.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tsel[par.id] = true;\n\t\t\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcur = [];\n\t\t\t\t\t\t\tfor (i in sel) {\n\t\t\t\t\t\t\t\tif (sel.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\tcur.push(i);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = this.get_node($.jstree.root),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar self = this,\n\t\t\t\t\t\t\t\tobj = data.node,\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\n\t\t\t\t\t\t\t\tcur = this._data[ t ? 'core' : 'checkbox' ].selected, sel = {},\n\t\t\t\t\t\t\t\tstillSelectedIds = [],\n\t\t\t\t\t\t\t\tallIds = obj.children_d.concat(obj.id);\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, false);\n\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\n\t\t\t\t\t\t\t\t\treturn allIds.indexOf(id) === -1 || selectedIds.indexOf(id) > -1;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// only apply up if cascade up is enabled and if this node is not selected\n\t\t\t\t\t\t\t// (if all child nodes are disabled and cascade_to_disabled === false then this node will till be selected).\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1 && cur.indexOf(obj.id) === -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\n\t\t\t\t\t\t\t\t\treturn obj.parents.indexOf(id) === -1;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('delete_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on('move_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\n\t\t\t\t\t\t\t\told_par = data.old_parent,\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(!is_multi) {\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\n\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tp = new_par;\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * get an array of all nodes whose state is \"undetermined\"\n\t\t * @name get_undetermined([full])\n\t\t * @param  {boolean} full: if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_undetermined = function (full) {\n\t\t\tif (this.settings.checkbox.cascade.indexOf('undetermined') === -1) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tvar i, j, k, l, o = {}, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this, r = [];\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\n\t\t\t\t\tfor(k = 0, l = m[s[i]].parents.length; k < l; k++) {\n\t\t\t\t\t\tif(o[m[s[i]].parents[k]] !== undefined) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(m[s[i]].parents[k] !== $.jstree.root) {\n\t\t\t\t\t\t\to[m[s[i]].parents[k]] = true;\n\t\t\t\t\t\t\tp.push(m[s[i]].parents[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt for server side undetermined state\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\n\t\t\t\t.each(function () {\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\n\t\t\t\t\t\n\t\t\t\t\tif(!tmp) { return; }\n\t\t\t\t\t\n\t\t\t\t\tif(!tmp.state.loaded) {\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\n\t\t\t\t\t\t\tif(o[tmp.id] === undefined && tmp.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\to[tmp.id] = true;\n\t\t\t\t\t\t\t\tp.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor(k = 0, l = tmp.parents.length; k < l; k++) {\n\t\t\t\t\t\t\t\tif(o[tmp.parents[k]] === undefined && tmp.parents[k] !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\to[tmp.parents[k]] = true;\n\t\t\t\t\t\t\t\t\tp.push(tmp.parents[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\n\t\t\t\t\t\t\t\tif(o[tmp2.id] === undefined && tmp2.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\to[tmp2.id] = true;\n\t\t\t\t\t\t\t\t\tp.push(tmp2.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor(k = 0, l = tmp2.parents.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\tif(o[tmp2.parents[k]] === undefined && tmp2.parents[k] !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\t\to[tmp2.parents[k]] = true;\n\t\t\t\t\t\t\t\t\t\tp.push(tmp2.parents[k]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\tr.push(full ? m[p[i]] : p[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t};\n\t\t/**\n\t\t * set the undetermined state where and if necessary. Used internally.\n\t\t * @private\n\t\t * @name _undetermined()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis._undetermined = function () {\n\t\t\tif(this.element === null) { return; }\n\t\t\tvar p = this.get_undetermined(false), i, j, s;\n\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\n\t\t\t\ts = this.get_node(p[i], true);\n\t\t\t\tif(s && s.length) {\n\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, is_callback, force_render) {\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\n\t\t\tif(obj) {\n\t\t\t\tvar i, j, tmp = null, icon = null;\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\n\t\t\t\t\t\ttmp = obj.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(tmp) {\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\n\t\t\t\t\ticon = _i.cloneNode(false);\n\t\t\t\t\tif(this._model.data[obj.id].state.checkbox_disabled) { icon.className += ' jstree-checkbox-disabled'; }\n\t\t\t\t\ttmp.insertBefore(icon, tmp.childNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t\t/**\n\t\t * show the node checkbox icons\n\t\t * @name show_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * hide the node checkbox icons\n\t\t * @name hide_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\n\t\t/**\n\t\t * checks if a node is in an undetermined state\n\t\t * @name is_undetermined(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tthis.is_undetermined = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\t/**\n\t\t * disable a node's checkbox\n\t\t * @name disable_checkbox(obj)\n\t\t * @param {mixed} obj an array can be used too\n\t\t * @trigger disable_checkbox.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.disable_checkbox = function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.disable_checkbox(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.checkbox_disabled) {\n\t\t\t\tobj.state.checkbox_disabled = true;\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-checkbox-disabled');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node's checkbox is disabled\n\t\t\t\t * @event\n\t\t\t\t * @name disable_checkbox.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('disable_checkbox', { 'node' : obj });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * enable a node's checkbox\n\t\t * @name disable_checkbox(obj)\n\t\t * @param {mixed} obj an array can be used too\n\t\t * @trigger enable_checkbox.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.enable_checkbox = function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.enable_checkbox(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.checkbox_disabled) {\n\t\t\t\tobj.state.checkbox_disabled = false;\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').removeClass('jstree-checkbox-disabled');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node's checkbox is enabled\n\t\t\t\t * @event\n\t\t\t\t * @name enable_checkbox.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('enable_checkbox', { 'node' : obj });\n\t\t\t}\n\t\t};\n\n\t\tthis.activate_node = function (obj, e) {\n\t\t\tif($(e.target).hasClass('jstree-checkbox-disabled')) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\te.ctrlKey = true;\n\t\t\t}\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\n\t\t\t}\n\t\t\tif(this.is_disabled(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.is_checked(obj)) {\n\t\t\t\tthis.uncheck_node(obj, e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.check_node(obj, e);\n\t\t\t}\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t};\n\n\t\t/**\n\t\t * Cascades checked state to a node and all its descendants. This function does NOT affect hidden and disabled nodes (or their descendants).\n\t\t * However if these unaffected nodes are already selected their ids will be included in the returned array.\n\t\t * @private\n\t\t * @param {string} id the node ID\n\t\t * @param {bool} checkedState should the nodes be checked or not\n\t\t * @returns {Array} Array of all node id's (in this tree branch) that are checked.\n\t\t */\n\t\tthis._cascade_new_checked_state = function (id, checkedState) {\n\t\t\tvar self = this;\n\t\t\tvar t = this.settings.checkbox.tie_selection;\n\t\t\tvar node = this._model.data[id];\n\t\t\tvar selectedNodeIds = [];\n\t\t\tvar selectedChildrenIds = [], i, j, selectedChildIds;\n\n\t\t\tif (\n\t\t\t\t(this.settings.checkbox.cascade_to_disabled || !node.state.disabled) &&\n\t\t\t\t(this.settings.checkbox.cascade_to_hidden || !node.state.hidden)\n\t\t\t) {\n\t\t\t\t//First try and check/uncheck the children\n\t\t\t\tif (node.children) {\n\t\t\t\t\tfor (i = 0, j = node.children.length; i < j; i++) {\n\t\t\t\t\t\tvar childId = node.children[i];\n\t\t\t\t\t\tselectedChildIds = self._cascade_new_checked_state(childId, checkedState);\n\t\t\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\n\t\t\t\t\t\tif (selectedChildIds.indexOf(childId) > -1) {\n\t\t\t\t\t\t\tselectedChildrenIds.push(childId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar dom = self.get_node(node, true);\n\n\t\t\t\t//A node's state is undetermined if some but not all of it's children are checked/selected .\n\t\t\t\tvar undetermined = selectedChildrenIds.length > 0 && selectedChildrenIds.length < node.children.length;\n\n\t\t\t\tif(node.original && node.original.state && node.original.state.undetermined) {\n\t\t\t\t\tnode.original.state.undetermined = undetermined;\n\t\t\t\t}\n\n\t\t\t\t//If a node is undetermined then remove selected class\n\t\t\t\tif (undetermined) {\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t}\n\t\t\t\t//Otherwise, if the checkedState === true (i.e. the node is being checked now) and all of the node's children are checked (if it has any children),\n\t\t\t\t//check the node and style it correctly.\n\t\t\t\telse if (checkedState && selectedChildrenIds.length === node.children.length) {\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = checkedState;\n\t\t\t\t\tselectedNodeIds.push(node.id);\n\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselectedChildIds = this.get_checked_descendants(id);\n\n\t\t\t\tif (node.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\tselectedChildIds.push(node.id);\n\t\t\t\t}\n\n\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\n\t\t\t}\n\n\t\t\treturn selectedNodeIds;\n\t\t};\n\n\t\t/**\n\t\t * Gets ids of nodes selected in branch (of tree) specified by id (does not include the node specified by id)\n\t\t * @name get_checked_descendants(obj)\n\t\t * @param {string} id the node ID\n\t\t * @return {Array} array of IDs\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_checked_descendants = function (id) {\n\t\t\tvar self = this;\n\t\t\tvar t = self.settings.checkbox.tie_selection;\n\t\t\tvar node = self._model.data[id];\n\n\t\t\treturn node.children_d.filter(function(_id) {\n\t\t\t\treturn self._model.data[_id].state[ t ? 'selected' : 'checked' ];\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\n\t\t * @name check_node(obj)\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\n\t\t * @trigger check_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.check_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.checked) {\n\t\t\t\tobj.state.checked = true;\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name check_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\n\t\t * @name uncheck_node(obj)\n\t\t * @param {mixed} obj an array can be used to uncheck multiple nodes\n\t\t * @trigger uncheck_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.checked) {\n\t\t\t\tobj.state.checked = false;\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name uncheck_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\n\t\t * @name check_all()\n\t\t * @trigger check_all.jstree, changed.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tthis._data.checkbox.selected = this._model.data[$.jstree.root].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name check_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\n\t\t};\n\t\t/**\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\n\t\t * @name uncheck_all()\n\t\t * @trigger uncheck_all.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name uncheck_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\n\t\t};\n\t\t/**\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\n\t\t * @name is_checked(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.is_checked = function (obj) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\treturn obj.state.checked;\n\t\t};\n\t\t/**\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\n\t\t * @name get_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\n\t\t\treturn full ? $.map(this._data.checkbox.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\n\t\t};\n\t\t/**\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\n\t\t * @name get_top_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_top_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t};\n\t\t/**\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\n\t\t * @name get_bottom_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_bottom_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t};\n\t\tthis.load_node = function (obj, callback) {\n\t\t\tvar k, l, i, j, c, tmp;\n\t\t\tif(!$.isArray(obj) && !this.settings.checkbox.tie_selection) {\n\t\t\t\ttmp = this.get_node(obj);\n\t\t\t\tif(tmp && tmp.state.loaded) {\n\t\t\t\t\tfor(k = 0, l = tmp.children_d.length; k < l; k++) {\n\t\t\t\t\t\tif(this._model.data[tmp.children_d[k]].state.checked) {\n\t\t\t\t\t\t\tc = true;\n\t\t\t\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, tmp.children_d[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn parent.load_node.apply(this, arguments);\n\t\t};\n\t\tthis.get_state = function () {\n\t\t\tvar state = parent.get_state.apply(this, arguments);\n\t\t\tif(this.settings.checkbox.tie_selection) { return state; }\n\t\t\tstate.checkbox = this._data.checkbox.selected.slice();\n\t\t\treturn state;\n\t\t};\n\t\tthis.set_state = function (state, callback) {\n\t\t\tvar res = parent.set_state.apply(this, arguments);\n\t\t\tif(res && state.checkbox) {\n\t\t\t\tif(!this.settings.checkbox.tie_selection) {\n\t\t\t\t\tthis.uncheck_all();\n\t\t\t\t\tvar _this = this;\n\t\t\t\t\t$.each(state.checkbox, function (i, v) {\n\t\t\t\t\t\t_this.check_node(v);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tdelete state.checkbox;\n\t\t\t\tthis.set_state(state, callback);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\tthis.refresh = function (skip_loading, forget_state) {\n\t\t\tif(!this.settings.checkbox.tie_selection) {\n\t\t\t\tthis._data.checkbox.selected = [];\n\t\t\t}\n\t\t\treturn parent.refresh.apply(this, arguments);\n\t\t};\n\t};\n\n\t// include the checkbox plugin by default\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\n\n\treturn $;\n});\n\ndefine('skylark-ui-datatree/plugin/conditionalselect',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\t\"use strict\";\n\n\tif($.jstree.plugins.conditionalselect) { return; }\n\n\t/**\n\t * a callback (function) which is invoked in the instance's scope and receives two arguments - the node and the event that triggered the `activate_node` call. Returning false prevents working with the node, returning true allows invoking activate_node. Defaults to returning `true`.\n\t * @name $.jstree.defaults.checkbox.visible\n\t * @plugin checkbox\n\t */\n\t$.jstree.defaults.conditionalselect = function () { return true; };\n\t$.jstree.plugins.conditionalselect = function (options, parent) {\n\t\t// own function\n\t\tthis.activate_node = function (obj, e) {\n\t\t\tif(this.settings.conditionalselect.call(this, this.get_node(obj), e)) {\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\n\t\t\t}\n\t\t};\n\t};\n\treturn $;\n});\n/**\n * skylark-ui-swt - The skylark standard widget tookit\n * @author Hudaokeji, Inc.\n * @version v0.9.2.beta\n * @link https://github.com/skylarkui/skylark-ui-swt/\n * @license MIT\n */\ndefine('skylark-ui-swt/menu',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\tvar popup = null;\n\tvar right_to_left ;\n\n\tvar Menu = sbswt.Menu = sbswt.WidgetBase.inherit({\n        klassName: \"Menu\",\n\n        init : function(elm,options) {\n        \tif (!options) {\n        \t\toptions = elm;\n        \t\telm = null;\n        \t}\n\t\t\tvar self = this,$el;\n\n\t\t\tthis._options = langx.mixin({\n\t\t\t\t\thide_onmouseleave\t: 0,\n\t\t\t\t\ticons\t\t\t\t: true\n\n\t\t\t},options);\n\n\t\t\tif (!elm) {\n\t\t\t\t$el = this.$el = $(\"<ul class='vakata-context'></ul>\");\n\t\t\t} else {\n\t\t\t\t$el = this.$el = $(elm);\n\t\t\t}\n\n\t\t\tvar to = false;\n\t\t\t$el.on(\"mouseenter\", \"li\", function (e) {\n\t\t\t\t\te.stopImmediatePropagation();\n\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) {\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\t$el.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\n\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\n\t\t\t\t\tself._show_submenu(this);\n\t\t\t\t})\n\t\t\t\t// тестово - дали не натоварва?\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) { return; }\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseleave\", function (e) {\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\tif(self._options.hide_onmouseleave) {\n\t\t\t\t\t\tto = setTimeout(\n\t\t\t\t\t\t\t(function (t) {\n\t\t\t\t\t\t\t\treturn function () { self.hide(); };\n\t\t\t\t\t\t\t}(this)), self._options.hide_onmouseleave);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on(\"click\", \"a\", function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t//})\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && self._execute($(this).attr(\"rel\")) !== false) {\n\t\t\t\t\t\tself.hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keydown', 'a', function (e) {\n\t\t\t\t\t\tvar o = null;\n\t\t\t\t\t\tswitch(e.which) {\n\t\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\t\te.type = \"click\";\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().closest(\"li\").first().find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\t\tself.hide();\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t//console.log(e.which);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on('keydown', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar a = self.$el.find('.vakata-contextmenu-shortcut-' + e.which).parent();\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\n\t\t\t\t\t\ta.click();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tthis.render();\n        },\n\n        render : function() {\n        \tvar items = this._options.items;\n\t\t\tif(this._parse(items)) {\n\t\t\t\tthis.$el.html(this.html);\n\t\t\t}\n\t\t\tthis.$el.width('');\n        },\n\n\t\t_trigger : function (event_name) {\n\t\t\t$(document).trigger(\"context_\" + event_name + \".sbswt\", {\n\t\t\t\t\"reference\"\t: this.reference,\n\t\t\t\t\"element\"\t: this.$el,\n\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\"x\" : this.position_x,\n\t\t\t\t\t\"y\" : this.position_y\n\t\t\t\t}\n\t\t\t});\n\t\t},        \n\n\t\t_execute : function (i) {\n\t\t\ti = this.items[i];\n\t\t\treturn i && (!i._disabled || (langx.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : this.reference, \"element\" : this.$el }))) && i.action ? i.action.call(null, {\n\t\t\t\t\t\t\"item\"\t\t: i,\n\t\t\t\t\t\t\"reference\"\t: this.reference,\n\t\t\t\t\t\t\"element\"\t: this.$el,\n\t\t\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\t\t\"x\" : this.position_x,\n\t\t\t\t\t\t\t\"y\" : this.position_y\n\t\t\t\t\t\t}\n\t\t\t\t\t}) : false;\n\t\t},\n\t\t_parse : function (o, is_callback) {\n\t\t\tvar self = this,\n\t\t\t\treference = self._options.reference;\n\n\t\t\tif(!o) { return false; }\n\t\t\tif(!is_callback) {\n\t\t\t\tself.html\t\t= \"\";\n\t\t\t\tself.items\t= [];\n\t\t\t}\n\t\t\tvar str = \"\",\n\t\t\t\tsep = false,\n\t\t\t\ttmp;\n\n\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\n\t\t\tlangx.each(o, function (i, val) {\n\t\t\t\tif(!val) { return true; }\n\t\t\t\tself.items.push(val);\n\t\t\t\tif(!sep && val.separator_before) {\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t}\n\t\t\t\tsep = false;\n\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || (langx.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : reference, \"element\" : self.$el })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\n\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (self.items.length - 1) + \"' \" + (val.title ? \"title='\" + val.title + \"'\" : \"\") + \">\";\n\t\t\t\tif(self._options.icons) {\n\t\t\t\t\tstr += \"<\"+\"i \";\n\t\t\t\t\tif(val.icon) {\n\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\n\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\n\t\t\t\t\t}\n\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\n\t\t\t\t}\n\t\t\t\tstr += (langx.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : reference, \"element\" : self.$el }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\n\t\t\t\tif(val.submenu) {\n\t\t\t\t\ttmp = self._parse(val.submenu, true);\n\t\t\t\t\tif(tmp) { str += tmp; }\n\t\t\t\t}\n\t\t\t\tstr += \"<\"+\"/li>\";\n\t\t\t\tif(val.separator_after) {\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t\tsep = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\n\t\t\tif(is_callback) { str += \"</ul>\"; }\n\t\t\t/**\n\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\n\t\t\t * @event\n\t\t\t * @plugin contextmenu\n\t\t\t * @name context_parse.vakata\n\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t */\n\t\t\tif(!is_callback) { self.html = str; self._trigger(\"parse\"); }\n\t\t\treturn str.length > 10 ? str : false;\n\t\t},\n\t\t_show_submenu : function (o) {\n\t\t\to = $(o);\n\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\n\t\t\tvar e = o.children(\"ul\"),\n\t\t\t\txl = o.offset().left,\n\t\t\t\tx = xl + o.outerWidth(),\n\t\t\t\ty = o.offset().top,\n\t\t\t\tw = e.width(),\n\t\t\t\th = e.height(),\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\n\t\t\tif(right_to_left) {\n\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\to[x + w > dw  && xl > dw - x ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\n\t\t\t}\n\t\t\tif(y + h + 10 > dh) {\n\t\t\t\te.css(\"bottom\",\"-1px\");\n\t\t\t}\n\n\t\t\t//if does not fit - stick it to the side\n\t\t\tif (o.hasClass('vakata-context-right')) {\n\t\t\t\tif (xl < w) {\n\t\t\t\t\te.css(\"margin-right\", xl - w);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (dw - x < w) {\n\t\t\t\t\te.css(\"margin-left\", dw - x - w);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\te.show();\n\t\t},\n\t\tshow : function (reference, position, data) {\n\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\n\t\t\tswitch(cond) {\n\t\t\t\tcase (!position && !reference):\n\t\t\t\t\treturn false;\n\t\t\t\tcase (!!position && !!reference):\n\t\t\t\t\tthis.reference\t= reference;\n\t\t\t\t\tthis.position_x\t= position.x;\n\t\t\t\t\tthis.position_y\t= position.y;\n\t\t\t\t\tbreak;\n\t\t\t\tcase (!position && !!reference):\n\t\t\t\t\tthis.reference\t= reference;\n\t\t\t\t\to = reference.offset();\n\t\t\t\t\tthis.position_x\t= o.left + reference.outerHeight();\n\t\t\t\t\tthis.position_y\t= o.top;\n\t\t\t\t\tbreak;\n\t\t\t\tcase (!!position && !reference):\n\t\t\t\t\tthis.position_x\t= position.x;\n\t\t\t\t\tthis.position_y\t= position.y;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\n\t\t\t\tdata = $(reference).data('vakata_contextmenu');\n\t\t\t}\n\n\t\t\tif(this.items.length) {\n\t\t\t\tthis.$el.appendTo(document.body);\n\t\t\t\te = this.$el;\n\t\t\t\tx = this.position_x;\n\t\t\t\ty = this.position_y;\n\t\t\t\tw = e.width();\n\t\t\t\th = e.height();\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t\tif(right_to_left) {\n\t\t\t\t\tx -= (e.outerWidth() - $(reference).outerWidth());\n\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\n\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(x + w + 20 > dw) {\n\t\t\t\t\tx = dw - (w + 20);\n\t\t\t\t}\n\t\t\t\tif(y + h + 20 > dh) {\n\t\t\t\t\ty = dh - (h + 20);\n\t\t\t\t}\n\n\t\t\t\tthis.$el\n\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\n\t\t\t\t\t.show()\n\t\t\t\t\t.find('a').first().focus().parent().addClass(\"vakata-context-hover\");\n\t\t\t\tthis.is_visible = true;\n\n\t\t\t\tpopup = this;\n\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when the contextmenu is shown\n\t\t\t\t * @event\n\t\t\t\t * @plugin contextmenu\n\t\t\t\t * @name context_show.vakata\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t */\n\t\t\t\tthis._trigger(\"show\");\n\t\t\t}\n\t\t},\n\t\thide : function () {\n\t\t\tif(this.is_visible) {\n\t\t\t\tthis.$el.hide().find(\"ul\").hide().end().find(':focus').blur().end().detach();\n\t\t\t\tthis.is_visible = false;\n\t\t\t\tpopup = null;\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when the contextmenu is hidden\n\t\t\t\t * @event\n\t\t\t\t * @plugin contextmenu\n\t\t\t\t * @name context_hide.vakata\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t */\n\t\t\t\tthis._trigger(\"hide\");\n\t\t\t}\n\t\t}\n\n    });\t\n\n\t$(function () {\n\t\tright_to_left = $(document.body).css(\"direction\") === \"rtl\";\n\n\t\t$(document)\n\t\t\t.on(\"mousedown.sbswt.popup\", function (e) {\n\t\t\t\tif(popup && popup.$el[0] !== e.target  && !noder.contains(popup.$el[0], e.target)) {\n\t\t\t\t\tpopup.hide();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"context_show.sbswt.popup\", function (e, data) {\n\t\t\t\tpopup.$el.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\n\t\t\t\tif(right_to_left) {\n\t\t\t\t\tpopup.$el.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\n\t\t\t\t}\n\t\t\t\t// also apply a RTL class?\n\t\t\t\tpopup.$el.find(\"ul\").hide().end();\n\t\t\t});\n\t});\n\n\tMenu.popup = function (reference, position, data) {\n\t\tvar m = new Menu({\n\t\t\treference : reference,\n\t\t\titems : data\n\t\t});\n\t\tm.show(reference,position);\n\t};\n\n\tMenu.hide = function() {\n\t\tif (popup) {\n\t\t\tpopup.hide();\n\t\t}\n\t}\n\n\treturn Menu;\n\n});\n\ndefine('skylark-ui-datatree/plugin/contextmenu',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"skylark-ui-swt/menu\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,menu,jstree,sbswt){\n\n\t\"use strict\";\n\n\tif($.jstree.plugins.contextmenu) { return; }\n\n\t/**\n\t * stores all defaults for the contextmenu plugin\n\t * @name $.jstree.defaults.contextmenu\n\t * @plugin contextmenu\n\t */\n\t$.jstree.defaults.contextmenu = {\n\t\t/**\n\t\t * a boolean indicating if the node should be selected when the context menu is invoked on it. Defaults to `true`.\n\t\t * @name $.jstree.defaults.contextmenu.select_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tselect_node : true,\n\t\t/**\n\t\t * a boolean indicating if the menu should be shown aligned with the node. Defaults to `true`, otherwise the mouse coordinates are used.\n\t\t * @name $.jstree.defaults.contextmenu.show_at_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tshow_at_node : true,\n\t\t/**\n\t\t * an object of actions, or a function that accepts a node and a callback function and calls the callback function with an object of actions available for that node (you can also return the items too).\n\t\t *\n\t\t * Each action consists of a key (a unique name) and a value which is an object with the following properties (only label and action are required). Once a menu item is activated the `action` function will be invoked with an object containing the following keys: item - the contextmenu item definition as seen below, reference - the DOM node that was used (the tree node), element - the contextmenu DOM element, position - an object with x/y properties indicating the position of the menu.\n\t\t *\n\t\t * * `separator_before` - a boolean indicating if there should be a separator before this item\n\t\t * * `separator_after` - a boolean indicating if there should be a separator after this item\n\t\t * * `_disabled` - a boolean indicating if this action should be disabled\n\t\t * * `label` - a string - the name of the action (could be a function returning a string)\n\t\t * * `title` - a string - an optional tooltip for the item\n\t\t * * `action` - a function to be executed if this item is chosen, the function will receive \n\t\t * * `icon` - a string, can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t * * `shortcut` - keyCode which will trigger the action if the menu is open (for example `113` for rename, which equals F2)\n\t\t * * `shortcut_label` - shortcut label (like for example `F2` for rename)\n\t\t * * `submenu` - an object with the same structure as $.jstree.defaults.contextmenu.items which can be used to create a submenu - each key will be rendered as a separate option in a submenu that will appear once the current item is hovered\n\t\t *\n\t\t * @name $.jstree.defaults.contextmenu.items\n\t\t * @plugin contextmenu\n\t\t */\n\t\titems : function (o, cb) { // Could be an object directly\n\t\t\treturn {\n\t\t\t\t\"create\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: true,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"create_node\", data.reference, {}, \"last\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Create\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.create_node(obj, {}, \"last\", function (new_node) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tinst.edit(new_node);\n\t\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"rename\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"rename_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Rename\",\n\t\t\t\t\t/*!\n\t\t\t\t\t\"shortcut\"\t\t\t: 113,\n\t\t\t\t\t\"shortcut_label\"\t: 'F2',\n\t\t\t\t\t\"icon\"\t\t\t\t: \"glyphicon glyphicon-leaf\",\n\t\t\t\t\t*/\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.edit(obj);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"remove\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"delete_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Delete\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"ccp\" : {\n\t\t\t\t\t\"separator_before\"\t: true,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"label\"\t\t\t\t: \"Edit\",\n\t\t\t\t\t\"action\"\t\t\t: false,\n\t\t\t\t\t\"submenu\" : {\n\t\t\t\t\t\t\"cut\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Cut\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_top_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"copy\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Copy\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_top_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"paste\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"_disabled\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Paste\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tinst.paste(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\n\t$.jstree.plugins.contextmenu = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tvar last_ts = 0, cto = null, ex, ey;\n\t\t\tthis.element\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-contextmenu');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-anchor\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif (e.target.tagName.toLowerCase() === 'input') {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlast_ts = e.ctrlKey ? +new Date() : 0;\n\t\t\t\t\t\tif(data || cto) {\n\t\t\t\t\t\t\tlast_ts = (+new Date()) + 10000;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(cto) {\n\t\t\t\t\t\t\tclearTimeout(cto);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!this.is_loading(e.currentTarget)) {\n\t\t\t\t\t\t\tthis.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\tif(this._data.contextmenu.visible && (!last_ts || (+new Date()) - last_ts > 250)) { // work around safari & macOS ctrl+click\n\t\t\t\t\t\t\tmenu.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlast_ts = 0;\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"touchstart.jstree\", \".jstree-anchor\", function (e) {\n\t\t\t\t\t\tif(!e.originalEvent || !e.originalEvent.changedTouches || !e.originalEvent.changedTouches[0]) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tex = e.originalEvent.changedTouches[0].clientX;\n\t\t\t\t\t\tey = e.originalEvent.changedTouches[0].clientY;\n\t\t\t\t\t\tcto = setTimeout(function () {\n\t\t\t\t\t\t\t$(e.currentTarget).trigger('contextmenu', true);\n\t\t\t\t\t\t}, 750);\n\t\t\t\t\t})\n\t\t\t\t.on('touchmove.vakata.jstree', function (e) {\n\t\t\t\t\t\tif(cto && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0] && (Math.abs(ex - e.originalEvent.changedTouches[0].clientX) > 10 || Math.abs(ey - e.originalEvent.changedTouches[0].clientY) > 10)) {\n\t\t\t\t\t\t\tclearTimeout(cto);\n\t\t\t\t\t\t\tmenu.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on('touchend.vakata.jstree', function (e) {\n\t\t\t\t\t\tif(cto) {\n\t\t\t\t\t\t\tclearTimeout(cto);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t/*!\n\t\t\tif(!('oncontextmenu' in document.body) && ('ontouchstart' in document.body)) {\n\t\t\t\tvar el = null, tm = null;\n\t\t\t\tthis.element\n\t\t\t\t\t.on(\"touchstart\", \".jstree-anchor\", function (e) {\n\t\t\t\t\t\tel = e.currentTarget;\n\t\t\t\t\t\ttm = +new Date();\n\t\t\t\t\t\t$(document).one(\"touchend\", function (e) {\n\t\t\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.targetTouches[0].pageX - window.pageXOffset, e.originalEvent.targetTouches[0].pageY - window.pageYOffset);\n\t\t\t\t\t\t\te.currentTarget = e.target;\n\t\t\t\t\t\t\ttm = ((+(new Date())) - tm);\n\t\t\t\t\t\t\tif(e.target === el && tm > 600 && tm < 1000) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(el).trigger('contextmenu', e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tel = null;\n\t\t\t\t\t\t\ttm = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n\t\t\t$(document).on(\"context_hide.sbswt.popup\", $.proxy(function (e, data) {\n\t\t\t\tthis._data.contextmenu.visible = false;\n\t\t\t\t$(data.reference).removeClass('jstree-context');\n\t\t\t}, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this._data.contextmenu.visible) {\n\t\t\t\tmenu.hide();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\n\t\t/**\n\t\t * prepare and show the context menu for a node\n\t\t * @name show_contextmenu(obj [, x, y])\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Object} e the event if available that triggered the contextmenu\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t */\n\t\tthis.show_contextmenu = function (obj, x, y, e) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\tvar s = this.settings.contextmenu,\n\t\t\t\td = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\"),\n\t\t\t\to = false,\n\t\t\t\ti = false;\n\t\t\tif(s.show_at_node || x === undefined || y === undefined) {\n\t\t\t\to = a.offset();\n\t\t\t\tx = o.left;\n\t\t\t\ty = o.top + this._data.core.li_height;\n\t\t\t}\n\t\t\tif(this.settings.contextmenu.select_node && !this.is_selected(obj)) {\n\t\t\t\tthis.activate_node(obj, e);\n\t\t\t}\n\n\t\t\ti = s.items;\n\t\t\tif($.isFunction(i)) {\n\t\t\t\ti = i.call(this, obj, $.proxy(function (i) {\n\t\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif($.isPlainObject(i)) {\n\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * show the prepared context menu for a node\n\t\t * @name _show_contextmenu(obj, x, y, i)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Number} i the object of items to show\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t * @private\n\t\t */\n\t\tthis._show_contextmenu = function (obj, x, y, i) {\n\t\t\tvar d = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\");\n\t\t\t$(document).one(\"context_show.sbswt.popup\", $.proxy(function (e, data) {\n\t\t\t\tvar cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';\n\t\t\t\t$(data.element).addClass(cls);\n\t\t\t\ta.addClass('jstree-context');\n\t\t\t}, this));\n\t\t\tthis._data.contextmenu.visible = true;\n\t\t\tmenu.popup(a, { 'x' : x, 'y' : y }, i);\n\t\t\t/**\n\t\t\t * triggered when the contextmenu is shown for a node\n\t\t\t * @event\n\t\t\t * @name show_contextmenu.jstree\n\t\t\t * @param {Object} node the node\n\t\t\t * @param {Number} x the x-coordinate of the menu relative to the document\n\t\t\t * @param {Number} y the y-coordinate of the menu relative to the document\n\t\t\t * @plugin contextmenu\n\t\t\t */\n\t\t\tthis.trigger('show_contextmenu', { \"node\" : obj, \"x\" : x, \"y\" : y });\n\t\t};\n\t};\n\n\t// $.jstree.defaults.plugins.push(\"contextmenu\");\n\n\treturn $;\n\t\n});\n\ndefine('skylark-ui-datatree/plugin/dnd',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\n\t\"use strict\";\n\n\tif($.jstree.plugins.dnd) { return; }\n\n\t/**\n\t * stores all defaults for the drag'n'drop plugin\n\t * @name $.jstree.defaults.dnd\n\t * @plugin dnd\n\t */\n\t$.jstree.defaults.dnd = {\n\t\t/**\n\t\t * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.\n\t\t * @name $.jstree.defaults.dnd.copy\n\t\t * @plugin dnd\n\t\t */\n\t\tcopy : true,\n\t\t/**\n\t\t * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.\n\t\t * @name $.jstree.defaults.dnd.open_timeout\n\t\t * @plugin dnd\n\t\t */\n\t\topen_timeout : 500,\n\t\t/**\n\t\t * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) and the event that started the drag - return `false` to prevent dragging\n\t\t * @name $.jstree.defaults.dnd.is_draggable\n\t\t * @plugin dnd\n\t\t */\n\t\tis_draggable : true,\n\t\t/**\n\t\t * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`\n\t\t * @name $.jstree.defaults.dnd.check_while_dragging\n\t\t * @plugin dnd\n\t\t */\n\t\tcheck_while_dragging : true,\n\t\t/**\n\t\t * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`\n\t\t * @name $.jstree.defaults.dnd.always_copy\n\t\t * @plugin dnd\n\t\t */\n\t\talways_copy : false,\n\t\t/**\n\t\t * when dropping a node \"inside\", this setting indicates the position the node should go to - it can be an integer or a string: \"first\" (same as 0) or \"last\", default is `0`\n\t\t * @name $.jstree.defaults.dnd.inside_pos\n\t\t * @plugin dnd\n\t\t */\n\t\tinside_pos : 0,\n\t\t/**\n\t\t * when starting the drag on a node that is selected this setting controls if all selected nodes are dragged or only the single node, default is `true`, which means all selected nodes are dragged when the drag is started on a selected node\n\t\t * @name $.jstree.defaults.dnd.drag_selection\n\t\t * @plugin dnd\n\t\t */\n\t\tdrag_selection : true,\n\t\t/**\n\t\t * controls whether dnd works on touch devices. If left as boolean true dnd will work the same as in desktop browsers, which in some cases may impair scrolling. If set to boolean false dnd will not work on touch devices. There is a special third option - string \"selected\" which means only selected nodes can be dragged on touch devices.\n\t\t * @name $.jstree.defaults.dnd.touch\n\t\t * @plugin dnd\n\t\t */\n\t\ttouch : true,\n\t\t/**\n\t\t * controls whether items can be dropped anywhere on the node, not just on the anchor, by default only the node anchor is a valid drop target. Works best with the wholerow plugin. If enabled on mobile depending on the interface it might be hard for the user to cancel the drop, since the whole tree container will be a valid drop target.\n\t\t * @name $.jstree.defaults.dnd.large_drop_target\n\t\t * @plugin dnd\n\t\t */\n\t\tlarge_drop_target : false,\n\t\t/**\n\t\t * controls whether a drag can be initiated from any part of the node and not just the text/icon part, works best with the wholerow plugin. Keep in mind it can cause problems with tree scrolling on mobile depending on the interface - in that case set the touch option to \"selected\".\n\t\t * @name $.jstree.defaults.dnd.large_drag_target\n\t\t * @plugin dnd\n\t\t */\n\t\tlarge_drag_target : false,\n\t\t/**\n\t\t * controls whether use HTML5 dnd api instead of classical. That will allow better integration of dnd events with other HTML5 controls.\n\t\t * @reference http://caniuse.com/#feat=dragndrop\n\t\t * @name $.jstree.defaults.dnd.use_html5\n\t\t * @plugin dnd\n\t\t */\n\t\tuse_html5: false\n\t};\n\tvar drg, elm;\n\t// TODO: now check works by checking for each node individually, how about max_children, unique, etc?\n\t$.jstree.plugins.dnd = function (options, parent) {\n\t\tthis.init = function (el, options) {\n\t\t\tparent.init.call(this, el, options);\n\t\t\tthis.settings.dnd.use_html5 = this.settings.dnd.use_html5 && ('draggable' in document.createElement('span'));\n\t\t};\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on(this.settings.dnd.use_html5 ? 'dragstart.jstree' : 'mousedown.jstree touchstart.jstree', this.settings.dnd.large_drag_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tif(this.settings.dnd.large_drag_target && $(e.target).closest('.jstree-node')[0] !== e.currentTarget) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(e.type === \"touchstart\" && (!this.settings.dnd.touch || (this.settings.dnd.touch === 'selected' && !$(e.currentTarget).closest('.jstree-node').children('.jstree-anchor').hasClass('jstree-clicked')))) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar obj = this.get_node(e.target),\n\t\t\t\t\t\t\tmlt = this.is_selected(obj) && this.settings.dnd.drag_selection ? this.get_top_selected().length : 1,\n\t\t\t\t\t\t\ttxt = (mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget));\n\t\t\t\t\t\tif(this.settings.core.force_text) {\n\t\t\t\t\t\t\ttxt = $.vakata.html.escape(txt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(obj && obj.id && obj.id !== $.jstree.root && (e.which === 1 || e.type === \"touchstart\" || e.type === \"dragstart\") &&\n\t\t\t\t\t\t\t(this.settings.dnd.is_draggable === true || ($.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (mlt > 1 ? this.get_top_selected(true) : [obj]), e)))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdrg = { 'jstree' : true, 'origin' : this, 'obj' : this.get_node(obj,true), 'nodes' : mlt > 1 ? this.get_top_selected() : [obj.id] };\n\t\t\t\t\t\t\telm = e.currentTarget;\n\t\t\t\t\t\t\tif (this.settings.dnd.use_html5) {\n\t\t\t\t\t\t\t\t$.vakata.dnd._trigger('start', e, { 'helper': $(), 'element': elm, 'data': drg });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.element.trigger('mousedown.jstree');\n\t\t\t\t\t\t\t\treturn $.vakata.dnd.start(e, drg, '<div id=\"jstree-dnd\" class=\"jstree-' + this.get_theme() + ' jstree-' + this.get_theme() + '-' + this.get_theme_variant() + ' ' + ( this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ) + '\"><i class=\"jstree-icon jstree-er\"></i>' + txt + '<ins class=\"jstree-copy\" style=\"display:none;\">+</ins></div>');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\tif (this.settings.dnd.use_html5) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('dragover.jstree', function (e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t})\n\t\t\t\t\t//.on('dragenter.jstree', this.settings.dnd.large_drop_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t//\t\te.preventDefault();\n\t\t\t\t\t//\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\n\t\t\t\t\t//\t\treturn false;\n\t\t\t\t\t//\t}, this))\n\t\t\t\t\t.on('drop.jstree', $.proxy(function (e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('stop', e, { 'helper': $(), 'element': elm, 'data': drg });\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\n\t\t\tif (obj && this.settings.dnd.use_html5) {\n\t\t\t\tif (this.settings.dnd.large_drag_target) {\n\t\t\t\t\tobj.setAttribute('draggable', true);\n\t\t\t\t} else {\n\t\t\t\t\tvar i, j, tmp = null;\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(tmp) {\n\t\t\t\t\t\ttmp.setAttribute('draggable', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t};\n\n\t$(function() {\n\t\t// bind only once for all instances\n\t\tvar lastmv = false,\n\t\t\tlaster = false,\n\t\t\tlastev = false,\n\t\t\topento = false,\n\t\t\tmarker = $('<div id=\"jstree-marker\">&#160;</div>').hide(); //.appendTo('body');\n\n\t\t$(document)\n\t\t\t.on('dnd_start.vakata.jstree', function (e, data) {\n\t\t\t\tlastmv = false;\n\t\t\t\tlastev = false;\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.appendTo(document.body); //.show();\n\t\t\t})\n\t\t\t.on('dnd_move.vakata.jstree', function (e, data) {\n\t\t\t\tvar isDifferentNode = data.event.target !== lastev.target;\n\t\t\t\tif(opento) {\n\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\n\t\t\t\t\t\tclearTimeout(opento);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\n\t\t\t\t// if we are hovering the marker image do nothing (can happen on \"inside\" drags)\n\t\t\t\tif(data.event.target.id && data.event.target.id === 'jstree-marker') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlastev = data.event;\n\n\t\t\t\tvar ins = $.jstree.reference(data.event.target),\n\t\t\t\t\tref = false,\n\t\t\t\t\toff = false,\n\t\t\t\t\trel = false,\n\t\t\t\t\ttmp, l, t, h, p, i, o, ok, t1, t2, op, ps, pr, ip, tm, is_copy, pn;\n\t\t\t\t// if we are over an instance\n\t\t\t\tif(ins && ins._data && ins._data.dnd) {\n\t\t\t\t\tmarker.attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ));\n\t\t\t\t\tis_copy = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)));\n\t\t\t\t\tdata.helper\n\t\t\t\t\t\t.children().attr('class', 'jstree-' + ins.get_theme() + ' jstree-' + ins.get_theme() + '-' + ins.get_theme_variant() + ' ' + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ))\n\t\t\t\t\t\t.find('.jstree-copy').first()[ is_copy ? 'show' : 'hide' ]();\n\n\t\t\t\t\t// if are hovering the container itself add a new root node\n\t\t\t\t\t//console.log(data.event);\n\t\t\t\t\tif( (data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\tok = ok && ins.check( (data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ) ? \"copy_node\" : \"move_node\"), (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), $.jstree.root, 'last', { 'dnd' : true, 'ref' : ins.get_node($.jstree.root), 'pos' : 'i', 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) });\n\t\t\t\t\t\t\tif(!ok) { break; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : $.jstree.root, 'pos' : 'last' };\n\t\t\t\t\t\t\tmarker.hide();\n\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\n\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if we are hovering a tree node\n\t\t\t\t\t\tref = ins.settings.dnd.large_drop_target ? $(data.event.target).closest('.jstree-node').children('.jstree-anchor') : $(data.event.target).closest('.jstree-anchor');\n\t\t\t\t\t\tif(ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {\n\t\t\t\t\t\t\toff = ref.offset();\n\t\t\t\t\t\t\trel = (data.event.pageY !== undefined ? data.event.pageY : data.event.originalEvent.pageY) - off.top;\n\t\t\t\t\t\t\th = ref.outerHeight();\n\t\t\t\t\t\t\tif(rel < h / 3) {\n\t\t\t\t\t\t\t\to = ['b', 'i', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(rel > h - h / 3) {\n\t\t\t\t\t\t\t\to = ['a', 'i', 'b'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\to = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$.each(o, function (j, v) {\n\t\t\t\t\t\t\t\tswitch(v) {\n\t\t\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index();\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\t\t\tip = ins.settings.dnd.inside_pos;\n\t\t\t\t\t\t\t\t\t\ttm = ins.get_node(ref.parent());\n\t\t\t\t\t\t\t\t\t\tl = off.left - 2;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h / 2 + 1;\n\t\t\t\t\t\t\t\t\t\tp = tm.id;\n\t\t\t\t\t\t\t\t\t\ti = ip === 'first' ? 0 : (ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length));\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'a':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index() + 1;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tok = true;\n\t\t\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\t\t\top = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? \"copy_node\" : \"move_node\";\n\t\t\t\t\t\t\t\t\tps = i;\n\t\t\t\t\t\t\t\t\tif(op === \"move_node\" && v === 'a' && (data.data.origin && data.data.origin === ins) && p === ins.get_parent(data.data.nodes[t1])) {\n\t\t\t\t\t\t\t\t\t\tpr = ins.get_node(p);\n\t\t\t\t\t\t\t\t\t\tif(ps > $.inArray(data.data.nodes[t1], pr.children)) {\n\t\t\t\t\t\t\t\t\t\t\tps -= 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tok = ok && ( (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false) || ins.check(op, (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), p, ps, { 'dnd' : true, 'ref' : ins.get_node(ref.parent()), 'pos' : v, 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) }) );\n\t\t\t\t\t\t\t\t\tif(!ok) {\n\t\t\t\t\t\t\t\t\t\tif(ins && ins.last_error) { laster = ins.last_error(); }\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {\n\t\t\t\t\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\n\t\t\t\t\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\n\t\t\t\t\t\t\t\t\t\topento = setTimeout((function (x, z) { return function () { x.open_node(z); }; }(ins, ref)), ins.settings.dnd.open_timeout);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\t\t\tpn = ins.get_node(p, true);\n\t\t\t\t\t\t\t\t\tif (!pn.hasClass('.jstree-dnd-parent')) {\n\t\t\t\t\t\t\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\n\t\t\t\t\t\t\t\t\t\tpn.addClass('jstree-dnd-parent');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : p, 'pos' : v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i };\n\t\t\t\t\t\t\t\t\tmarker.css({ 'left' : l + 'px', 'top' : t + 'px' }).show();\n\t\t\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\n\t\t\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlaster = {};\n\t\t\t\t\t\t\t\t\to = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(o === true) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\n\t\t\t\tlastmv = false;\n\t\t\t\tdata.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\n\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = 'none';\n\t\t\t\t}\n\t\t\t\tmarker.hide();\n\t\t\t})\n\t\t\t.on('dnd_scroll.vakata.jstree', function (e, data) {\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide();\n\t\t\t\tlastmv = false;\n\t\t\t\tlastev = false;\n\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t})\n\t\t\t.on('dnd_stop.vakata.jstree', function (e, data) {\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\n\t\t\t\tif(opento) { clearTimeout(opento); }\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide().detach();\n\t\t\t\tvar i, j, nodes = [];\n\t\t\t\tif(lastmv) {\n\t\t\t\t\tfor(i = 0, j = data.data.nodes.length; i < j; i++) {\n\t\t\t\t\t\tnodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];\n\t\t\t\t\t}\n\t\t\t\t\tlastmv.ins[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'copy_node' : 'move_node' ](nodes, lastmv.par, lastmv.pos, false, false, false, data.data.origin);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ti = $(data.event.target).closest('.jstree');\n\t\t\t\t\tif(i.length && laster && laster.error && laster.error === 'check') {\n\t\t\t\t\t\ti = i.jstree(true);\n\t\t\t\t\t\tif(i) {\n\t\t\t\t\t\t\ti.settings.core.error.call(this, laster);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastev = false;\n\t\t\t\tlastmv = false;\n\t\t\t})\n\t\t\t.on('keyup.jstree keydown.jstree', function (e, data) {\n\t\t\t\tdata = $.vakata.dnd._get();\n\t\t\t\tif(data && data.data && data.data.jstree) {\n\t\t\t\t\tif (e.type === \"keyup\" && e.which === 27) {\n\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\n\t\t\t\t\t\tlastmv = false;\n\t\t\t\t\t\tlaster = false;\n\t\t\t\t\t\tlastev = false;\n\t\t\t\t\t\topento = false;\n\t\t\t\t\t\tmarker.hide().detach();\n\t\t\t\t\t\t$.vakata.dnd._clean();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.helper.find('.jstree-copy').first()[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey))) ? 'show' : 'hide' ]();\n\t\t\t\t\t\tif(lastev) {\n\t\t\t\t\t\t\tlastev.metaKey = e.metaKey;\n\t\t\t\t\t\t\tlastev.ctrlKey = e.ctrlKey;\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', lastev);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t});\n\n\t// helpers\n\t(function ($) {\n\t\t$.vakata.html = {\n\t\t\tdiv : $('<div />'),\n\t\t\tescape : function (str) {\n\t\t\t\treturn $.vakata.html.div.text(str).html();\n\t\t\t},\n\t\t\tstrip : function (str) {\n\t\t\t\treturn $.vakata.html.div.empty().append($.parseHTML(str)).text();\n\t\t\t}\n\t\t};\n\t\t// private variable\n\t\tvar vakata_dnd = {\n\t\t\telement\t: false,\n\t\t\ttarget\t: false,\n\t\t\tis_down\t: false,\n\t\t\tis_drag\t: false,\n\t\t\thelper\t: false,\n\t\t\thelper_w: 0,\n\t\t\tdata\t: false,\n\t\t\tinit_x\t: 0,\n\t\t\tinit_y\t: 0,\n\t\t\tscroll_l: 0,\n\t\t\tscroll_t: 0,\n\t\t\tscroll_e: false,\n\t\t\tscroll_i: false,\n\t\t\tis_touch: false\n\t\t};\n\t\t$.vakata.dnd = {\n\t\t\tsettings : {\n\t\t\t\tscroll_speed\t\t: 10,\n\t\t\t\tscroll_proximity\t: 20,\n\t\t\t\thelper_left\t\t\t: 5,\n\t\t\t\thelper_top\t\t\t: 10,\n\t\t\t\tthreshold\t\t\t: 5,\n\t\t\t\tthreshold_touch\t\t: 10\n\t\t\t},\n\t\t\t_trigger : function (event_name, e, data) {\n\t\t\t\tif (data === undefined) {\n\t\t\t\t\tdata = $.vakata.dnd._get();\n\t\t\t\t}\n\t\t\t\tdata.event = e;\n\t\t\t\t$(document).trigger(\"dnd_\" + event_name + \".vakata\", data);\n\t\t\t},\n\t\t\t_get : function () {\n\t\t\t\treturn {\n\t\t\t\t\t\"data\"\t\t: vakata_dnd.data,\n\t\t\t\t\t\"element\"\t: vakata_dnd.element,\n\t\t\t\t\t\"helper\"\t: vakata_dnd.helper\n\t\t\t\t};\n\t\t\t},\n\t\t\t_clean : function () {\n\t\t\t\tif(vakata_dnd.helper) { vakata_dnd.helper.remove(); }\n\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\tvakata_dnd = {\n\t\t\t\t\telement\t: false,\n\t\t\t\t\ttarget\t: false,\n\t\t\t\t\tis_down\t: false,\n\t\t\t\t\tis_drag\t: false,\n\t\t\t\t\thelper\t: false,\n\t\t\t\t\thelper_w: 0,\n\t\t\t\t\tdata\t: false,\n\t\t\t\t\tinit_x\t: 0,\n\t\t\t\t\tinit_y\t: 0,\n\t\t\t\t\tscroll_l: 0,\n\t\t\t\t\tscroll_t: 0,\n\t\t\t\t\tscroll_e: false,\n\t\t\t\t\tscroll_i: false,\n\t\t\t\t\tis_touch: false\n\t\t\t\t};\n\t\t\t\t$(document).off(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\n\t\t\t\t$(document).off(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\n\t\t\t},\n\t\t\t_scroll : function (init_only) {\n\t\t\t\tif(!vakata_dnd.scroll_e || (!vakata_dnd.scroll_l && !vakata_dnd.scroll_t)) {\n\t\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.scroll_i) {\n\t\t\t\t\tvakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(init_only === true) { return false; }\n\n\t\t\t\tvar i = vakata_dnd.scroll_e.scrollTop(),\n\t\t\t\t\tj = vakata_dnd.scroll_e.scrollLeft();\n\t\t\t\tvakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tvakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tif(i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag causes an element to scroll\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_scroll.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {jQuery} event the element that is scrolling\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.dnd._trigger(\"scroll\", vakata_dnd.scroll_e);\n\t\t\t\t}\n\t\t\t},\n\t\t\tstart : function (e, data, html) {\n\t\t\t\tif(e.type === \"touchstart\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) { $.vakata.dnd.stop({}); }\n\t\t\t\ttry {\n\t\t\t\t\te.currentTarget.unselectable = \"on\";\n\t\t\t\t\te.currentTarget.onselectstart = function() { return false; };\n\t\t\t\t\tif(e.currentTarget.style) {\n\t\t\t\t\t\te.currentTarget.style.touchAction = \"none\";\n\t\t\t\t\t\te.currentTarget.style.msTouchAction = \"none\";\n\t\t\t\t\t\te.currentTarget.style.MozUserSelect = \"none\";\n\t\t\t\t\t}\n\t\t\t\t} catch(ignore) { }\n\t\t\t\tvakata_dnd.init_x\t= e.pageX;\n\t\t\t\tvakata_dnd.init_y\t= e.pageY;\n\t\t\t\tvakata_dnd.data\t\t= data;\n\t\t\t\tvakata_dnd.is_down\t= true;\n\t\t\t\tvakata_dnd.element\t= e.currentTarget;\n\t\t\t\tvakata_dnd.target\t= e.target;\n\t\t\t\tvakata_dnd.is_touch\t= e.type === \"touchstart\";\n\t\t\t\tif(html !== false) {\n\t\t\t\t\tvakata_dnd.helper = $(\"<div id='vakata-dnd'></div>\").html(html).css({\n\t\t\t\t\t\t\"display\"\t\t: \"block\",\n\t\t\t\t\t\t\"margin\"\t\t: \"0\",\n\t\t\t\t\t\t\"padding\"\t\t: \"0\",\n\t\t\t\t\t\t\"position\"\t\t: \"absolute\",\n\t\t\t\t\t\t\"top\"\t\t\t: \"-2000px\",\n\t\t\t\t\t\t\"lineHeight\"\t: \"16px\",\n\t\t\t\t\t\t\"zIndex\"\t\t: \"10000\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$(document).on(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\n\t\t\t\t$(document).on(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdrag : function (e) {\n\t\t\t\tif(e.type === \"touchmove\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.is_down) { return; }\n\t\t\t\tif(!vakata_dnd.is_drag) {\n\t\t\t\t\tif(\n\t\t\t\t\t\tMath.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) ||\n\t\t\t\t\t\tMath.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\t\t\tvakata_dnd.helper.appendTo(document.body);\n\t\t\t\t\t\t\tvakata_dnd.helper_w = vakata_dnd.helper.outerWidth();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvakata_dnd.is_drag = true;\n\t\t\t\t\t\t$(vakata_dnd.target).one('click.vakata', false);\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered on the document when a drag starts\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t\t * @name dnd_start.vakata\n\t\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t\t * @param {Object} event the event that caused the start (probably mousemove)\n\t\t\t\t\t\t */\n\t\t\t\t\t\t$.vakata.dnd._trigger(\"start\", e);\n\t\t\t\t\t}\n\t\t\t\t\telse { return; }\n\t\t\t\t}\n\n\t\t\t\tvar d  = false, w  = false,\n\t\t\t\t\tdh = false, wh = false,\n\t\t\t\t\tdw = false, ww = false,\n\t\t\t\t\tdt = false, dl = false,\n\t\t\t\t\tht = false, hl = false;\n\n\t\t\t\tvakata_dnd.scroll_t = 0;\n\t\t\t\tvakata_dnd.scroll_l = 0;\n\t\t\t\tvakata_dnd.scroll_e = false;\n\t\t\t\t$($(e.target).parentsUntil(\"body\").addBack().get().reverse())\n\t\t\t\t\t.filter(function () {\n\t\t\t\t\t\treturn\t(/^auto|scroll$/).test($(this).css(\"overflow\")) &&\n\t\t\t\t\t\t\t\t(this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);\n\t\t\t\t\t})\n\t\t\t\t\t.each(function () {\n\t\t\t\t\t\tvar t = $(this), o = t.offset();\n\t\t\t\t\t\tif(this.scrollHeight > this.offsetHeight) {\n\t\t\t\t\t\t\tif(o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\t\t\tif(e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_t = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.scrollWidth > this.offsetWidth) {\n\t\t\t\t\t\t\tif(o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\t\t\tif(e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\t\tvakata_dnd.scroll_e = $(this);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tif(!vakata_dnd.scroll_e) {\n\t\t\t\t\td  = $(document); w = $(window);\n\t\t\t\t\tdh = d.height(); wh = w.height();\n\t\t\t\t\tdw = d.width(); ww = w.width();\n\t\t\t\t\tdt = d.scrollTop(); dl = d.scrollLeft();\n\t\t\t\t\tif(dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_t = -1;  }\n\t\t\t\t\tif(dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\tif(dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\tif(dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\tvakata_dnd.scroll_e = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.scroll_e) { $.vakata.dnd._scroll(true); }\n\n\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\tht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);\n\t\t\t\t\thl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);\n\t\t\t\t\tif(dh && ht + 25 > dh) { ht = dh - 50; }\n\t\t\t\t\tif(dw && hl + vakata_dnd.helper_w > dw) { hl = dw - (vakata_dnd.helper_w + 2); }\n\t\t\t\t\tvakata_dnd.helper.css({\n\t\t\t\t\t\tleft\t: hl + \"px\",\n\t\t\t\t\t\ttop\t\t: ht + \"px\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when a drag is in progress\n\t\t\t\t * @event\n\t\t\t\t * @plugin dnd\n\t\t\t\t * @name dnd_move.vakata\n\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t * @param {Object} event the event that caused this to trigger (most likely mousemove)\n\t\t\t\t */\n\t\t\t\t$.vakata.dnd._trigger(\"move\", e);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tstop : function (e) {\n\t\t\t\tif(e.type === \"touchend\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag stops (the dragged element is dropped)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_stop.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {Object} event the event that caused the stop\n\t\t\t\t\t */\n\t\t\t\t\tif (e.target !== vakata_dnd.target) {\n\t\t\t\t\t\t$(vakata_dnd.target).off('click.vakata');\n\t\t\t\t\t}\n\t\t\t\t\t$.vakata.dnd._trigger(\"stop\", e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(e.type === \"touchend\" && e.target === vakata_dnd.target) {\n\t\t\t\t\t\tvar to = setTimeout(function () { $(e.target).click(); }, 100);\n\t\t\t\t\t\t$(e.target).one('click', function() { if(to) { clearTimeout(to); } });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$.vakata.dnd._clean();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t}($));\n\n\t// include the dnd plugin by default\n\t// $.jstree.defaults.plugins.push(\"dnd\");\n\n\treturn $;\n\t\n});\n\ndefine('skylark-ui-datatree/plugin/massload',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\n\t\"use strict\";\n\n\tif($.jstree.plugins.massload) { return; }\n\n\t/**\n\t * massload configuration\n\t *\n\t * It is possible to set this to a standard jQuery-like AJAX config.\n\t * In addition to the standard jQuery ajax options here you can supply functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node IDs need to be loaded, the return value of those functions will be used.\n\t *\n\t * You can also set this to a function, that function will receive the node IDs being loaded as argument and a second param which is a function (callback) which should be called with the result.\n\t *\n\t * Both the AJAX and the function approach rely on the same return value - an object where the keys are the node IDs, and the value is the children of that node as an array.\n\t *\n\t *\t{\n\t *\t\t\"id1\" : [{ \"text\" : \"Child of ID1\", \"id\" : \"c1\" }, { \"text\" : \"Another child of ID1\", \"id\" : \"c2\" }],\n\t *\t\t\"id2\" : [{ \"text\" : \"Child of ID2\", \"id\" : \"c3\" }]\n\t *\t}\n\t * \n\t * @name $.jstree.defaults.massload\n\t * @plugin massload\n\t */\n\t$.jstree.defaults.massload = null;\n\t$.jstree.plugins.massload = function (options, parent) {\n\t\tthis.init = function (el, options) {\n\t\t\tthis._data.massload = {};\n\t\t\tparent.init.call(this, el, options);\n\t\t};\n\t\tthis._load_nodes = function (nodes, callback, is_callback, force_reload) {\n\t\t\tvar s = this.settings.massload,\n\t\t\t\tnodesString = JSON.stringify(nodes),\n\t\t\t\ttoLoad = [],\n\t\t\t\tm = this._model.data,\n\t\t\t\ti, j, dom;\n\t\t\tif (!is_callback) {\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\t\tif(!m[nodes[i]] || ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || force_reload) ) {\n\t\t\t\t\t\ttoLoad.push(nodes[i]);\n\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\n\t\t\t\t\t\tif (dom && dom.length) {\n\t\t\t\t\t\t\tdom.addClass(\"jstree-loading\").attr('aria-busy',true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._data.massload = {};\n\t\t\t\tif (toLoad.length) {\n\t\t\t\t\tif($.isFunction(s)) {\n\t\t\t\t\t\treturn s.call(this, toLoad, $.proxy(function (data) {\n\t\t\t\t\t\t\tvar i, j;\n\t\t\t\t\t\t\tif(data) {\n\t\t\t\t\t\t\t\tfor(i in data) {\n\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\n\t\t\t\t\t\t\t\tif (dom && dom.length) {\n\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\n\t\t\t\t\t\t}, this));\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof s === 'object' && s && s.url) {\n\t\t\t\t\t\ts = $.extend(true, {}, s);\n\t\t\t\t\t\tif($.isFunction(s.url)) {\n\t\t\t\t\t\t\ts.url = s.url.call(this, toLoad);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($.isFunction(s.data)) {\n\t\t\t\t\t\t\ts.data = s.data.call(this, toLoad);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn $.ajax(s)\n\t\t\t\t\t\t\t.done($.proxy(function (data,t,x) {\n\t\t\t\t\t\t\t\t\tvar i, j;\n\t\t\t\t\t\t\t\t\tif(data) {\n\t\t\t\t\t\t\t\t\t\tfor(i in data) {\n\t\t\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\n\t\t\t\t\t\t\t\t\t\tif (dom && dom.length) {\n\t\t\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\n\t\t\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t\t.fail($.proxy(function (f) {\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\n\t\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn parent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\n\t\t};\n\t\tthis._load_node = function (obj, callback) {\n\t\t\tvar data = this._data.massload[obj.id],\n\t\t\t\trslt = null, dom;\n\t\t\tif(data) {\n\t\t\t\trslt = this[typeof data === 'string' ? '_append_html_data' : '_append_json_data'](\n\t\t\t\t\tobj,\n\t\t\t\t\ttypeof data === 'string' ? $($.parseHTML(data)).filter(function () { return this.nodeType !== 3; }) : data,\n\t\t\t\t\tfunction (status) { callback.call(this, status); }\n\t\t\t\t);\n\t\t\t\tdom = this.get_node(obj.id, true);\n\t\t\t\tif (dom && dom.length) {\n\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\n\t\t\t\t}\n\t\t\t\tdelete this._data.massload[obj.id];\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\treturn parent._load_node.call(this, obj, callback);\n\t\t};\n\t};\n\n\treturn $;\n\t\n});\ndefine('skylark-ui-datatree/plugin/search',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\n\t\"use strict\";\n\n\tif($.jstree.plugins.search) { return; }\n\n\t/**\n\t * stores all defaults for the search plugin\n\t * @name $.jstree.defaults.search\n\t * @plugin search\n\t */\n\t$.jstree.defaults.search = {\n\t\t/**\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results.\n\t\t *\n\t\t * A `str` (which is the search string) parameter will be added with the request, an optional `inside` parameter will be added if the search is limited to a node id. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 3 parameters - the search string, the callback to call with the array of nodes to load, and the optional node ID to limit the search to\n\t\t * @name $.jstree.defaults.search.ajax\n\t\t * @plugin search\n\t\t */\n\t\tajax : false,\n\t\t/**\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\n\t\t * @name $.jstree.defaults.search.fuzzy\n\t\t * @plugin search\n\t\t */\n\t\tfuzzy : false,\n\t\t/**\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.search.case_sensitive\n\t\t * @plugin search\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * Indicates if the tree should be filtered (by default) to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers).\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\n\t\t * @name $.jstree.defaults.search.show_only_matches\n\t\t * @plugin search\n\t\t */\n\t\tshow_only_matches : false,\n\t\t/**\n\t\t * Indicates if the children of matched element are shown (when show_only_matches is true)\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\n\t\t * @name $.jstree.defaults.search.show_only_matches_children\n\t\t * @plugin search\n\t\t */\n\t\tshow_only_matches_children : false,\n\t\t/**\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\n\t\t * @plugin search\n\t\t */\n\t\tclose_opened_onclear : true,\n\t\t/**\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_leaves_only\n\t\t * @plugin search\n\t\t */\n\t\tsearch_leaves_only : false,\n\t\t/**\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_callback\n\t\t * @plugin search\n\t\t */\n\t\tsearch_callback : false\n\t};\n\n\t$.jstree.plugins.search = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\t\t\tthis._data.search.som = false;\n\t\t\tthis._data.search.smc = false;\n\t\t\tthis._data.search.hdn = [];\n\n\t\t\tthis.element\n\t\t\t\t.on(\"search.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\n\t\t\t\t\t\t\tvar m = this._model.data, i, j, p = [], k, l;\n\t\t\t\t\t\t\tfor(i = 0, j = data.res.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif(m[data.res[i]] && !m[data.res[i]].state.hidden) {\n\t\t\t\t\t\t\t\t\tp.push(data.res[i]);\n\t\t\t\t\t\t\t\t\tp = p.concat(m[data.res[i]].parents);\n\t\t\t\t\t\t\t\t\tif(this._data.search.smc) {\n\t\t\t\t\t\t\t\t\t\tfor (k = 0, l = m[data.res[i]].children_d.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\t\t\tif (m[m[data.res[i]].children_d[k]] && !m[m[data.res[i]].children_d[k]].state.hidden) {\n\t\t\t\t\t\t\t\t\t\t\t\tp.push(m[data.res[i]].children_d[k]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tp = $.vakata.array_remove_item($.vakata.array_unique(p), $.jstree.root);\n\t\t\t\t\t\t\tthis._data.search.hdn = this.hide_all(true);\n\t\t\t\t\t\t\tthis.show_node(p, true);\n\t\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"clear_search.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\n\t\t\t\t\t\t\tthis.show_node(this._data.search.hdn, true);\n\t\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * used to search the tree nodes for a given string\n\t\t * @name search(str [, skip_async])\n\t\t * @param {String} str the search string\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\n\t\t * @param {Boolean} show_only_matches if set to true only matching nodes will be shown (keep in mind this can be very slow on large trees or old browsers)\n\t\t * @param {mixed} inside an optional node to whose children to limit the search\n\t\t * @param {Boolean} append if set to true the results of this search are appended to the previous search\n\t\t * @plugin search\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.search = function (str, skip_async, show_only_matches, inside, append, show_only_matches_children) {\n\t\t\tif(str === false || $.trim(str.toString()) === \"\") {\n\t\t\t\treturn this.clear_search();\n\t\t\t}\n\t\t\tinside = this.get_node(inside);\n\t\t\tinside = inside && inside.id ? inside.id : null;\n\t\t\tstr = str.toString();\n\t\t\tvar s = this.settings.search,\n\t\t\t\ta = s.ajax ? s.ajax : false,\n\t\t\t\tm = this._model.data,\n\t\t\t\tf = null,\n\t\t\t\tr = [],\n\t\t\t\tp = [], i, j;\n\t\t\tif(this._data.search.res.length && !append) {\n\t\t\t\tthis.clear_search();\n\t\t\t}\n\t\t\tif(show_only_matches === undefined) {\n\t\t\t\tshow_only_matches = s.show_only_matches;\n\t\t\t}\n\t\t\tif(show_only_matches_children === undefined) {\n\t\t\t\tshow_only_matches_children = s.show_only_matches_children;\n\t\t\t}\n\t\t\tif(!skip_async && a !== false) {\n\t\t\t\tif($.isFunction(a)) {\n\t\t\t\t\treturn a.call(this, str, $.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, this), inside);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ta = $.extend({}, a);\n\t\t\t\t\tif(!a.data) { a.data = {}; }\n\t\t\t\t\ta.data.str = str;\n\t\t\t\t\tif(inside) {\n\t\t\t\t\t\ta.data.inside = inside;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._data.search.lastRequest) {\n\t\t\t\t\t\tthis._data.search.lastRequest.abort();\n\t\t\t\t\t}\n\t\t\t\t\tthis._data.search.lastRequest = $.ajax(a)\n\t\t\t\t\t\t.fail($.proxy(function () {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.done($.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, this));\n\t\t\t\t\treturn this._data.search.lastRequest;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!append) {\n\t\t\t\tthis._data.search.str = str;\n\t\t\t\tthis._data.search.dom = $();\n\t\t\t\tthis._data.search.res = [];\n\t\t\t\tthis._data.search.opn = [];\n\t\t\t\tthis._data.search.som = show_only_matches;\n\t\t\t\tthis._data.search.smc = show_only_matches_children;\n\t\t\t}\n\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\n\t\t\t$.each(m[inside ? inside : $.jstree.root].children_d, function (ii, i) {\n\t\t\t\tvar v = m[i];\n\t\t\t\tif(v.text && !v.state.hidden && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) ) {\n\t\t\t\t\tr.push(i);\n\t\t\t\t\tp = p.concat(v.parents);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(r.length) {\n\t\t\t\tp = $.vakata.array_unique(p);\n\t\t\t\tfor(i = 0, j = p.length; i < j; i++) {\n\t\t\t\t\tif(p[i] !== $.jstree.root && m[p[i]] && this.open_node(p[i], null, 0) === true) {\n\t\t\t\t\t\tthis._data.search.opn.push(p[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!append) {\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\t\tthis._data.search.res = r;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.search.dom = this._data.search.dom.add($(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))));\n\t\t\t\t\tthis._data.search.res = $.vakata.array_unique(this._data.search.res.concat(r));\n\t\t\t\t}\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\n\t\t\t * @param {String} str the search string\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res, show_only_matches : show_only_matches });\n\t\t};\n\t\t/**\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\n\t\t * @name clear_search()\n\t\t * @plugin search\n\t\t * @trigger clear_search.jstree\n\t\t */\n\t\tthis.clear_search = function () {\n\t\t\tif(this.settings.search.close_opened_onclear) {\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name clear_search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\n\t\t\t * @param {String} str the search string (the last search string)\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\n\t\t\tif(this._data.search.res.length) {\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(this._data.search.res, function (v) {\n\t\t\t\t\treturn \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&');\n\t\t\t\t}).join(', #')));\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\n\t\t\t}\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\t\t\tthis._data.search.dom = $();\n\t\t};\n\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\n\t\t\tif(obj) {\n\t\t\t\tif($.inArray(obj.id, this._data.search.res) !== -1) {\n\t\t\t\t\tvar i, j, tmp = null;\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(tmp) {\n\t\t\t\t\t\ttmp.className += ' jstree-search';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t};\n\n\t// helpers\n\t(function ($) {\n\t\t// from http://kiro.me/projects/fuse.html\n\t\t$.vakata.search = function(pattern, txt, options) {\n\t\t\toptions = options || {};\n\t\t\toptions = $.extend({}, $.vakata.search.defaults, options);\n\t\t\tif(options.fuzzy !== false) {\n\t\t\t\toptions.fuzzy = true;\n\t\t\t}\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\n\t\t\tvar MATCH_LOCATION\t= options.location,\n\t\t\t\tMATCH_DISTANCE\t= options.distance,\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold,\n\t\t\t\tpatternLen = pattern.length,\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\n\t\t\tif(patternLen > 32) {\n\t\t\t\toptions.fuzzy = false;\n\t\t\t}\n\t\t\tif(options.fuzzy) {\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\n\t\t\t\tpattern_alphabet = (function () {\n\t\t\t\t\tvar mask = {},\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\n\t\t\t\t\t}\n\t\t\t\t\treturn mask;\n\t\t\t\t}());\n\t\t\t\tmatch_bitapScore = function (e, x) {\n\t\t\t\t\tvar accuracy = e / patternLen,\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\n\t\t\t\t\tif(!MATCH_DISTANCE) {\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\n\t\t\t\t\t}\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\n\t\t\t\t};\n\t\t\t}\n\t\t\tsearch = function (text) {\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: true,\n\t\t\t\t\t\tscore: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif(!options.fuzzy) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: false,\n\t\t\t\t\t\tscore: 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tvar i, j,\n\t\t\t\t\ttextLen = text.length,\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\n\t\t\t\t\tbinMin, binMid,\n\t\t\t\t\tbinMax = patternLen + textLen,\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\n\t\t\t\t\tscore = 1,\n\t\t\t\t\tlocations = [];\n\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\n\t\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbestLoc = -1;\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tbinMin = 0;\n\t\t\t\t\tbinMid = binMax;\n\t\t\t\t\twhile (binMin < binMid) {\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\n\t\t\t\t\t\t\tbinMin = binMid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\n\t\t\t\t\t}\n\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\n\t\t\t\t\trd = new Array(finish + 2);\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rd[j] & matchmask) {\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\n\t\t\t\t\t\t\t\tscoreThreshold = score;\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlastRd = rd;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: bestLoc >= 0,\n\t\t\t\t\tscore: score\n\t\t\t\t};\n\t\t\t};\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\n\t\t};\n\t\t$.vakata.search.defaults = {\n\t\t\tlocation : 0,\n\t\t\tdistance : 100,\n\t\t\tthreshold : 0.6,\n\t\t\tfuzzy : false,\n\t\t\tcaseSensitive : false\n\t\t};\n\t}($));\n\n\t// include the search plugin by default\n\t// $.jstree.defaults.plugins.push(\"search\");\n\n\treturn $;\n\t\n});\n\ndefine('skylark-ui-datatree/plugin/sort',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\n\t\"use strict\";\n\n\tif($.jstree.plugins.sort) { return; }\n\n\t/**\n\t * the settings function used to sort the nodes.\n\t * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.\n\t * @name $.jstree.defaults.sort\n\t * @plugin sort\n\t */\n\t$.jstree.defaults.sort = function (a, b) {\n\t\t//return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);\n\t\treturn this.get_text(a) > this.get_text(b) ? 1 : -1;\n\t};\n\t$.jstree.plugins.sort = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis.element\n\t\t\t\t.on(\"model.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"rename_node.jstree create_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent || data.node.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent || data.node.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"move_node.jstree copy_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent, true);\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * used to sort a node's children\n\t\t * @private\n\t\t * @name sort(obj [, deep])\n\t\t * @param  {mixed} obj the node\n\t\t * @param {Boolean} deep if set to `true` nodes are sorted recursively.\n\t\t * @plugin sort\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.sort = function (obj, deep) {\n\t\t\tvar i, j;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(obj && obj.children && obj.children.length) {\n\t\t\t\tobj.children.sort($.proxy(this.settings.sort, this));\n\t\t\t\tif(deep) {\n\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\tthis.sort(obj.children_d[i], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\t// include the sort plugin by default\n\t// $.jstree.defaults.plugins.push(\"sort\");\n\n\treturn $;\n\t\n});\ndefine('skylark-ui-datatree/plugin/state',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\n\t\"use strict\";\n\n\tif($.jstree.plugins.state) { return; }\n\n\tvar to = false;\n\t/**\n\t * stores all defaults for the state plugin\n\t * @name $.jstree.defaults.state\n\t * @plugin state\n\t */\n\t$.jstree.defaults.state = {\n\t\t/**\n\t\t * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.\n\t\t * @name $.jstree.defaults.state.key\n\t\t * @plugin state\n\t\t */\n\t\tkey\t\t: 'jstree',\n\t\t/**\n\t\t * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.\n\t\t * @name $.jstree.defaults.state.events\n\t\t * @plugin state\n\t\t */\n\t\tevents\t: 'changed.jstree open_node.jstree close_node.jstree check_node.jstree uncheck_node.jstree',\n\t\t/**\n\t\t * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.\n\t\t * @name $.jstree.defaults.state.ttl\n\t\t * @plugin state\n\t\t */\n\t\tttl\t\t: false,\n\t\t/**\n\t\t * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.\n\t\t * @name $.jstree.defaults.state.filter\n\t\t * @plugin state\n\t\t */\n\t\tfilter\t: false,\n\t\t/**\n\t\t * Should loaded nodes be restored (setting this to true means that it is possible that the whole tree will be loaded for some users - use with caution). Defaults to `false`\n\t\t * @name $.jstree.defaults.state.preserve_loaded\n\t\t * @plugin state\n\t\t */\n\t\tpreserve_loaded : false\n\t};\n\t$.jstree.plugins.state = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tvar bind = $.proxy(function () {\n\t\t\t\tthis.element.on(this.settings.state.events, $.proxy(function () {\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\tto = setTimeout($.proxy(function () { this.save_state(); }, this), 100);\n\t\t\t\t}, this));\n\t\t\t\t/**\n\t\t\t\t * triggered when the state plugin is finished restoring the state (and immediately after ready if there is no state to restore).\n\t\t\t\t * @event\n\t\t\t\t * @name state_ready.jstree\n\t\t\t\t * @plugin state\n\t\t\t\t */\n\t\t\t\tthis.trigger('state_ready');\n\t\t\t}, this);\n\t\t\tthis.element\n\t\t\t\t.on(\"ready.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.one(\"restore_state.jstree\", bind);\n\t\t\t\t\t\tif(!this.restore_state()) { bind(); }\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * save the state\n\t\t * @name save_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.save_state = function () {\n\t\t\tvar tm = this.get_state();\n\t\t\tif (!this.settings.state.preserve_loaded) {\n\t\t\t\tdelete tm.core.loaded;\n\t\t\t}\n\t\t\tvar st = { 'state' : tm, 'ttl' : this.settings.state.ttl, 'sec' : +(new Date()) };\n\t\t\t$.vakata.storage.set(this.settings.state.key, JSON.stringify(st));\n\t\t};\n\t\t/**\n\t\t * restore the state from the user's computer\n\t\t * @name restore_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.restore_state = function () {\n\t\t\tvar k = $.vakata.storage.get(this.settings.state.key);\n\t\t\tif(!!k) { try { k = JSON.parse(k); } catch(ex) { return false; } }\n\t\t\tif(!!k && k.ttl && k.sec && +(new Date()) - k.sec > k.ttl) { return false; }\n\t\t\tif(!!k && k.state) { k = k.state; }\n\t\t\tif(!!k && $.isFunction(this.settings.state.filter)) { k = this.settings.state.filter.call(this, k); }\n\t\t\tif(!!k) {\n\t\t\t\tif (!this.settings.state.preserve_loaded) {\n\t\t\t\t\tdelete k.core.loaded;\n\t\t\t\t}\n\t\t\t\tthis.element.one(\"set_state.jstree\", function (e, data) { data.instance.trigger('restore_state', { 'state' : $.extend(true, {}, k) }); });\n\t\t\t\tthis.set_state(k);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\t/**\n\t\t * clear the state on the user's computer\n\t\t * @name clear_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.clear_state = function () {\n\t\t\treturn $.vakata.storage.del(this.settings.state.key);\n\t\t};\n\t};\n\n\t(function ($, undefined) {\n\t\t$.vakata.storage = {\n\t\t\t// simply specifying the functions in FF throws an error\n\t\t\tset : function (key, val) { return window.localStorage.setItem(key, val); },\n\t\t\tget : function (key) { return window.localStorage.getItem(key); },\n\t\t\tdel : function (key) { return window.localStorage.removeItem(key); }\n\t\t};\n\t}($));\n\n\t// include the state plugin by default\n\t// $.jstree.defaults.plugins.push(\"state\");\n\n\treturn $;\n\t\n});\ndefine('skylark-ui-datatree/plugin/treegrid',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"skylark-ui-swt/menu\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,menu,jstree,sbswt){\n    var BLANKRE = /^\\s*$/g,\n        IDREGEX = /[\\\\:&!^|()\\[\\]<>@*'+~#\";,= \\/${}%]/g,\n        escapeId = function(id) {\n            return (id || \"\").replace(IDREGEX, '\\\\$&');\n        },\n        NODE_DATA_ATTR = \"data-jstreegrid\",\n        COL_DATA_ATTR = \"data-jstreegrid-column\",\n        SEARCHCLASS = \"jstree-search\",\n        SPECIAL_TITLE = \"_DATA_\",\n        LEVELINDENT = 24,\n        styled = false,\n        MINCOLWIDTH = 10,\n        generateCellId = function(tree, id) {\n            return (\"jstree_\" + tree + \"_grid_\" + escapeId(id) + \"_col\");\n        },\n        getIds = function(nodes) {\n            return $.makeArray(nodes.map(function() {\n                return this.id;\n            }));\n        },\n        findDataCell = function(uniq, ids, col, scope) {\n            if (scope == undefined) {\n                scope = $();\n            };\n            if (ids === null || ids === undefined || ids.length === 0) {\n                return scope;\n            }\n            var ret = $(),\n                columns = [].concat(col),\n                cellId;\n            if (typeof(ids) === \"string\") {\n                cellId = generateCellId(uniq, ids);\n                ret = columns.map(function(col) {\n                    return \"#\" + cellId + col;\n                }).join(\", \");\n            } else {\n                ret = []\n                ids.forEach(function(elm, i) {\n                    var cellId = generateCellId(uniq, elm);\n                    ret = ret.concat(columns.map(function(col) {\n                        return \"#\" + cellId + col;\n                    }));\n                });\n                ret = ret.join(\", \");\n            }\n            return columns.length == 1 ? scope.find(ret) : $(ret);\n        },\n        isClickedSep = false,\n        toResize = null,\n        oldMouseX = 0,\n        newMouseX = 0,\n\n        /*jslint regexp:true */\n        htmlstripre = /<\\/?[^>]+>/gi,\n        /*jslint regexp:false */\n\n        getIndent = function(node, tree) {\n            var div, i, li, width;\n\n            // did we already save it for this tree?\n            tree._gridSettings = tree._gridSettings || {};\n            if (tree._gridSettings.indent > 0) {\n                width = tree._gridSettings.indent;\n            } else {\n                // create a new div on the DOM but not visible on the page\n                div = $(\"<div></div>\");\n                i = node.prev(\"i\");\n                li = i.parent();\n                // add to that div all of the classes on the tree root\n                div.addClass(tree.get_node(\"#\", true).attr(\"class\"));\n\n                // move the li to the temporary div root\n                li.appendTo(div);\n\n                // attach to the body quickly\n                div.appendTo($(\"body\"));\n\n                // get the width\n                width = i.width() || LEVELINDENT;\n\n                // detach the li from the new div and destroy the new div\n                li.detach();\n                div.remove();\n\n                // save it for the future\n                tree._gridSettings.indent = width;\n            }\n\n\n            return (width);\n\n        },\n\n        copyData = function(fromtree, from, totree, to, recurse) {\n            var i, j;\n            to.data = $.extend(true, {}, from.data);\n            if (from && from.children_d && recurse) {\n                for (i = 0, j = from.children_d.length; i < j; i++) {\n                    copyData(fromtree, fromtree.get_node(from.children_d[i]), totree, totree.get_node(to.children_d[i]), recurse);\n                }\n            }\n        },\n\n        findLastClosedNode = function(tree, id) {\n            // first get our node\n            var ret, node = tree.get_node(id),\n                children = node.children;\n            // is it closed?\n            if (!children || children.length <= 0 || !node.state.opened) {\n                ret = id;\n            } else {\n                ret = findLastClosedNode(tree, children[children.length - 1]);\n            }\n            return (ret);\n        },\n\n        renderAWidth = function(node, tree) {\n            var depth, width,\n                fullWidth = parseInt(tree.settings.grid.columns[0].width, 10) + parseInt(tree._gridSettings.treeWidthDiff, 10);\n            // need to use a selector in jquery 1.4.4+\n            depth = tree.get_node(node).parents.length;\n            width = fullWidth - depth * getIndent(node, tree);\n            // the following line is no longer needed, since we are doing this inside a <td>\n            //a.css({\"vertical-align\": \"top\", \"overflow\":\"hidden\"});\n            return (fullWidth);\n        },\n        renderATitle = function(node, t, tree) {\n            var a = node.hasClass(\"jstree-anchor\") ? node : node.children(\"[class~='jstree-anchor']\"),\n                title, col = tree.settings.grid.columns[0];\n            // get the title\n            title = \"\";\n            if (col.title) {\n                if (col.title === SPECIAL_TITLE) {\n                    title = tree.get_text(t);\n                } else if (t.attr(col.title)) {\n                    title = t.attr(col.title);\n                }\n            }\n            // strip out HTML\n            title = title.replace(htmlstripre, '');\n            if (title) {\n                a.attr(\"title\", title);\n            }\n        },\n        getCellData = function(value, data) {\n            var val;\n            // get the contents of the cell - value could be a string or a function\n            if (value !== undefined && value !== null) {\n                if (typeof(value) === \"function\") {\n                    val = value(data);\n                } else if (data.data !== null && data.data !== undefined && data.data[value] !== undefined) {\n                    val = data.data[value];\n                } else {\n                    val = \"\";\n                }\n            } else {\n                val = \"\";\n            }\n            return val;\n        };\n\n    $.jstree.defaults.grid = {\n        width: 'auto'\n    };\n\n    $.jstree.plugins.grid = function(options, parent) {\n        this._initialize = function() {\n            if (!this._initialized) {\n                var s = this.settings.grid || {},\n                    styles, container = this.element,\n                    i,\n                    gs = this._gridSettings = {\n                        columns: s.columns || [],\n                        treeClass: \"jstree-grid-col-0\",\n                        context: s.contextmenu || false,\n                        columnWidth: s.columnWidth,\n                        defaultConf: {\n                            \"*display\": \"inline\",\n                            \"*+display\": \"inline\"\n                        },\n                        isThemeroller: !!this._data.themeroller,\n                        treeWidthDiff: 0,\n                        resizable: s.resizable,\n                        draggable: s.draggable,\n                        stateful: s.stateful,\n                        indent: 0,\n                        sortOrder: 'text',\n                        sortAsc: true,\n                        caseInsensitive: s.caseInsensitive,\n                        fixedHeader: s.fixedHeader !== false,\n                        width: s.width,\n                        height: s.height,\n                        gridcontextmenu: s.gridcontextmenu,\n                        treecol: 0,\n                        gridcols: []\n                    },\n                    cols = gs.columns,\n                    treecol = 0,\n                    columnSearch = false;\n                if (gs.gridcontextmenu === true) {\n                    gs.gridcontextmenu = function(grid, tree, node, val, col, t, target) {\n                        return {\n                            \"edit\": {\n                                label: \"Edit\",\n                                \"action\": function(data) {\n                                    var obj = t.get_node(node);\n                                    grid._edit(obj, col, target);\n                                }\n                            }\n                        }\n                    }\n                } else if (gs.gridcontextmenu === false) {\n                    gs.gridcontextmenu = false;\n                }\n                // find which column our tree shuld go in\n                for (var i = 0, len = s.columns.length; i < len; i++) {\n                    if (s.columns[i].tree) {\n                        // save which column it was\n                        treecol = i;\n                        gs.treecol = treecol;\n                    } else {\n                        gs.gridcols.push(i);\n                    }\n                }\n                // set a unique ID for this table\n                this.uniq = Math.ceil(Math.random() * 1000);\n                this.rootid = container.attr(\"id\");\n\n                var msie = /msie/.test(navigator.userAgent.toLowerCase());\n                if (msie) {\n                    var version = parseFloat(navigator.appVersion.split(\"MSIE\")[1]);\n                    if (version < 8) {\n                        gs.defaultConf.display = \"inline\";\n                        gs.defaultConf.zoom = \"1\";\n                    }\n                }\n\n                // set up the classes we need\n                if (!styled) {\n                    styled = true;\n                    styles = [\n                        '.jstree-grid-cell {vertical-align: top; overflow:hidden;margin-left:0;position:relative;width: 100%;padding-left:7px;white-space: nowrap;}',\n                        '.jstree-grid-cell span {margin-right:0px;margin-right:0px;*display:inline;*+display:inline;white-space: nowrap;}',\n                        '.jstree-grid-separator {position:absolute; top:0; right:0; height:24px; margin-left: -2px; border-width: 0 2px 0 0; *display:inline; *+display:inline; margin-right:0px;width:0px;}',\n                        '.jstree-grid-header-cell {overflow: hidden; white-space: nowrap;padding: 1px 3px 2px 5px; cursor: default;}',\n                        '.jstree-grid-header-themeroller {border: 0; padding: 1px 3px;}',\n                        '.jstree-grid-header-regular {position:relative; background-color: #EBF3FD; z-index: 1;}',\n                        '.jstree-grid-hidden {display: none;}',\n                        '.jstree-grid-resizable-separator {cursor: col-resize; width: 2px;}',\n                        '.jstree-grid-separator-regular {border-color: #d0d0d0; border-style: solid;}',\n                        '.jstree-grid-cell-themeroller {border: none !important; background: transparent !important;}',\n                        '.jstree-grid-wrapper {table-layout: fixed; width: 100%; overflow: auto; position: relative;}',\n                        '.jstree-grid-midwrapper {display: table-row;}',\n                        '.jstree-grid-width-auto {width:auto;display:block;}',\n                        '.jstree-grid-column {display: table-cell; overflow: hidden;}',\n                        '.jstree-grid-ellipsis {text-overflow: ellipsis;}',\n                        '.jstree-grid-col-0 {width: 100%;}'\n                    ];\n                    $('<style type=\"text/css\">' + styles.join(\"\\n\") + '</style>').appendTo(\"head\");\n                }\n                this.gridWrapper = $(\"<div></div>\").addClass(\"jstree-grid-wrapper\").insertAfter(container);\n                this.midWrapper = $(\"<div></div>\").addClass(\"jstree-grid-midwrapper\").appendTo(this.gridWrapper);\n                // set the wrapper width\n                if (s.width) {\n                    this.gridWrapper.width(s.width);\n                }\n                if (s.height) {\n                    this.gridWrapper.height(s.height);\n                }\n                // create the data columns\n                for (var i = 0, len = cols.length; i < len; i++) {\n                    // create the column\n                    $(\"<div></div>\").addClass(\"jstree-default jstree-grid-column jstree-grid-column-\" + i + \" jstree-grid-column-root-\" + this.rootid).appendTo(this.midWrapper);\n                }\n                this.midWrapper.children(\"div:eq(\" + treecol + \")\").append(container);\n                container.addClass(\"jstree-grid-cell\");\n\n                //move header with scroll\n                if (gs.fixedHeader) {\n                    this.gridWrapper.scroll(function() {\n                        $(this).find('.jstree-grid-header').css('top', $(this).scrollTop());\n                    });\n                }\n\n                // copy original sort function\n                var defaultSort = $.proxy(this.settings.sort, this);\n\n                // override sort function\n                this.settings.sort = function(a, b) {\n                    var bigger, colrefs = this.colrefs;\n\n                    if (gs.sortOrder === 'text') {\n                        var caseInsensitiveSort = this.get_text(a).toLowerCase().localeCompare(this.get_text(b).toLowerCase());\n                        bigger = gs.caseInsensitive ? (caseInsensitiveSort === 1) : (defaultSort(a, b) === 1);\n                    } else {\n                        // gs.sortOrder just refers to the unique random name for this column\n                        // we need to get the correct value\n                        var nodeA = this.get_node(a),\n                            nodeB = this.get_node(b),\n                            value = colrefs[gs.sortOrder].value,\n                            valueA = typeof(value) === 'function' ? value(nodeA) : nodeA.data[value],\n                            valueB = typeof(value) === 'function' ? value(nodeB) : nodeB.data[value];\n                        if (typeof(valueA) && typeof(valueB) !== 'undefined') {\n                            bigger = gs.caseInsensitive ? valueA.toLowerCase() > valueB.toLowerCase() : valueA > valueB;\n                        }\n                    }\n\n                    if (!gs.sortAsc)\n                        bigger = !bigger;\n\n                    return bigger ? 1 : -1;\n                };\n\n                // sortable columns when jQuery UI is available\n                if (gs.draggable) {\n                    if (!$.ui || !$.ui.sortable) {\n                        console.warn('[jstree-grid] draggable option requires jQuery UI');\n                    } else {\n                        var from, to;\n\n                        $(this.midWrapper).sortable({\n                            axis: \"x\",\n                            handle: \".jstree-grid-header\",\n                            cancel: \".jstree-grid-separator\",\n                            start: function(event, ui) {\n                                from = ui.item.index();\n                            },\n                            stop: function(event, ui) {\n                                to = ui.item.index();\n                                gs.columns.splice(to, 0, gs.columns.splice(from, 1)[0]);\n                            }\n                        });\n                    }\n                }\n\n                //public function. validate searchObject keys, set columnSearch flag, calls jstree search and reset columnSearch flag\n                this.searchColumn = function(searchObj) {\n                    var validatedSearchObj = {};\n\n                    if (typeof searchObj == 'object') {\n                        for (var columnIndex in searchObj) {\n                            if (searchObj.hasOwnProperty(columnIndex)) {\n                                // keys should be the index of a column. This means the following:\n                                // only integers and smaller than the number of columns and bigger or equal to 0\n                                // (possilbe idea for in the future: ability to set key as a more human readable term like the column header and then map it here to an index)\n                                if (columnIndex % 1 === 0 && columnIndex < cols.length && columnIndex >= 0) {\n                                    validatedSearchObj[columnIndex] = searchObj[columnIndex];\n                                }\n                            }\n                        }\n                    }\n                    columnSearch = validatedSearchObj;\n\n                    if (Object.keys(validatedSearchObj).length !== 0) {\n                        //the search string doesn't matter. we'll use the search string in the columnSearch object!\n                        this.search('someValue');\n                    } else { // nothing to search so reset jstree's search by passing an empty string\n                        this.search('');\n                    }\n                    columnSearch = false;\n                }\n\n\n                // set default search for each column with no user defined search function (used when doing a columnSearch)\n                for (var i = 0, len = cols.length; i < len; i++) {\n                    var column = cols[i];\n                    if (typeof(column.search_callback) !== \"function\") {\n                        // no search callback so set default function\n                        column.search_callback = function(str, columnValue, node, column) {\n                            var f = new $.vakata.search(str, true, {\n                                caseSensitive: searchSettings.case_sensitive,\n                                fuzzy: searchSettings.fuzzy\n                            });\n\n                            return f.search(columnValue).isMatch;\n\n                        };\n                    }\n                }\n\n                // if there was no overridden search_callback, we will provide it\n                // it will use the default per-node search algorithm, augmented by searching our data nodes\n                var searchSettings = this.settings.search;\n                var omniSearchCallback = searchSettings.search_callback;\n\n                if (!omniSearchCallback) {\n                    omniSearchCallback = function(str, node) {\n                        var i, f = new $.vakata.search(str, true, {\n                                caseSensitive: searchSettings.case_sensitive,\n                                fuzzy: searchSettings.fuzzy\n                            }),\n                            matched = f.search(node.text).isMatch,\n                            col;\n\n                        // only bother looking in each cell if it was not yet matched\n                        if (!matched) {\n                            for (var i = 0, len = cols.length; i < len; i++) {\n                                if (treecol === i) {\n                                    continue;\n                                }\n                                col = cols[i];\n                                matched = f.search(getCellData(col.value, node)).isMatch;\n                                if (matched) {\n                                    break;\n                                }\n                            }\n                        }\n                        return matched;\n                    }\n                }\n\n                searchSettings.search_callback = function(str, node) {\n                    var matched = false;\n                    if (columnSearch) {\n                        //using logical AND for column searches (more options in the future)\n                        for (var columnIndex in columnSearch) {\n                            if (columnSearch.hasOwnProperty(columnIndex)) {\n                                var searchValue = columnSearch[columnIndex];\n                                if (searchValue == '') {\n                                    continue;\n                                }\n                                var col = cols[columnIndex];\n                                if (treecol == columnIndex) {\n                                    matched = col.search_callback(searchValue, node.text, node, col)\n                                } else {\n                                    matched = col.search_callback(searchValue, getCellData(col.value, node), node, col)\n                                }\n\n                                if (!matched) {\n                                    break; //found one that didn't match\n                                }\n                            }\n                        }\n\n                        container.trigger(\"columnSearch_grid.jstree\");\n                    } else {\n                        matched = omniSearchCallback(str, node);\n                        container.trigger(\"omniSearch_grid.jstree\");\n                    }\n                    return matched;\n                };\n                this._initialized = true;\n            }\n        };\n        this.init = function(el, options) {\n            parent.init.call(this, el, options);\n            this._initialize();\n        };\n        this.bind = function() {\n            parent.bind.call(this);\n            this._initialize();\n            this.element\n                .on(\"move_node.jstree create_node.jstree clean_node.jstree change_node.jstree\", $.proxy(function(e, data) {\n                    var target = this.get_node(data || \"#\", true);\n                    var id = _guid();\n                    this._detachColumns(id);\n                    this._prepare_grid(target);\n                    this._reattachColumns(id);\n                }, this))\n                .on(\"delete_node.jstree\", $.proxy(function(e, data) {\n                    if (data.node.id !== undefined) {\n                        var grid = this.gridWrapper,\n                            removeNodes = [data.node.id],\n                            i;\n                        // add children to remove list\n                        if (data.node && data.node.children_d) {\n                            removeNodes = removeNodes.concat(data.node.children_d);\n                        }\n                        findDataCell(this.uniq, removeNodes, this._gridSettings.gridcols).remove();\n                    }\n                }, this))\n                .on(\"show_node.jstree\", $.proxy(function(e, data) {\n                    this._hideOrShowTree(data.node, false);\n                }, this))\n                .on(\"hide_node.jstree\", $.proxy(function(e, data) {\n                    this._hideOrShowTree(data.node, true);\n                }, this))\n                .on(\"close_node.jstree\", $.proxy(function(e, data) {\n                    this._hide_grid(data.node);\n                }, this))\n                .on(\"open_node.jstree\", $.proxy(function(e, data) {}, this))\n                .on(\"load_node.jstree\", $.proxy(function(e, data) {}, this))\n                .on(\"loaded.jstree\", $.proxy(function(e) {\n                    this._prepare_headers();\n                    this.element.trigger(\"loaded_grid.jstree\");\n                }, this))\n                .on(\"ready.jstree\", $.proxy(function(e, data) {\n                    // find the line-height of the first known node\n                    var anchorHeight = this.element.find(\"[class~='jstree-anchor']:first\").outerHeight(),\n                        q,\n                        cls = this.element.attr(\"class\") || \"\";\n                    $('<style type=\"text/css\">div.jstree-grid-cell-root-' + this.rootid + ' {line-height: ' + anchorHeight + 'px; height: ' + anchorHeight + 'px;}</style>').appendTo(\"head\");\n\n                    // add container classes to the wrapper - EXCEPT those that are added by jstree, i.e. \"jstree\" and \"jstree-*\"\n                    q = cls.split(/\\s+/).map(function(i) {\n                        var match = i.match(/^jstree(-|$)/);\n                        return (match ? \"\" : i);\n                    });\n                    this.gridWrapper.addClass(q.join(\" \"));\n\n                }, this))\n                .on(\"move_node.jstree\", $.proxy(function(e, data) {\n                    var node = data.new_instance.element;\n                    //renderAWidth(node,this);\n                    // check all the children, because we could drag a tree over\n                    node.find(\"li > a\").each($.proxy(function(i, elm) {\n                        //renderAWidth($(elm),this);\n                    }, this));\n\n                }, this))\n                .on(\"hover_node.jstree\", $.proxy(function(node, selected, event) {\n                    var id = selected.node.id;\n                    if (this._hover_node !== null && this._hover_node !== undefined) {\n                        findDataCell(this.uniq, this._hover_node, this._gridSettings.gridcols).removeClass(\"jstree-hovered\");\n                    }\n                    this._hover_node = id;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass(\"jstree-hovered\");\n                }, this))\n                .on(\"dehover_node.jstree\", $.proxy(function(node, selected, event) {\n                    var id = selected.node.id;\n                    this._hover_node = null;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass(\"jstree-hovered\");\n                }, this))\n                .on(\"select_node.jstree\", $.proxy(function(node, selected, event) {\n                    var id = selected.node.id;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass(\"jstree-clicked\");\n                    this.get_node(selected.node.id, true).children(\"div.jstree-grid-cell\").addClass(\"jstree-clicked\");\n                }, this))\n                .on(\"deselect_node.jstree\", $.proxy(function(node, selected, event) {\n                    var id = selected.node.id;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass(\"jstree-clicked\");\n                }, this))\n                .on(\"deselect_all.jstree\", $.proxy(function(node, selected, event) {\n                    // get all of the ids that were unselected\n                    var ids = selected.node || [],\n                        i;\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(\"jstree-clicked\");\n                }, this))\n                .on(\"search.jstree\", $.proxy(function(e, data) {\n                    // search sometimes filters, so we need to hide all of the appropriate grid cells as well, and show only the matches\n                    var grid = this.gridWrapper,\n                        that = this,\n                        nodesToShow, startTime = new Date().getTime(),\n                        ids = getIds(data.nodes.filter(\".jstree-node\")),\n                        endTime;\n                    this.holdingCells = {};\n                    if (data.nodes.length) {\n                        var id = _guid();\n                        // save the cells we will hide\n                        var cells = grid.find('div.jstree-grid-cell-regular');\n                        this._detachColumns(id);\n                        if (this._data.search.som) {\n                            // create the list of nodes we want to look at\n                            if (this._data.search.smc) {\n                                nodesToShow = data.nodes.add(data.nodes.find('.jstree-node'));\n                            }\n                            nodesToShow = (nodesToShow || data.nodes).add(data.nodes.parentsUntil(\".jstree\"));\n\n                            // hide all of the grid cells\n                            cells.hide();\n                            // show only those that match\n                            nodesToShow.filter(\".jstree-node\").each(function(i, node) {\n                                var id = node.id;\n                                if (id) {\n                                    that._prepare_grid(node);\n                                    for (var i = 0, len = that._gridSettings.gridcols.length; i < len; i++) {\n                                        if (i === that._gridSettings.treecol) {\n                                            continue;\n                                        }\n                                        findDataCell(that.uniq, id, that._gridSettings.gridcols[i], $(that._domManipulation.columns[i])).show();\n                                    }\n                                }\n                            });\n                        }\n\n                        for (var i = 0, len = this._gridSettings.gridcols.length; i < len; i++) {\n                            if (i === this._gridSettings.treecol) {\n                                continue;\n                            }\n                            findDataCell(that.uniq, ids, this._gridSettings.gridcols[i], $(this._domManipulation.columns[i])).addClass(SEARCHCLASS);\n                        }\n                        this._reattachColumns(id);\n                        endTime = new Date().getTime();\n                        this.element.trigger(\"search-complete.jstree-grid\", [{\n                            time: endTime - startTime\n                        }]);\n                    }\n                    return true;\n                }, this))\n                .on(\"clear_search.jstree\", $.proxy(function(e, data) {\n                    // search has been cleared, so we need to show all rows\n                    var grid = this.gridWrapper,\n                        ids = getIds(data.nodes.filter(\".jstree-node\"));\n                    grid.find('div.jstree-grid-cell').show();\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(SEARCHCLASS);\n                    return true;\n                }, this))\n                .on(\"copy_node.jstree\", function(e, data) {\n                    var newtree = data.new_instance,\n                        oldtree = data.old_instance,\n                        obj = newtree.get_node(data.node, true);\n                    copyData(oldtree, data.original, newtree, data.node, true);\n                    newtree._detachColumns(obj.id);\n                    newtree._prepare_grid(obj);\n                    newtree._reattachColumns(obj.id);\n                    return true;\n                })\n                .on(\"show_ellipsis.jstree\", $.proxy(function(e, data) {\n                    this.gridWrapper.find(\".jstree-grid-cell\").add(\".jstree-grid-header\", this.gridWrapper).addClass(\"jstree-grid-ellipsis\");\n                    return true;\n                }, this))\n                .on(\"hide_ellipsis.jstree\", $.proxy(function(e, data) {\n                    this.gridWrapper.find(\".jstree-grid-cell\").add(\".jstree-grid-header\", this.gridWrapper).removeClass(\"jstree-grid-ellipsis\");\n                    return true;\n                }, this));\n            if (this._gridSettings.isThemeroller) {\n                this.element\n                    .on(\"select_node.jstree\", $.proxy(function(e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").addClass(\"ui-state-active\");\n                    }, this))\n                    .on(\"deselect_node.jstree deselect_all.jstree\", $.proxy(function(e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").removeClass(\"ui-state-active\");\n                    }, this))\n                    .on(\"hover_node.jstree\", $.proxy(function(e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").addClass(\"ui-state-hover\");\n                    }, this))\n                    .on(\"dehover_node.jstree\", $.proxy(function(e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").removeClass(\"ui-state-hover\");\n                    }, this));\n            }\n\n            if (this._gridSettings.stateful) {\n                this.element\n                    .on(\"resize_column.jstree-grid\", $.proxy(function(e, col, width) {\n                        localStorage['jstree-root-' + this.rootid + '-column-' + col] = width;\n                    }, this));\n            }\n        };\n\n        // tear down the tree entirely\n        this.teardown = function() {\n            var gw = this.gridWrapper,\n                container = this.element,\n                gridparent = gw.parent();\n            container.detach();\n            gw.remove();\n            gridparent.append(container);\n            parent.teardown.call(this);\n        };\n        // clean the grid in case of redraw or refresh entire tree\n        this._clean_grid = function(target, id) {\n            var grid = this.gridWrapper;\n            if (target) {\n                findDataCell(this.uniq, id, this._gridSettings.gridcols).remove();\n            } else {\n                // get all of the `div` children in all of the `td` in dataRow except for :first (that is the tree itself) and remove\n                grid.find(\"div.jstree-grid-cell-regular\").remove();\n            }\n        };\n        // prepare the headers\n        this._prepare_headers = function() {\n            var header, i, col, _this = this,\n                gs = this._gridSettings,\n                cols = gs.columns || [],\n                width, defaultWidth = gs.columnWidth,\n                resizable = gs.resizable || false,\n                cl, ccl, val, name, last, tr = gs.isThemeroller,\n                classAdd = (tr ? \"themeroller\" : \"regular\"),\n                puller,\n                hasHeaders = false,\n                gridparent = this.gridparent,\n                rootid = this.rootid,\n                conf = gs.defaultConf,\n                coluuid,\n                borPadWidth = 0,\n                totalWidth = 0;\n\n            // save the original parent so we can reparent on destroy\n            this.parent = gridparent;\n\n            // save the references to columns by unique ID\n            this.colrefs = {};\n\n\n            // create the headers\n            for (var i = 0, len = cols.length; i < len; i++) {\n                //col = $(\"<col/>\");\n                //col.appendTo(colgroup);\n                cl = cols[i].headerClass || \"\";\n                ccl = cols[i].columnClass || \"\";\n                val = cols[i].header || \"\";\n                do {\n                    coluuid = String(Math.floor(Math.random() * 10000));\n                } while (this.colrefs[coluuid] !== undefined);\n                // create a unique name for this column\n                name = cols[i].value ? coluuid : \"text\";\n                this.colrefs[name] = cols[i];\n\n                if (val) {\n                    hasHeaders = true;\n                }\n                if (gs.stateful && localStorage['jstree-root-' + rootid + '-column-' + i])\n                    width = localStorage['jstree-root-' + rootid + '-column-' + i];\n                else\n                    width = cols[i].width || defaultWidth;\n\n                var minWidth = cols[i].minWidth || width;\n                var maxWidth = cols[i].maxWidth || width;\n\n                // we only deal with borders if width is not auto and not percentages\n                borPadWidth = tr ? 1 + 6 : 2 + 8; // account for the borders and padding\n                if (width !== 'auto' && typeof(width) !== \"string\") {\n                    width -= borPadWidth;\n                }\n                col = this.midWrapper.children(\"div.jstree-grid-column-\" + i);\n                last = $(\"<div></div>\").css(conf).addClass(\"jstree-grid-div-\" + this.uniq + \"-\" + i + \" \" + (tr ? \"ui-widget-header \" : \"\") + \" jstree-grid-header jstree-grid-header-cell jstree-grid-header-\" + classAdd + \" \" + cl + \" \" + ccl).html(val);\n                last.addClass((tr ? \"ui-widget-header \" : \"\") + \"jstree-grid-header jstree-grid-header-\" + classAdd);\n                if (this.settings.core.themes.ellipsis === true) {\n                    last.addClass('jstree-grid-ellipsis');\n                }\n                last.prependTo(col);\n                last.attr(COL_DATA_ATTR, name);\n                totalWidth += last.outerWidth();\n                puller = $(\"<div class='jstree-grid-separator jstree-grid-separator-\" + classAdd + (tr ? \" ui-widget-header\" : \"\") + (resizable ? \" jstree-grid-resizable-separator\" : \"\") + \"'>&nbsp;</div>\").appendTo(last);\n                col.width(width);\n                col.css(\"min-width\", minWidth);\n                col.css(\"max-width\", maxWidth);\n            }\n\n            last.addClass((tr ? \"ui-widget-header \" : \"\") + \"jstree-grid-header jstree-grid-header-last jstree-grid-header-\" + classAdd);\n            // if there is no width given for the last column, do it via automatic\n            if (cols[cols.length - 1].width === undefined) {\n                totalWidth -= width;\n                col.css({\n                    width: \"auto\"\n                });\n                last.addClass(\"jstree-grid-width-auto\").next(\".jstree-grid-separator\").remove();\n            }\n            if (hasHeaders) {\n                // save the offset of the div from the body\n                //gs.divOffset = header.parent().offset().left;\n                gs.header = header;\n            } else {\n                $(\"div.jstree-grid-header\").hide();\n            }\n\n            if (!this.bound && resizable) {\n                this.bound = true;\n                $(document).mouseup(function() {\n                    var ref, cols, width, headers, currentTree, colNum;\n                    if (isClickedSep) {\n                        colNum = toResize.prevAll(\".jstree-grid-column\").length;\n                        currentTree = toResize.closest(\".jstree-grid-wrapper\").find(\".jstree\");\n                        ref = $.jstree.reference(currentTree);\n                        cols = ref.settings.grid.columns;\n                        headers = toResize.parent().children(\"div.jstree-grid-column\");\n                        if (isNaN(colNum) || colNum < 0) {\n                            ref._gridSettings.treeWidthDiff = currentTree.find(\"ins:eq(0)\").width() + currentTree.find(\"[class~='jstree-anchor']:eq(0)\").width() - ref._gridSettings.columns[0].width;\n                        }\n                        width = ref._gridSettings.columns[colNum].width = parseFloat(toResize.css(\"width\"));\n                        isClickedSep = false;\n                        toResize = null;\n\n                        currentTree.trigger(\"resize_column.jstree-grid\", [colNum, width]);\n                    }\n                }).mousemove(function(e) {\n                    if (isClickedSep) {\n                        newMouseX = e.pageX;\n                        var diff = newMouseX - oldMouseX,\n                            oldPrevHeaderInner,\n                            oldPrevColWidth, newPrevColWidth;\n\n                        if (diff !== 0) {\n                            oldPrevHeaderInner = toResize.width();\n                            oldPrevColWidth = parseFloat(toResize.css(\"width\"));\n\n                            // handle a Chrome issue with columns set to auto\n                            // thanks to Brabus https://github.com/side-by-side\n                            if (!oldPrevColWidth) {\n                                oldPrevColWidth = toResize.innerWidth();\n                            }\n\n                            // make sure that diff cannot be beyond the left/right limits\n                            diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\n                            newPrevColWidth = oldPrevColWidth + diff;\n\n                            // only do this if we are not shrinking past 0 on left - and limit it to that amount\n                            if ((diff > 0 || oldPrevHeaderInner > 0) && newPrevColWidth > MINCOLWIDTH) {\n                                toResize.width(newPrevColWidth + \"px\");\n                                toResize.css(\"min-width\", newPrevColWidth + \"px\");\n                                toResize.css(\"max-width\", newPrevColWidth + \"px\");\n                                oldMouseX = newMouseX;\n                            }\n                        }\n                    }\n                });\n                this.gridWrapper.on(\"selectstart\", \".jstree-grid-resizable-separator\", function() {\n                        return false;\n                    }).on(\"mousedown\", \".jstree-grid-resizable-separator\", function(e) {\n                        isClickedSep = true;\n                        oldMouseX = e.pageX;\n                        toResize = $(this).closest(\"div.jstree-grid-column\");\n                        // the max rightmost position we will allow is the right-most of the wrapper minus a buffer (10)\n                        return false;\n                    })\n                    .on(\"dblclick\", \".jstree-grid-resizable-separator\", function(e) {\n                        var clickedSep = $(this),\n                            col = clickedSep.closest(\"div.jstree-grid-column\"),\n                            oldPrevColWidth = parseFloat(col.css(\"width\")),\n                            newWidth = 0,\n                            diff,\n                            colNum = col.prevAll(\".jstree-grid-column\").length,\n                            oldPrevHeaderInner = col.width(),\n                            newPrevColWidth;\n\n\n                        //find largest width\n                        col.find(\".jstree-grid-cell\").each(function() {\n                            var item = $(this),\n                                width;\n                            item.css(\"position\", \"absolute\");\n                            item.css(\"width\", \"auto\");\n                            width = item.outerWidth();\n                            item.css(\"position\", \"relative\");\n\n                            if (width > newWidth) {\n                                newWidth = width;\n                            }\n                        });\n\n                        diff = newWidth - oldPrevColWidth;\n\n                        // make sure that diff cannot be beyond the left limits\n                        diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\n                        newPrevColWidth = (oldPrevColWidth + diff) + \"px\";\n\n                        col.width(newPrevColWidth);\n                        col.css(\"min-width\", newPrevColWidth);\n                        col.css(\"max-width\", newPrevColWidth);\n\n                        $(this).closest(\".jstree-grid-wrapper\").find(\".jstree\").trigger(\"resize_column.jstree-grid\", [colNum, newPrevColWidth]);\n                    })\n                    .on(\"click\", \".jstree-grid-separator\", function(e) {\n                        // don't sort after resize\n                        e.stopPropagation();\n                    });\n            }\n            this.gridWrapper.on(\"click\", \".jstree-grid-header-cell\", function(e) {\n                if (!_this.sort) {\n                    return;\n                }\n\n                // get column\n                var name = $(this).attr(COL_DATA_ATTR);\n\n                // sort order\n                var symbol;\n                if (gs.sortOrder === name && gs.sortAsc === true) {\n                    gs.sortAsc = false;\n                    symbol = \"&darr;\";\n                } else {\n                    gs.sortOrder = name;\n                    gs.sortAsc = true;\n                    symbol = \"&uarr;\";\n                }\n\n                // add sort arrow\n                $(this.closest('.jstree-grid-wrapper')).find(\".jstree-grid-sort-icon\").remove();\n                $(\"<span></span>\").addClass(\"jstree-grid-sort-icon\").appendTo($(this)).html(symbol);\n\n                // sort by column\n                var rootNode = _this.get_node('#');\n                _this.sort(rootNode, true);\n                _this.redraw_node(rootNode, true);\n            });\n\n        };\n\n        this._domManipulation = null; // We'll store the column nodes in this object and an id for the grid-node that started the manipulation { id: \"id of the node that started the manipulation\", columns: { Key-Value-Pair col-No: Column }}\n\n        function _guid() {\n            function s4() {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n                s4() + '-' + s4() + s4() + s4();\n        }\n        /*\n         * Trys to detach the tree columns on massive dom manipulations\n         */\n        this._detachColumns = function(id) {\n            // if the columns are not detached, then detach them\n            if (this._domManipulation == null) {\n                var cols = this._gridSettings.columns || [],\n                    treecol = this._gridSettings.treecol,\n                    mw = this.midWrapper;\n                this._domManipulation = {\n                    id: id,\n                    columns: {}\n                };\n                for (var i = 0, len = cols.length; i < len; i++) {\n                    //if (treecol === i) {\n                    //  continue;\n                    //}\n                    this._domManipulation.columns[i] = mw.children(\".jstree-grid-column-\" + i)[0];\n                    this._domManipulation.columns[i].parentNode.removeChild(this._domManipulation.columns[i]);\n                }\n            }\n            return this._domManipulation;\n        }\n\n        this._reattachColumns = function(id) {\n            if (this._domManipulation == null) {\n                return false;\n            }\n            if (this._domManipulation.id === id) {\n                var cols = this._gridSettings.columns || [],\n                    treecol = this._gridSettings.treecol,\n                    mw = this.midWrapper;\n                for (var i = 0, len = cols.length; i < len; i++) {\n                    //if (treecol === i) {\n                    //  continue;\n                    //}\n                    mw[0].appendChild(this._domManipulation.columns[i]);\n                }\n                this._domManipulation = null;\n            }\n            return true;\n        }\n\n        /*\n         * Override open_node to detach the columns before redrawing child-nodes, and do reattach them afterwarts\n         */\n        this.open_node = function(obj, callback, animation) {\n            var isArray = $.isArray(obj);\n            var node = null;\n            if (!isArray) {\n                node = this.get_node(obj);\n                if (node.id === \"#\") {\n                    return;\n                } // wtf??? we ar in the root and do not need a open!\n            }\n            var id = isArray ? _guid() : node.id;\n            this._detachColumns(id);\n            var ret = parent.open_node.call(this, obj, callback, animation);\n            this._reattachColumns(id);\n            return ret;\n        }\n\n        /*\n         * Override redraw_node to correctly insert the grid\n         */\n        this.redraw_node = function(obj, deep, is_callback, force_render) {\n            var id = $.isArray(obj) ? _guid() : this.get_node(obj).id;\n            // we detach the columns once\n            this._detachColumns(id);\n            // first allow the parent to redraw the node\n            obj = parent.redraw_node.call(this, obj, deep, is_callback, force_render);\n            // next prepare the grid for a redrawn node - but only if ths node is not hidden (search does that)\n            if (obj) {\n                this._prepare_grid(obj);\n            }\n            // don't forget to reattach\n            this._reattachColumns(id);\n            return obj;\n        };\n        this.refresh = function() {\n            this._clean_grid();\n            return parent.refresh.apply(this, arguments);\n        };\n        /*\n         * Override set_id to update cell attributes\n         */\n        this.set_id = function(obj, id) {\n            var old, uniq = this.uniq;\n            if (obj) {\n                old = obj.id;\n            }\n            var result = parent.set_id.apply(this, arguments);\n            if (result) {\n                if (old !== undefined) {\n                    var grid = this.gridWrapper,\n                        oldNodes = [old],\n                        i;\n                    // get children\n                    if (obj && obj.children_d) {\n                        oldNodes = oldNodes.concat(obj.children_d);\n                    }\n                    // update id in children\n                    findDataCell(uniq, oldNodes, this._gridSettings.gridcols)\n                        .attr(NODE_DATA_ATTR, obj.id)\n                        .removeClass(generateCellId(uniq, old))\n                        .addClass(generateCellId(uniq, obj.id))\n                        .each(function(i, node) {\n                            $(node).attr('id', generateCellId(uniq, obj.id) + (i + 1));\n                        });\n                }\n            }\n            return result;\n        };\n\n        this._hideOrShowTree = function(node, hide) {\n            //Hides or shows a tree\n            this._detachColumns(node.id);\n            // show cells in each detachted column\n            this._hideOrShowNode(node, hide, this._gridSettings.columns || [], this._gridSettings.treecol);\n            this._reattachColumns(node.id);\n        }\n        this._hideOrShowNode = function(node, hide, cols, treecol) {\n            //Hides or shows a node with recursive calls to all open child-nodes\n            for (var i = 0, len = cols.length; i < len; i++) {\n                if (i === treecol) {\n                    continue;\n                }\n                var cells = findDataCell(this.uniq, node.id, i, $(this._domManipulation.columns[i]));\n                if (hide) {\n                    cells.addClass(\"jstree-grid-hidden\");\n                } else {\n                    cells.removeClass(\"jstree-grid-hidden\");\n                }\n            }\n            if (node.state.opened && node.children) {\n                for (var i = 0, len = node.children.length; i < len; i++) {\n                    this._hideOrShowNode(this.get_node(node.children[i]), hide, cols, treecol);\n                }\n            }\n        }\n        this._hide_grid = function(node) {\n            if (!node) {\n                return true;\n            }\n            this._detachColumns(node.id);\n            var children = node.children ? node.children : [],\n                cols = this._gridSettings.columns || [],\n                treecol = this._gridSettings.treecol;\n            // try to remove all children\n            for (var i = 0, len = children.length; i < len; i++) {\n                var child = this.get_node(children[i]);\n                // go through each column, remove all children with the correct ID name\n                for (var j = 0, lenj = cols.length; j < lenj; j++) {\n                    if (j === treecol) {\n                        continue;\n                    }\n                    findDataCell(this.uniq, child.id, j, $(this._domManipulation.columns[j])).remove();\n                }\n                if (child.state.opened) {\n                    this._hide_grid(child);\n                }\n            }\n\n\n            this._reattachColumns(node.id);\n        };\n        this.holdingCells = {};\n        this.getHoldingCells = function(obj, col, hc) {\n            if (obj.state.hidden || !obj.state.opened) {\n                return $();\n            }\n            var ret = $(),\n                children = obj.children || [],\n                child, i, uniq = this.uniq;\n            // run through each child, render it, and then render its children recursively\n            for (i = 0; i < children.length; i++) {\n                child = generateCellId(uniq, children[i]) + col;\n                if (hc[child]) {\n                    ret = ret.add(hc[child]).add(this.getHoldingCells(this.get_node(children[i]), col, hc));\n                    //delete hc[child];\n                }\n            }\n            return (ret);\n        };\n\n        /**\n         * put a grid cell in edit mode (input field to edit the data)\n         * @name edit(obj, col)\n         * @param  {mixed} obj\n         * @param  {obj} col definition\n         * @param  {element} cell element, either span or wrapping div\n         */\n        this._edit = function(obj, col, element) {\n            if (!obj) {\n                return false;\n            }\n            if (!obj.data) {\n                obj.data = {};\n            }\n            if (element) {\n                element = $(element);\n                if (element.prop(\"tagName\").toLowerCase() === \"div\") {\n                    element = element.children(\"span:first\");\n                }\n            } else {\n                // need to find the element - later\n                return false;\n            }\n            var rtl = this._data.core.rtl,\n                w = this.element.width(),\n                t = obj.data[col.value],\n                h1 = $(\"<\" + \"div />\", {\n                    css: {\n                        \"position\": \"absolute\",\n                        \"top\": \"-200px\",\n                        \"left\": (rtl ? \"0px\" : \"-1000px\"),\n                        \"visibility\": \"hidden\"\n                    }\n                }).appendTo(\"body\"),\n                h2 = $(\"<\" + \"input />\", {\n                    \"value\": t,\n                    \"class\": \"jstree-rename-input\",\n                    \"css\": {\n                        \"padding\": \"0\",\n                        \"border\": \"1px solid silver\",\n                        \"box-sizing\": \"border-box\",\n                        \"display\": \"inline-block\",\n                        \"height\": (this._data.core.li_height) + \"px\",\n                        \"lineHeight\": (this._data.core.li_height) + \"px\",\n                        \"width\": \"150px\" // will be set a bit further down\n                    },\n                    \"blur\": $.proxy(function() {\n                        var v = h2.val();\n                        // save the value if changed\n                        if (v === \"\" || v === t) {\n                            v = t;\n                        } else {\n                            obj.data[col.value] = v;\n                            this.element.trigger('update_cell.jstree-grid', {\n                                node: obj,\n                                col: col.value,\n                                value: v,\n                                old: t\n                            });\n                            var id = _guid();\n                            this._detachColumns(id);\n                            this._prepare_grid(this.get_node(obj, true));\n                            this._reattachColumns(id);\n                        }\n                        h2.remove();\n                        element.show();\n                    }, this),\n                    \"keydown\": function(event) {\n                        var key = event.which;\n                        if (key === 27) {\n                            this.value = t;\n                        }\n                        if (key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\n                            event.stopImmediatePropagation();\n                        }\n                        if (key === 27 || key === 13) {\n                            event.preventDefault();\n                            this.blur();\n                        }\n                    },\n                    \"click\": function(e) {\n                        e.stopImmediatePropagation();\n                    },\n                    \"mousedown\": function(e) {\n                        e.stopImmediatePropagation();\n                    },\n                    \"keyup\": function(event) {\n                        h2.width(Math.min(h1.text(\"pW\" + this.value).width(), w));\n                    },\n                    \"keypress\": function(event) {\n                        if (event.which === 13) {\n                            return false;\n                        }\n                    }\n                }),\n                fn = {\n                    fontFamily: element.css('fontFamily') || '',\n                    fontSize: element.css('fontSize') || '',\n                    fontWeight: element.css('fontWeight') || '',\n                    fontStyle: element.css('fontStyle') || '',\n                    fontStretch: element.css('fontStretch') || '',\n                    fontVariant: element.css('fontVariant') || '',\n                    letterSpacing: element.css('letterSpacing') || '',\n                    wordSpacing: element.css('wordSpacing') || ''\n                };\n            element.hide();\n            element.parent().append(h2);\n            h2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(), w))[0].select();\n        };\n\n        this.grid_hide_column = function(col) {\n            this.midWrapper.find(\".jstree-grid-column-\" + col).hide();\n        };\n        this.grid_show_column = function(col) {\n            this.midWrapper.find(\".jstree-grid-column-\" + col).show();\n        };\n\n        this._prepare_grid = function(obj) {\n            var gs = this._gridSettings,\n                c = gs.treeClass,\n                _this = this,\n                t,\n                cols = gs.columns || [],\n                width, tr = gs.isThemeroller,\n                uniq = this.uniq,\n                treecol = gs.treecol,\n                tree = this.element,\n                rootid = this.rootid,\n                classAdd = (tr ? \"themeroller\" : \"regular\"),\n                img, objData = this.get_node(obj),\n                defaultWidth = gs.columnWidth,\n                conf = gs.defaultConf,\n                cellClickHandler = function(tree, node, val, col, t) {\n                    return function(e) {\n                        //node = tree.find(\"#\"+node.attr(\"id\"));\n                        var event = eventer.create(\"select_cell.jstree-grid\");\n                        tree.trigger(event, [{\n                            value: val,\n                            column: col.header,\n                            node: node,\n                            grid: $(this),\n                            sourceName: col.value\n                        }]);\n                        if (!event.isDefaultPrevented()) {\n                            node.children(\".jstree-anchor\").trigger(\"click.jstree\", e);\n                        }\n                    };\n                },\n                cellRightClickHandler = function(tree, node, val, col, t) {\n                    return function(e) {\n                        if (gs.gridcontextmenu) {\n                            e.preventDefault();\n                            menu.show(this, {\n                                'x': e.pageX,\n                                'y': e.pageY\n                            }, gs.gridcontextmenu(_this, tree, node, val, col, t, e.target));\n                        }\n                    };\n                },\n                hoverInHandler = function(node, jsTreeInstance) {\n                    return function() {\n                        jsTreeInstance.hover_node(node);\n                    };\n                },\n                hoverOutHandler = function(node, jsTreeInstance) {\n                    return function() {\n                        jsTreeInstance.dehover_node(node);\n                    };\n                },\n                i, val, cl, wcl, ccl, a, last, valClass, wideValClass, span, paddingleft, title, gridCellName, gridCellParentId, gridCellParent,\n                gridCellPrev, gridCellPrevId, gridCellNext, gridCellNextId, gridCellChild, gridCellChildId,\n                col, content, tmpWidth, mw = this.midWrapper,\n                column, lid = objData.id,\n                highlightSearch, isClicked,\n                peers = this.get_node(objData.parent).children,\n                // find my position in the list of peers. \"peers\" is the list of everyone at my level under my parent, in order\n                pos = $.inArray(lid, peers),\n                hc = this.holdingCells,\n                rendered = false,\n                closed;\n            // get our column definition\n            t = $(obj);\n\n            // find the a children\n            a = t.children(\"[class~='jstree-anchor']\");\n            highlightSearch = a.hasClass(SEARCHCLASS);\n            isClicked = a.hasClass(\"jstree-clicked\");\n\n            if (a.length === 1) {\n                closed = !objData.state.opened;\n                gridCellName = generateCellId(uniq, lid);\n                gridCellParentId = objData.parent === \"#\" ? null : objData.parent;\n                a.addClass(c);\n                //renderAWidth(a,_this);\n                renderATitle(a, t, _this);\n                last = a;\n\n                // calculate position ids once\n                gridCellPrevId = pos <= 0 ? objData.parent : findLastClosedNode(this, peers[pos - 1]);\n                gridCellNextId = pos >= peers.length - 1 ? \"NULL\" : peers[pos + 1];\n                gridCellChildId = objData.children && objData.children.length > 0 ? objData.children[0] : \"NULL\";\n\n                // find which column our tree shuld go in\n                var s = this.settings.grid;\n                for (var i = 0, len = cols.length; i < len; i++) {\n                    if (treecol === i) {\n                        continue;\n                    }\n                    col = cols[i];\n                    column = this._domManipulation == null ? mw.children(\"div:eq(\" + i + \")\") : $(this._domManipulation.columns[i]); //Geht the detached column not mw.children(\"div:eq(\"+i+\")\");\n                    // get the cellClass, the wideCellClass, and the columnClass\n                    cl = col.cellClass || \"\";\n                    wcl = col.wideCellClass || \"\";\n                    ccl = col.columnClass || \"\";\n\n                    // add a column class to the Column\n                    column.addClass(ccl);\n\n\n                    // get the contents of the cell - value could be a string or a function\n                    val = getCellData(col.value, objData);\n\n                    if (typeof(col.format) === \"function\") {\n                        val = col.format(val);\n                    }\n\n                    // put images instead of text if needed\n                    if (col.images) {\n                        img = col.images[val] || col.images[\"default\"];\n                        if (img) {\n                            content = img[0] === \"*\" ? '<span class=\"' + img.substr(1) + '\"></span>' : '<img src=\"' + img + '\">';\n                        }\n                    } else {\n                        content = val;\n                    }\n\n                    // content cannot be blank, or it messes up heights\n                    if (content === undefined || content === null || BLANKRE.test(content)) {\n                        content = \"&nbsp;\";\n                    }\n\n                    // get the valueClass\n                    valClass = col.valueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.valueClass] || \"\" : \"\";\n                    if (valClass && col.valueClassPrefix && col.valueClassPrefix !== \"\") {\n                        valClass = col.valueClassPrefix + valClass;\n                    }\n                    // get the wideValueClass\n                    wideValClass = col.wideValueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.wideValueClass] || \"\" : \"\";\n                    if (wideValClass && col.wideValueClassPrefix && col.wideValueClassPrefix !== \"\") {\n                        wideValClass = col.wideValueClassPrefix + wideValClass;\n                    }\n                    // get the title\n                    title = col.title && objData.data !== null && objData.data !== undefined ? objData.data[col.title] || \"\" : \"\";\n                    // strip out HTML\n                    title = title.replace(htmlstripre, '');\n\n                    // get the width\n                    paddingleft = 7;\n                    width = col.width || defaultWidth;\n                    if (width !== 'auto') {\n                        width = tmpWidth || (width - paddingleft);\n                    }\n\n                    last = findDataCell(uniq, lid, i, column);\n                    if (!last || last.length < 1) {\n                        last = $(\"<div></div>\");\n                        $(\"<span></span>\").appendTo(last);\n                        last.attr(\"id\", gridCellName + i);\n                        last.addClass(gridCellName);\n                        last.attr(NODE_DATA_ATTR, lid);\n                        if (highlightSearch) {\n                            last.addClass(SEARCHCLASS);\n                        } else {\n                            last.removeClass(SEARCHCLASS);\n                        }\n                        if (isClicked) {\n                            last.addClass(\"jstree-clicked\");\n                        } else {\n                            last.removeClass(\"jstree-clicked\");\n                        }\n                        if (this.settings.core.themes.ellipsis === true && i !== treecol) {\n                            last.addClass('jstree-grid-ellipsis');\n                        }\n\n                    }\n\n                    // we need to check the hidden-state and see if we need to hide the node\n                    if (objData.state.hidden) {\n                        last.addClass(\"jstree-grid-hidden\");\n                    } else {\n                        last.removeClass(\"jstree-grid-hidden\");\n                    }\n\n                    // we need to put it in the dataCell - after the parent, but the position matters\n                    // if we have no parent, then we are one of the root nodes, but still need to look at peers\n\n\n                    // if we are first, i.e. pos === 0, we go right after the parent;\n                    // if we are not first, and our previous peer (one before us) is closed, we go right after the previous peer cell\n                    // if we are not first, and our previous peer is opened, then we have to find its youngest & lowest closed child (incl. leaf)\n                    //\n                    // probably be much easier to go *before* our next one\n                    // but that one might not be drawn yet\n                    // here is the logic for jstree drawing:\n                    //   it draws peers from first to last or from last to first\n                    //   it draws children before a parent\n                    //\n                    // so I can rely on my *parent* not being drawn, but I cannot rely on my previous peer or my next peer being drawn\n\n                    // so we do the following:\n                    //   1- We are the first child: install after the parent\n                    //   2- Our previous peer is already drawn: install after the previous peer\n                    //   3- Our previous peer is not drawn, we have a child that is drawn: install right before our first child\n                    //   4- Our previous peer is not drawn, we have no child that is drawn, our next peer is drawn: install right before our next peer\n                    //   5- Our previous peer is not drawn, we have no child that is drawn, our next peer is not drawn: install right after parent\n                    gridCellPrev = findDataCell(uniq, gridCellPrevId, i, column);\n                    gridCellNext = findDataCell(uniq, gridCellNextId, i, column);\n                    gridCellChild = findDataCell(uniq, gridCellChildId, i, column);\n                    gridCellParent = findDataCell(uniq, gridCellParentId, i, column);\n\n\n                    // if our parent is already drawn, then we put this in the right order under our parent\n                    if (gridCellParentId) {\n                        if (gridCellParent && gridCellParent.length > 0) {\n                            if (gridCellPrev && gridCellPrev.length > 0) {\n                                last.insertAfter(gridCellPrev);\n                            } else if (gridCellChild && gridCellChild.length > 0) {\n                                last.insertBefore(gridCellChild);\n                            } else if (gridCellNext && gridCellNext.length > 0) {\n                                last.insertBefore(gridCellNext);\n                            } else {\n                                last.insertAfter(gridCellParent);\n                            }\n                            rendered = true;\n                        } else {\n                            rendered = false;\n                        }\n                        // always put it in the holding cells, and then sort when the parent comes in, in case parent is (re)drawn later\n                        hc[gridCellName + i] = last;\n                    } else {\n                        if (gridCellPrev && gridCellPrev.length > 0) {\n                            last.insertAfter(gridCellPrev);\n                        } else if (gridCellChild && gridCellChild.length > 0) {\n                            last.insertBefore(gridCellChild);\n                        } else if (gridCellNext && gridCellNext.length > 0) {\n                            last.insertBefore(gridCellNext);\n                        } else {\n                            last.appendTo(column);\n                        }\n                        rendered = true;\n                    }\n                    // do we have any children waiting for this cell? walk down through the children/grandchildren/etc tree\n                    if (rendered) {\n                        var toRen = this.getHoldingCells(objData, i, hc);\n                        last.after(toRen);\n                    }\n                    // need to make the height of this match the line height of the tree. How?\n                    span = last.children(\"span\");\n\n                    // create a span inside the div, so we can control what happens in the whole div versus inside just the text/background\n                    span.addClass(cl + \" \" + valClass).html(content);\n                    last = last.css(conf).addClass(\"jstree-grid-cell jstree-grid-cell-regular jstree-grid-cell-root-\" + rootid + \" jstree-grid-cell-\" + classAdd + \" \" + wcl + \" \" + wideValClass + (tr ? \" ui-state-default\" : \"\")).addClass(\"jstree-grid-col-\" + i).addClass(\"jstree-animated\");\n                    // add click handler for clicking inside a grid cell\n                    last.click(cellClickHandler(tree, t, val, col, this));\n                    last.on(\"contextmenu\", cellRightClickHandler(tree, t, val, col, this));\n                    last.hover(hoverInHandler(t, this), hoverOutHandler(t, this));\n\n                    if (title) {\n                        span.attr(\"title\", title);\n                    }\n\n                    tree.trigger(\"render_cell.jstree-grid\", [{\n                        value: val,\n                        column: col.header,\n                        node: t,\n                        sourceName: col.value\n                    }]);\n                }\n                last.addClass(\"jstree-grid-cell-last\" + (tr ? \" ui-state-default\" : \"\"));\n                // if there is no width given for the last column, do it via automatic\n                if (cols[cols.length - 1].width === undefined) {\n                    last.addClass(\"jstree-grid-width-auto\").next(\".jstree-grid-separator\").remove();\n                }\n            }\n            this.element.css({\n                'overflow-y': 'auto !important'\n            });\n        };\n        // clean up holding cells\n        this.holdingCells = {};\n\n        // need to do alternating background colors or borders\n    };\n\n    return $;\n});\ndefine('skylark-ui-datatree/plugin/types',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\t\"use strict\";\n\n\tif($.jstree.plugins.types) { return; }\n\n\t/**\n\t * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).\n\t *\n\t * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.\n\t * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.\n\t * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.\n\t * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.\n\t * * `li_attr` an object of values which will be used to add HTML attributes on the resulting LI DOM node (merged with the node's own data)\n\t * * `a_attr` an object of values which will be used to add HTML attributes on the resulting A DOM node (merged with the node's own data)\n\t *\n\t * There are two predefined types:\n\t *\n\t * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.\n\t * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.\n\t *\n\t * @name $.jstree.defaults.types\n\t * @plugin types\n\t */\n\t$.jstree.defaults.types = {\n\t\t'default' : {}\n\t};\n\t$.jstree.defaults.types[$.jstree.root] = {};\n\n\t$.jstree.plugins.types = function (options, parent) {\n\t\tthis.init = function (el, options) {\n\t\t\tvar i, j;\n\t\t\tif(options && options.types && options.types['default']) {\n\t\t\t\tfor(i in options.types) {\n\t\t\t\t\tif(i !== \"default\" && i !== $.jstree.root && options.types.hasOwnProperty(i)) {\n\t\t\t\t\t\tfor(j in options.types['default']) {\n\t\t\t\t\t\t\tif(options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {\n\t\t\t\t\t\t\t\toptions.types[i][j] = options.types['default'][j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tparent.init.call(this, el, options);\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\n\t\t};\n\t\tthis.refresh = function (skip_loading, forget_state) {\n\t\t\tparent.refresh.call(this, skip_loading, forget_state);\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\n\t\t};\n\t\tthis.bind = function () {\n\t\t\tthis.element\n\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\tt = this.settings.types,\n\t\t\t\t\t\t\ti, j, c = 'default', k;\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tc = 'default';\n\t\t\t\t\t\t\tif(m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].original.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].data.jstree.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dpc[i]].type = c;\n\t\t\t\t\t\t\tif(m[dpc[i]].icon === true && t[c].icon !== undefined) {\n\t\t\t\t\t\t\t\tm[dpc[i]].icon = t[c].icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(t[c].li_attr !== undefined && typeof t[c].li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (k in t[c].li_attr) {\n\t\t\t\t\t\t\t\t\tif (t[c].li_attr.hasOwnProperty(k)) {\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].li_attr[k] === undefined) {\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr[k] = t[c].li_attr[k];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr['class'] = t[c].li_attr['class'] + ' ' + m[dpc[i]].li_attr['class'];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(t[c].a_attr !== undefined && typeof t[c].a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (k in t[c].a_attr) {\n\t\t\t\t\t\t\t\t\tif (t[c].a_attr.hasOwnProperty(k)) {\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].a_attr[k] === undefined) {\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr[k] = t[c].a_attr[k];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (k === 'href' && m[dpc[i]].a_attr[k] === '#') {\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['href'] = t[c].a_attr['href'];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['class'] = t[c].a_attr['class'] + ' ' + m[dpc[i]].a_attr['class'];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tm[$.jstree.root].type = $.jstree.root;\n\t\t\t\t\t}, this));\n\t\t\tparent.bind.call(this);\n\t\t};\n\t\tthis.get_json = function (obj, options, flat) {\n\t\t\tvar i, j,\n\t\t\t\tm = this._model.data,\n\t\t\t\topt = options ? $.extend(true, {}, options, {no_id:false}) : {},\n\t\t\t\ttmp = parent.get_json.call(this, obj, opt, flat);\n\t\t\tif(tmp === false) { return false; }\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : \"default\";\n\t\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\t\tdelete tmp[i].id;\n\t\t\t\t\t\tif(tmp[i].li_attr && tmp[i].li_attr.id) {\n\t\t\t\t\t\t\tdelete tmp[i].li_attr.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp[i].a_attr && tmp[i].a_attr.id) {\n\t\t\t\t\t\t\tdelete tmp[i].a_attr.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : \"default\";\n\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\ttmp = this._delete_ids(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis._delete_ids = function (tmp) {\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(var i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i] = this._delete_ids(tmp[i]);\n\t\t\t\t}\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\tdelete tmp.id;\n\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t}\n\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\n\t\t\t\tdelete tmp.a_attr.id;\n\t\t\t}\n\t\t\tif(tmp.children && $.isArray(tmp.children)) {\n\t\t\t\ttmp.children = this._delete_ids(tmp.children);\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar m = obj && obj.id ? (more && more.origin ? more.origin : $.jstree.reference(obj.id)) : null, tmp, d, i, j;\n\t\t\tm = m && m._model && m._model.data ? m._model.data : null;\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"create_node\":\n\t\t\t\tcase \"move_node\":\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\tif(chk !== 'move_node' || $.inArray(obj.id, par.children) === -1) {\n\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\tif(tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_01', 'reason' : 'max_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp.valid_children !== undefined && tmp.valid_children !== -1 && $.inArray((obj.type || 'default'), tmp.valid_children) === -1) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_02', 'reason' : 'valid_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(m && obj.children_d && obj.parents) {\n\t\t\t\t\t\t\td = 0;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\td = Math.max(d, m[obj.children_d[i]].parents.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\td = d - obj.parents.length + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d <= 0 || d === undefined) { d = 1; }\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif(tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_03', 'reason' : 'max_depth prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\t\td++;\n\t\t\t\t\t\t} while(par);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type settings object for a node\n\t\t * @name get_rules(obj)\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @return {Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_rules = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar tmp = this.get_type(obj, true);\n\t\t\tif(tmp.max_depth === undefined) { tmp.max_depth = -1; }\n\t\t\tif(tmp.max_children === undefined) { tmp.max_children = -1; }\n\t\t\tif(tmp.valid_children === undefined) { tmp.valid_children = -1; }\n\t\t\treturn tmp;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type string or settings object for a node\n\t\t * @name get_type(obj [, rules])\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned\n\t\t * @return {String|Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_type = function (obj, rules) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj) ? false : ( rules ? $.extend({ 'type' : obj.type }, this.settings.types[obj.type]) : obj.type);\n\t\t};\n\t\t/**\n\t\t * used to change a node's type\n\t\t * @name set_type(obj, type)\n\t\t * @param {mixed} obj the node to change\n\t\t * @param {String} type the new type\n\t\t * @plugin types\n\t\t */\n\t\tthis.set_type = function (obj, type) {\n\t\t\tvar m = this._model.data, t, t1, t2, old_type, old_icon, k, d, a;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_type(obj[t1], type);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tt = this.settings.types;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!t[type] || !obj) { return false; }\n\t\t\td = this.get_node(obj, true);\n\t\t\tif (d && d.length) {\n\t\t\t\ta = d.children('.jstree-anchor');\n\t\t\t}\n\t\t\told_type = obj.type;\n\t\t\told_icon = this.get_icon(obj);\n\t\t\tobj.type = type;\n\t\t\tif(old_icon === true || !t[old_type] || (t[old_type].icon !== undefined && old_icon === t[old_type].icon)) {\n\t\t\t\tthis.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);\n\t\t\t}\n\n\t\t\t// remove old type props\n\t\t\tif(t[old_type] && t[old_type].li_attr !== undefined && typeof t[old_type].li_attr === 'object') {\n\t\t\t\tfor (k in t[old_type].li_attr) {\n\t\t\t\t\tif (t[old_type].li_attr.hasOwnProperty(k)) {\n\t\t\t\t\t\tif (k === 'id') {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (k === 'class') {\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = (m[obj.id].li_attr['class'] || '').replace(t[old_type].li_attr[k], '');\n\t\t\t\t\t\t\tif (d) { d.removeClass(t[old_type].li_attr[k]); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === t[old_type].li_attr[k]) {\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = null;\n\t\t\t\t\t\t\tif (d) { d.removeAttr(k); }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(t[old_type] && t[old_type].a_attr !== undefined && typeof t[old_type].a_attr === 'object') {\n\t\t\t\tfor (k in t[old_type].a_attr) {\n\t\t\t\t\tif (t[old_type].a_attr.hasOwnProperty(k)) {\n\t\t\t\t\t\tif (k === 'id') {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (k === 'class') {\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = (m[obj.id].a_attr['class'] || '').replace(t[old_type].a_attr[k], '');\n\t\t\t\t\t\t\tif (a) { a.removeClass(t[old_type].a_attr[k]); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === t[old_type].a_attr[k]) {\n\t\t\t\t\t\t\tif (k === 'href') {\n\t\t\t\t\t\t\t\tm[obj.id].a_attr[k] = '#';\n\t\t\t\t\t\t\t\tif (a) { a.attr('href', '#'); }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tdelete m[obj.id].a_attr[k];\n\t\t\t\t\t\t\t\tif (a) { a.removeAttr(k); }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add new props\n\t\t\tif(t[type].li_attr !== undefined && typeof t[type].li_attr === 'object') {\n\t\t\t\tfor (k in t[type].li_attr) {\n\t\t\t\t\tif (t[type].li_attr.hasOwnProperty(k)) {\n\t\t\t\t\t\tif (k === 'id') {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === undefined) {\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = t[type].li_attr[k];\n\t\t\t\t\t\t\tif (d) {\n\t\t\t\t\t\t\t\tif (k === 'class') {\n\t\t\t\t\t\t\t\t\td.addClass(t[type].li_attr[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\td.attr(k, t[type].li_attr[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (k === 'class') {\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = t[type].li_attr[k] + ' ' + m[obj.id].li_attr['class'];\n\t\t\t\t\t\t\tif (d) { d.addClass(t[type].li_attr[k]); }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(t[type].a_attr !== undefined && typeof t[type].a_attr === 'object') {\n\t\t\t\tfor (k in t[type].a_attr) {\n\t\t\t\t\tif (t[type].a_attr.hasOwnProperty(k)) {\n\t\t\t\t\t\tif (k === 'id') {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === undefined) {\n\t\t\t\t\t\t\tm[obj.id].a_attr[k] = t[type].a_attr[k];\n\t\t\t\t\t\t\tif (a) {\n\t\t\t\t\t\t\t\tif (k === 'class') {\n\t\t\t\t\t\t\t\t\ta.addClass(t[type].a_attr[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\ta.attr(k, t[type].a_attr[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (k === 'href' && m[obj.id].a_attr[k] === '#') {\n\t\t\t\t\t\t\tm[obj.id].a_attr['href'] = t[type].a_attr['href'];\n\t\t\t\t\t\t\tif (a) { a.attr('href', t[type].a_attr['href']); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (k === 'class') {\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = t[type].a_attr['class'] + ' ' + m[obj.id].a_attr['class'];\n\t\t\t\t\t\t\tif (a) { a.addClass(t[type].a_attr[k]); }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\t};\n\t// include the types plugin by default\n\t// $.jstree.defaults.plugins.push(\"types\");\n\treturn $;\n\t\n});\n\ndefine('skylark-ui-datatree/plugin/unique',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\t\"use strict\";\n\n\tif($.jstree.plugins.unique) { return; }\n\n\t/**\n\t * stores all defaults for the unique plugin\n\t * @name $.jstree.defaults.unique\n\t * @plugin unique\n\t */\n\t$.jstree.defaults.unique = {\n\t\t/**\n\t\t * Indicates if the comparison should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.unique.case_sensitive\n\t\t * @plugin unique\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * Indicates if white space should be trimmed before the comparison. Default is `false`.\n\t\t * @name $.jstree.defaults.unique.trim_whitespace\n\t\t * @plugin unique\n\t\t */\n\t\ttrim_whitespace : false,\n\t\t/**\n\t\t * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.\n\t\t * @name $.jstree.defaults.unique.duplicate\n\t\t * @plugin unique\n\t\t */\n\t\tduplicate : function (name, counter) {\n\t\t\treturn name + ' (' + counter + ')';\n\t\t}\n\t};\n\n\t$.jstree.plugins.unique = function (options, parent) {\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tif(!par || !par.children) { return true; }\n\t\t\tvar n = chk === \"rename_node\" ? pos : obj.text,\n\t\t\t\tc = [],\n\t\t\t\ts = this.settings.unique.case_sensitive,\n\t\t\t\tw = this.settings.unique.trim_whitespace,\n\t\t\t\tm = this._model.data, i, j, t;\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\tt = m[par.children[i]].text;\n\t\t\t\tif (!s) {\n\t\t\t\t\tt = t.toLowerCase();\n\t\t\t\t}\n\t\t\t\tif (w) {\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t\t\t\t}\n\t\t\t\tc.push(t);\n\t\t\t}\n\t\t\tif(!s) { n = n.toLowerCase(); }\n\t\t\tif (w) { n = n.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, ''); }\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"delete_node\":\n\t\t\t\t\treturn true;\n\t\t\t\tcase \"rename_node\":\n\t\t\t\t\tt = obj.text || '';\n\t\t\t\t\tif (!s) {\n\t\t\t\t\t\tt = t.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tif (w) {\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t\t\t\t\t}\n\t\t\t\t\ti = ($.inArray(n, c) === -1 || (obj.text && t === n));\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_01', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"create_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_04', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_02', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"move_node\":\n\t\t\t\t\ti = ( (obj.parent === par.id && (!more || !more.is_multi)) || $.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_03', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tthis.create_node = function (par, node, pos, callback, is_loaded) {\n\t\t\tif(!node || node.text === undefined) {\n\t\t\t\tif(par === null) {\n\t\t\t\t\tpar = $.jstree.root;\n\t\t\t\t}\n\t\t\t\tpar = this.get_node(par);\n\t\t\t\tif(!par) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tif(!node) { node = {}; }\n\t\t\t\tvar tmp, n, dpc, i, j, m = this._model.data, s = this.settings.unique.case_sensitive, w = this.settings.unique.trim_whitespace, cb = this.settings.unique.duplicate, t;\n\t\t\t\tn = tmp = this.get_string('New node');\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\tt = m[par.children[i]].text;\n\t\t\t\t\tif (!s) {\n\t\t\t\t\t\tt = t.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tif (w) {\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t\t\t\t\t}\n\t\t\t\t\tdpc.push(t);\n\t\t\t\t}\n\t\t\t\ti = 1;\n\t\t\t\tt = n;\n\t\t\t\tif (!s) {\n\t\t\t\t\tt = t.toLowerCase();\n\t\t\t\t}\n\t\t\t\tif (w) {\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t\t\t\t}\n\t\t\t\twhile($.inArray(t, dpc) !== -1) {\n\t\t\t\t\tn = cb.call(this, tmp, (++i)).toString();\n\t\t\t\t\tt = n;\n\t\t\t\t\tif (!s) {\n\t\t\t\t\t\tt = t.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tif (w) {\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode.text = n;\n\t\t\t}\n\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t};\n\t};\n\n\t// include the unique plugin by default\n\t// $.jstree.defaults.plugins.push(\"unique\");\n\treturn $;\n\t\n});\n\ndefine('skylark-ui-datatree/plugin/wholerow',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"../tree\",\n  \"skylark-ui-swt/sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,jstree,sbswt){\n\t\"use strict\";\n\n\tif($.jstree.plugins.wholerow) { return; }\n\n\tvar div = document.createElement('DIV');\n\tdiv.setAttribute('unselectable','on');\n\tdiv.setAttribute('role','presentation');\n\tdiv.className = 'jstree-wholerow';\n\tdiv.innerHTML = '&#160;';\n\t$.jstree.plugins.wholerow = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on('ready.jstree set_state.jstree', $.proxy(function () {\n\t\t\t\t\t\tthis.hide_dots();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\n\t\t\t\t\t\t//div.style.height = this._data.core.li_height + 'px';\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"deselect_all.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"changed.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t\tvar tmp = false, i, j;\n\t\t\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = this.get_node(data.selected[i], true);\n\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\ttmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"open_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"hover_node.jstree dehover_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif(e.type === \"hover_node\" && this.is_disabled(data.node)) { return; }\n\t\t\t\t\t\tthis.get_node(data.node, true).children('.jstree-wholerow')[e.type === \"hover_node\"?\"addClass\":\"removeClass\"]('jstree-wholerow-hovered');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-wholerow\", $.proxy(function (e) {\n\t\t\t\t\t\tif (this._data.contextmenu) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tvar tmp = $.Event('contextmenu', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey, pageX : e.pageX, pageY : e.pageY });\n\t\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t/*!\n\t\t\t\t.on(\"mousedown.jstree touchstart.jstree\", \".jstree-wholerow\", function (e) {\n\t\t\t\t\t\tif(e.target === e.currentTarget) {\n\t\t\t\t\t\t\tvar a = $(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\");\n\t\t\t\t\t\t\te.target = a[0];\n\t\t\t\t\t\t\ta.trigger(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t*/\n\t\t\t\t.on(\"click.jstree\", \".jstree-wholerow\", function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\n\t\t\t\t\t})\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-wholerow\", function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('dblclick', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-leaf > .jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseover.jstree\", \".jstree-wholerow, .jstree-icon\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tif(!this.is_disabled(e.currentTarget)) {\n\t\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseleave.jstree\", \".jstree-node\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this.settings.wholerow) {\n\t\t\t\tthis.element.find(\".jstree-wholerow\").remove();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\n\t\t\tif(obj) {\n\t\t\t\tvar tmp = div.cloneNode(true);\n\t\t\t\t//tmp.style.height = this._data.core.li_height + 'px';\n\t\t\t\tif($.inArray(obj.id, this._data.core.selected) !== -1) { tmp.className += ' jstree-wholerow-clicked'; }\n\t\t\t\tif(this._data.core.focused && this._data.core.focused === obj.id) { tmp.className += ' jstree-wholerow-hovered'; }\n\t\t\t\tobj.insertBefore(tmp, obj.childNodes[0]);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t};\n\t// include the wholerow plugin by default\n\t// $.jstree.defaults.plugins.push(\"wholerow\");\n\n\treturn $;\n\n});\n\ndefine('skylark-ui-datatree/main',[\n    \"skylark-utils/query\",\n    \"./tree\",\n    \"./plugin/changed\",\n    \"./plugin/checkbox\",\n    \"./plugin/conditionalselect\",\n    \"./plugin/contextmenu\",\n    \"./plugin/dnd\",\n    \"./plugin/massload\",\n    \"./plugin/search\",\n    \"./plugin/sort\",\n    \"./plugin/state\",\n    \"./plugin/treegrid\",\n    \"./plugin/types\",\n    \"./plugin/unique\",\n    \"./plugin/wholerow\"\n], function($) {\n    return $;\n});\ndefine('skylark-ui-datatree', ['skylark-ui-datatree/main'], function (main) { return main; });\n\n"]}